<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="namespaceNeoN_1_1finiteVolume_1_1cellCentred_1_1volumeBoundary_1_1detail" kind="namespace" language="C++">
    <compoundname>NeoN::finiteVolume::cellCentred::volumeBoundary::detail</compoundname>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespaceNeoN_1_1finiteVolume_1_1cellCentred_1_1volumeBoundary_1_1detail_1a2864d5431aa5578080a90ff1e791f389" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NeoN::finiteVolume::cellCentred::volumeBoundary::detail::extrapolateValue</definition>
        <argsstring>(Field&lt; ValueType &gt; &amp;domainVector, const UnstructuredMesh &amp;mesh, std::pair&lt; localIdx, localIdx &gt; range)</argsstring>
        <name>extrapolateValue</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::volumeBoundary::detail::extrapolateValue</qualifiedname>
        <param>
          <type><ref refid="classNeoN_1_1Field" kindref="compound">Field</ref>&lt; ValueType &gt; &amp;</type>
          <declname>domainVector</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoN_1_1UnstructuredMesh" kindref="compound">UnstructuredMesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>std::pair&lt; <ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref>, <ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref> &gt;</type>
          <declname>range</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/boundary/volume/extrapolated.hpp" line="24" column="6" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/boundary/volume/extrapolated.hpp" bodystart="24" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoN_1_1finiteVolume_1_1cellCentred_1_1volumeBoundary_1_1detail_1a0d866de55405f02532dc5ab05c5d665b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NeoN::finiteVolume::cellCentred::volumeBoundary::detail::setGradientValue</definition>
        <argsstring>(Field&lt; ValueType &gt; &amp;domainVector, const UnstructuredMesh &amp;mesh, std::pair&lt; localIdx, localIdx &gt; range, ValueType fixedGradient)</argsstring>
        <name>setGradientValue</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::volumeBoundary::detail::setGradientValue</qualifiedname>
        <param>
          <type><ref refid="classNeoN_1_1Field" kindref="compound">Field</ref>&lt; ValueType &gt; &amp;</type>
          <declname>domainVector</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoN_1_1UnstructuredMesh" kindref="compound">UnstructuredMesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>std::pair&lt; <ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref>, <ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref> &gt;</type>
          <declname>range</declname>
        </param>
        <param>
          <type>ValueType</type>
          <declname>fixedGradient</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/boundary/volume/fixedGradient.hpp" line="24" column="6" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/boundary/volume/fixedGradient.hpp" bodystart="24" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoN_1_1finiteVolume_1_1cellCentred_1_1volumeBoundary_1_1detail_1a2ef18c0f426de4e5522a05bf1135e770" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NeoN::finiteVolume::cellCentred::volumeBoundary::detail::setFixedValue</definition>
        <argsstring>(Field&lt; ValueType &gt; &amp;domainVector, std::pair&lt; size_t, size_t &gt; range, ValueType fixedValue)</argsstring>
        <name>setFixedValue</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::volumeBoundary::detail::setFixedValue</qualifiedname>
        <param>
          <type><ref refid="classNeoN_1_1Field" kindref="compound">Field</ref>&lt; ValueType &gt; &amp;</type>
          <declname>domainVector</declname>
        </param>
        <param>
          <type>std::pair&lt; <ref refid="namespaceNeoN_1a5ea7bf3a45fbcf9c6ee454474ab13c06" kindref="member">size_t</ref>, <ref refid="namespaceNeoN_1a5ea7bf3a45fbcf9c6ee454474ab13c06" kindref="member">size_t</ref> &gt;</type>
          <declname>range</declname>
        </param>
        <param>
          <type>ValueType</type>
          <declname>fixedValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/boundary/volume/fixedValue.hpp" line="23" column="6" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/boundary/volume/fixedValue.hpp" bodystart="23" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoN_1_1finiteVolume_1_1cellCentred_1_1volumeBoundary_1_1detail_1a441e4f821471c83004cfef5b1b757259" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NeoN::finiteVolume::cellCentred::volumeBoundary::detail::setSymmetryValue</definition>
        <argsstring>(Field&lt; ValueType &gt; &amp;domainVector, const UnstructuredMesh &amp;mesh, std::pair&lt; localIdx, localIdx &gt; range)</argsstring>
        <name>setSymmetryValue</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::volumeBoundary::detail::setSymmetryValue</qualifiedname>
        <param>
          <type><ref refid="classNeoN_1_1Field" kindref="compound">Field</ref>&lt; ValueType &gt; &amp;</type>
          <declname>domainVector</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoN_1_1UnstructuredMesh" kindref="compound">UnstructuredMesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>std::pair&lt; <ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref>, <ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref> &gt;</type>
          <declname>range</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/boundary/volume/symmetry.hpp" line="22" column="6" declfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/boundary/volume/symmetry.hpp" declline="22" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoN_1_1finiteVolume_1_1cellCentred_1_1volumeBoundary_1_1detail_1a796f3a5b7d1ef50cf6147e53631e77bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void NeoN::finiteVolume::cellCentred::volumeBoundary::detail::setSymmetryValue&lt; NeoN::scalar &gt;</definition>
        <argsstring>(Field&lt; NeoN::scalar &gt; &amp;domainVector, const UnstructuredMesh &amp;mesh, std::pair&lt; localIdx, localIdx &gt; range)</argsstring>
        <name>setSymmetryValue&lt; NeoN::scalar &gt;</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::volumeBoundary::detail::setSymmetryValue&lt; NeoN::scalar &gt;</qualifiedname>
        <param>
          <type><ref refid="classNeoN_1_1Field" kindref="compound">Field</ref>&lt; <ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">NeoN::scalar</ref> &gt; &amp;</type>
          <declname>domainVector</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoN_1_1UnstructuredMesh" kindref="compound">UnstructuredMesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>std::pair&lt; <ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref>, <ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref> &gt;</type>
          <declname>range</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/boundary/volume/symmetry.hpp" line="30" column="8" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/boundary/volume/symmetry.hpp" bodystart="30" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoN_1_1finiteVolume_1_1cellCentred_1_1volumeBoundary_1_1detail_1aec1cc4bb760073caeda2d2e0cf24cab7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void NeoN::finiteVolume::cellCentred::volumeBoundary::detail::setSymmetryValue&lt; NeoN::Vec3 &gt;</definition>
        <argsstring>(Field&lt; NeoN::Vec3 &gt; &amp;domainVector, const UnstructuredMesh &amp;mesh, std::pair&lt; localIdx, localIdx &gt; range)</argsstring>
        <name>setSymmetryValue&lt; NeoN::Vec3 &gt;</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::volumeBoundary::detail::setSymmetryValue&lt; NeoN::Vec3 &gt;</qualifiedname>
        <param>
          <type><ref refid="classNeoN_1_1Field" kindref="compound">Field</ref>&lt; <ref refid="classNeoN_1_1Vec3" kindref="compound">NeoN::Vec3</ref> &gt; &amp;</type>
          <declname>domainVector</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoN_1_1UnstructuredMesh" kindref="compound">UnstructuredMesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>std::pair&lt; <ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref>, <ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref> &gt;</type>
          <declname>range</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/boundary/volume/symmetry.hpp" line="65" column="8" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/boundary/volume/symmetry.hpp" bodystart="65" bodyend="101"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/boundary/volume/extrapolated.hpp" line="17" column="1"/>
  </compounddef>
</doxygen>
