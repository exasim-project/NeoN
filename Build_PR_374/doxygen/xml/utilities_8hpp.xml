<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="utilities_8hpp" kind="file" language="C++">
    <compoundname>utilities.hpp</compoundname>
    <includes refid="scalar_8hpp" local="yes">NeoN/core/primitives/scalar.hpp</includes>
    <includes refid="vec3_8hpp" local="yes">NeoN/core/primitives/vec3.hpp</includes>
    <includes refid="vector_8hpp" local="yes">NeoN/core/vector/vector.hpp</includes>
    <includes refid="CSRMatrix_8hpp" local="yes">NeoN/linearAlgebra/CSRMatrix.hpp</includes>
    <incdepgraph>
      <node id="9">
        <label>NeoN/core/error.hpp</label>
        <link refid="error_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>NeoN/core/executor/CPUExecutor.hpp</label>
        <link refid="CPUExecutor_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>NeoN/core/executor/GPUExecutor.hpp</label>
        <link refid="GPUExecutor_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>NeoN/core/executor/executor.hpp</label>
        <link refid="executor_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>NeoN/core/executor/serialExecutor.hpp</label>
        <link refid="serialExecutor_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>info.hpp</label>
        <link refid="info_8hpp"/>
      </node>
      <node id="6">
        <label>NeoN/core/primitives/label.hpp</label>
        <link refid="label_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>NeoN/core/primitives/scalar.hpp</label>
        <link refid="scalar_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>NeoN/core/primitives/traits.hpp</label>
        <link refid="traits_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>NeoN/core/primitives/vec3.hpp</label>
        <link refid="vec3_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>NeoN/core/vector/vector.hpp</label>
        <link refid="vector_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>NeoN/core/vector/vectorFreeFunctions.hpp</label>
        <link refid="vectorFreeFunctions_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>NeoN/core/view.hpp</label>
        <link refid="view_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>NeoN/linearAlgebra/CSRMatrix.hpp</label>
        <link refid="CSRMatrix_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/utilities.hpp</label>
        <link refid="utilities_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Kokkos_Core.hpp</label>
      </node>
      <node id="7">
        <label>cstdint</label>
      </node>
      <node id="10">
        <label>cstdlib</label>
      </node>
      <node id="11">
        <label>exception</label>
      </node>
      <node id="12">
        <label>iostream</label>
      </node>
      <node id="24">
        <label>limits</label>
      </node>
      <node id="25">
        <label>span</label>
      </node>
      <node id="14">
        <label>sstream</label>
      </node>
      <node id="13">
        <label>string</label>
      </node>
      <node id="22">
        <label>type_traits</label>
      </node>
      <node id="17">
        <label>variant</label>
      </node>
      <node id="26">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceNeoN">NeoN</innernamespace>
    <innernamespace refid="namespaceNeoN_1_1la">NeoN::la</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2024<sp/>-<sp/>2025<sp/>NeoN<sp/>authors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>MIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="scalar_8hpp" kindref="compound">NeoN/core/primitives/scalar.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="vec3_8hpp" kindref="compound">NeoN/core/primitives/vec3.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="vector_8hpp" kindref="compound">NeoN/core/vector/vector.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="CSRMatrix_8hpp" kindref="compound">NeoN/linearAlgebra/CSRMatrix.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceNeoN_1_1la" kindref="compound">NeoN::la</ref></highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>@brief<sp/>given<sp/>a<sp/>vector<sp/>of<sp/>column<sp/>indices<sp/>for<sp/>vector<sp/>matrices<sp/>it<sp/>creates<sp/>the<sp/>unpacked<sp/>scalar</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>version.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>in<sp/>the<sp/>vector<sp/>of<sp/>column<sp/>indices<sp/>for<sp/>a<sp/>packed<sp/>Csr&lt;Vec3&gt;<sp/>matrix</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>unpackedRowOffs<sp/>corresponding<sp/>rowOffsets<sp/>of<sp/>the<sp/>unpacked<sp/>matrix</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>packedRowOffs<sp/>corresponding<sp/>rowOffsets<sp/>of<sp/>the<sp/>packed<sp/>matrix</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>@return<sp/>A<sp/>vector<sp/>containing<sp/>new<sp/>unpacked<sp/>column<sp/>indices</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>@details<sp/>Example<sp/>input<sp/>[0,1,0,1,2,1,2]<sp/>this<sp/>function<sp/>returns<sp/>[0,3,1,4,2,5,0,3,6,1,4,7<sp/>...]<sp/>see</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>example</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>Example:</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/><sp/><sp/>0<sp/>1<sp/>2<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>1<sp/>2<sp/>3<sp/>4<sp/>5<sp/>6<sp/>7<sp/>9<sp/><sp/><sp/><sp/><sp/>column<sp/>index</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[x<sp/>.<sp/>.<sp/>x<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>]</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/><sp/>[x<sp/>x<sp/>.<sp/>]<sp/><sp/><sp/><sp/>[.<sp/>x<sp/>.<sp/>.<sp/>x<sp/>.<sp/>.<sp/>.<sp/>.<sp/>]</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/><sp/>[x<sp/>x<sp/>x<sp/>]<sp/>-&gt;<sp/>[.<sp/>.<sp/>x<sp/>.<sp/>.<sp/>x<sp/>.<sp/>.<sp/>.<sp/>]</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/><sp/>[.<sp/>x<sp/>x<sp/>]<sp/><sp/><sp/><sp/>[x<sp/>.<sp/>.<sp/>x<sp/>.<sp/>.<sp/>x<sp/>.<sp/>.<sp/>]</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[.<sp/>x<sp/>.<sp/>.<sp/>x<sp/>.<sp/>.<sp/>x<sp/>.<sp/>]</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[.<sp/>.<sp/>x<sp/>.<sp/>.<sp/>x<sp/>.<sp/>.<sp/>x<sp/>]</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[.<sp/>.<sp/>.<sp/>x<sp/>.<sp/>.<sp/>x<sp/>.<sp/>.<sp/>]</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[.<sp/>.<sp/>.<sp/>.<sp/>x<sp/>.<sp/>.<sp/>x<sp/>.<sp/>]</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>x<sp/>.<sp/>.<sp/>x<sp/>]</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/><sp/>packed<sp/><sp/><sp/><sp/><sp/><sp/>unpacked</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/><sp/>sparsity<sp/><sp/><sp/><sp/>sparsity</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="namespaceNeoN_1_1la_1ad6d454dd6fb2e31259a6349219c08629" refkind="member"><highlight class="normal"><ref refid="classNeoN_1_1Vector" kindref="compound">Vector&lt;localIdx&gt;</ref><sp/><ref refid="namespaceNeoN_1_1la_1ad6d454dd6fb2e31259a6349219c08629" kindref="member">unpackColIdx</ref>(</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNeoN_1_1Vector" kindref="compound">Vector&lt;localIdx&gt;</ref>&amp;<sp/>in,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNeoN_1_1Vector" kindref="compound">Vector&lt;localIdx&gt;</ref>&amp;<sp/>unpackedRowOffs,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNeoN_1_1Vector" kindref="compound">Vector&lt;localIdx&gt;</ref>&amp;<sp/>packedRowOffs</highlight></codeline>
<codeline lineno="44"><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>@brief<sp/>computed<sp/>unpacked<sp/>rowOffs<sp/>from<sp/>packed<sp/>rowOffs</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>@details<sp/>given<sp/>a<sp/>sparsity<sp/>pattern<sp/>every<sp/>row<sp/>with<sp/>Vec3<sp/>entries<sp/>is<sp/>unpacked</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>by<sp/>copying<sp/>its<sp/>y<sp/>and<sp/>z<sp/>components<sp/>after<sp/>the<sp/>initial<sp/>row.<sp/>For</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>example<sp/>[{x,y,z}]<sp/>will<sp/>result<sp/>in</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>[x<sp/>.<sp/>.]</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>[.<sp/>y<sp/>.]</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>[.<sp/>.<sp/>z]</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>Thus,<sp/>each<sp/>row<sp/>with<sp/>given<sp/>length<sp/>will<sp/>result<sp/>2<sp/>new<sp/>entries<sp/>of<sp/>the<sp/>same<sp/>length</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>in<sp/>the<sp/>unpacked<sp/>vector.<sp/>E.g.<sp/>a<sp/>vector<sp/>of<sp/>packed<sp/>rowOffs<sp/>[0,2,5,7]<sp/>returns</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>[0,2,4,6,9,12,15,17,19,21]<sp/>where<sp/>the<sp/>last<sp/>entries<sp/>is<sp/>the<sp/>total<sp/>number<sp/>of<sp/>rows</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>in<sp/>the<sp/>vector<sp/>rowPtrs<sp/>to<sp/>unpack</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>@return<sp/>A<sp/>vector<sp/>containing<sp/>unpacked<sp/>rowPtrs</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="namespaceNeoN_1_1la_1adfdc10cb52098688762e13b2d0af4493" refkind="member"><highlight class="normal"><ref refid="classNeoN_1_1Vector" kindref="compound">Vector&lt;localIdx&gt;</ref><sp/><ref refid="namespaceNeoN_1_1la_1adfdc10cb52098688762e13b2d0af4493" kindref="member">unpackRowOffs</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNeoN_1_1Vector" kindref="compound">Vector&lt;localIdx&gt;</ref>&amp;<sp/>in);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>@brief<sp/>given<sp/>a<sp/>vector<sp/>of<sp/>Vec3<sp/>(packed)<sp/>this<sp/>returns<sp/>vector<sp/>of<sp/>consecutive<sp/>scalars<sp/>(unpacked)</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/>E.g.<sp/>given<sp/>a<sp/>vector<sp/>[{1,2,3},{4,5,6},{7,8,9}]<sp/>this<sp/>returns<sp/>[1,2,3,4,5,6,7,8,9]</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>in<sp/>the<sp/>vector<sp/>to<sp/>unpack</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/>@return<sp/>A<sp/>vector<sp/>containing<sp/>duplicated<sp/>entries</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="namespaceNeoN_1_1la_1a84a1627be9ccaa6c49ff77ed2a11215a" refkind="member"><highlight class="normal"><ref refid="classNeoN_1_1Vector" kindref="compound">Vector&lt;scalar&gt;</ref><sp/><ref refid="namespaceNeoN_1_1la_1a84a1627be9ccaa6c49ff77ed2a11215a" kindref="member">unpackVecValues</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNeoN_1_1Vector" kindref="compound">Vector&lt;Vec3&gt;</ref>&amp;<sp/>in);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>@brief<sp/>given<sp/>a<sp/>vector<sp/>[1,2,3,4,5,6,7,8,9]<sp/>this<sp/>packs<sp/>it<sp/>into<sp/>[{1,2,3},{4,5,6},{7,8,9}]</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>in<sp/>the<sp/>vector<sp/>to<sp/>duplicate</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*<sp/>@param[out]<sp/>out<sp/>the<sp/>vector<sp/>to<sp/>duplicate</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="namespaceNeoN_1_1la_1ac660a56892c40a7854054c3c1597185f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceNeoN_1_1la_1ac660a56892c40a7854054c3c1597185f" kindref="member">packVecValues</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNeoN_1_1Vector" kindref="compound">Vector&lt;scalar&gt;</ref>&amp;<sp/>in,<sp/><ref refid="classNeoN_1_1Vector" kindref="compound">Vector&lt;Vec3&gt;</ref>&amp;<sp/>out);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>@brief<sp/>given<sp/>a<sp/>vector<sp/>of<sp/>packed<sp/>matrix<sp/>values<sp/>this<sp/>returns<sp/>unpacked<sp/>matrix<sp/>values</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*<sp/>@details</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*<sp/>Given<sp/>an<sp/>input<sp/>row<sp/>[{1,2,3},{4,5,6},{7,8,9}]</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*<sp/>this<sp/>returns<sp/>[1,4,7,2,5,8,3,6,9]</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>in<sp/>vector<sp/>of<sp/>packed<sp/>matrix<sp/>values</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>rowOffs<sp/>the<sp/>rowOffs<sp/>of<sp/>the<sp/>packed<sp/>matrix</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>newRowOffs<sp/>the<sp/>rowOffs<sp/>of<sp/>the<sp/>unpacked<sp/>matrix</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>*<sp/>@return<sp/>A<sp/>vector<sp/>of<sp/>the<sp/>unpacked<sp/>matrix<sp/>values</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="namespaceNeoN_1_1la_1a30676e1fef51ed16b5e6b46e71ef6ed3" refkind="member"><highlight class="normal"><ref refid="classNeoN_1_1Vector" kindref="compound">Vector&lt;scalar&gt;</ref><sp/><ref refid="namespaceNeoN_1_1la_1a30676e1fef51ed16b5e6b46e71ef6ed3" kindref="member">unpackMtxValues</ref>(</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNeoN_1_1Vector" kindref="compound">Vector&lt;Vec3&gt;</ref>&amp;<sp/>in,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNeoN_1_1Vector" kindref="compound">Vector&lt;localIdx&gt;</ref>&amp;<sp/>rowOffs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNeoN_1_1Vector" kindref="compound">Vector&lt;localIdx&gt;</ref>&amp;<sp/>newRowOffs</highlight></codeline>
<codeline lineno="91"><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>@brief<sp/>given<sp/>a<sp/>linear<sp/>system<sp/>consisting<sp/>of<sp/>A,<sp/>b<sp/>and<sp/>x<sp/>the<sp/>operator<sp/>computes<sp/>the<sp/>residual<sp/>vector</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>*<sp/>Ax-b</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mtx,<sp/>the<sp/>corresponding<sp/>matrix</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>b,<sp/>rhs<sp/>vector<sp/>b</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>x,<sp/>initial<sp/>guess<sp/>vector<sp/>x</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*<sp/>@param[out]</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="namespaceNeoN_1_1la_1a0f2ef5235583f6df761bfcb72f6435ea" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceNeoN_1_1la_1a0f2ef5235583f6df761bfcb72f6435ea" kindref="member">computeResidual</ref>(</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNeoN_1_1la_1_1CSRMatrix" kindref="compound">CSRMatrix&lt;scalar, localIdx&gt;</ref>&amp;<sp/>mtx,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNeoN_1_1Vector" kindref="compound">Vector&lt;scalar&gt;</ref>&amp;<sp/>b,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNeoN_1_1Vector" kindref="compound">Vector&lt;scalar&gt;</ref>&amp;<sp/>x,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classNeoN_1_1Vector" kindref="compound">Vector&lt;scalar&gt;</ref>&amp;<sp/>res</highlight></codeline>
<codeline lineno="107"><highlight class="normal">);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/utilities.hpp"/>
  </compounddef>
</doxygen>
