<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="conceptNeoN_1_1dsl_1_1HasTemporalExplicitOperator" kind="concept">
    <compoundname>NeoN::dsl::HasTemporalExplicitOperator</compoundname>
    <includes refid="temporalOperator_8hpp" local="no">temporalOperator.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
    <initializer>template&lt;typename T&gt;
concept <ref refid="conceptNeoN_1_1dsl_1_1HasTemporalExplicitOperator" kindref="compound">NeoN::dsl::HasTemporalExplicitOperator</ref> =  requires(T t) {
    {
        t.explicitOperation(
            std::declval&lt;Vector&lt;typename T::VectorValueType&gt;&amp;&gt;(),
            std::declval&lt;<ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">NeoN::scalar</ref>&gt;(),
            std::declval&lt;<ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">NeoN::scalar</ref>&gt;()
        )
    } -&gt; std::same_as&lt;void&gt;; 
}    </initializer>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" line="19" column="1"/>
  </compounddef>
</doxygen>
