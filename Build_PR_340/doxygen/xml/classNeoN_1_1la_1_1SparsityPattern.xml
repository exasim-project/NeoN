<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classNeoN_1_1la_1_1SparsityPattern" kind="class" language="C++" prot="public">
    <compoundname>NeoN::la::SparsityPattern</compoundname>
    <includes refid="sparsityPattern_8hpp" local="no">sparsityPattern.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classNeoN_1_1la_1_1SparsityPattern_1a6741d7feeeb59a01c3956263194d8d53" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">Executor</ref></type>
        <definition>Executor NeoN::la::SparsityPattern::exec_</definition>
        <argsstring></argsstring>
        <name>exec_</name>
        <qualifiedname>NeoN::la::SparsityPattern::exec_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/sparsityPattern.hpp" line="81" column="14" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/sparsityPattern.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoN_1_1la_1_1SparsityPattern_1a444ffb0a4021074671cc3f52c9c92fb8" prot="private" static="no" mutable="no">
        <type><ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref> &gt;</type>
        <definition>Vector&lt;localIdx&gt; NeoN::la::SparsityPattern::rowOffs_</definition>
        <argsstring></argsstring>
        <name>rowOffs_</name>
        <qualifiedname>NeoN::la::SparsityPattern::rowOffs_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/sparsityPattern.hpp" line="83" column="12" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/sparsityPattern.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoN_1_1la_1_1SparsityPattern_1ab30fa023f92b9d312e50eff3bd84a548" prot="private" static="no" mutable="no">
        <type><ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref> &gt;</type>
        <definition>Vector&lt;localIdx&gt; NeoN::la::SparsityPattern::colIdxs_</definition>
        <argsstring></argsstring>
        <name>colIdxs_</name>
        <qualifiedname>NeoN::la::SparsityPattern::colIdxs_</qualifiedname>
        <briefdescription>
<para>rowOffs map from row to start index in values </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/sparsityPattern.hpp" line="85" column="12" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/sparsityPattern.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoN_1_1la_1_1SparsityPattern_1a4a54be0b7156a189f0983f83f266ebc4" prot="private" static="no" mutable="no">
        <type><ref refid="classNeoN_1_1Array" kindref="compound">Array</ref>&lt; uint8_t &gt;</type>
        <definition>Array&lt;uint8_t&gt; NeoN::la::SparsityPattern::ownerOffset_</definition>
        <argsstring></argsstring>
        <name>ownerOffset_</name>
        <qualifiedname>NeoN::la::SparsityPattern::ownerOffset_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/sparsityPattern.hpp" line="87" column="11" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/sparsityPattern.hpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoN_1_1la_1_1SparsityPattern_1a9b281849f310d27705da74bb5997e946" prot="private" static="no" mutable="no">
        <type><ref refid="classNeoN_1_1Array" kindref="compound">Array</ref>&lt; uint8_t &gt;</type>
        <definition>Array&lt;uint8_t&gt; NeoN::la::SparsityPattern::neighbourOffset_</definition>
        <argsstring></argsstring>
        <name>neighbourOffset_</name>
        <qualifiedname>NeoN::la::SparsityPattern::neighbourOffset_</qualifiedname>
        <briefdescription>
<para>mapping from faceId to lower index in a row </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/sparsityPattern.hpp" line="89" column="11" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/sparsityPattern.hpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoN_1_1la_1_1SparsityPattern_1ada63400c443d82d0efee37eb8292ec44" prot="private" static="no" mutable="no">
        <type><ref refid="classNeoN_1_1Array" kindref="compound">Array</ref>&lt; uint8_t &gt;</type>
        <definition>Array&lt;uint8_t&gt; NeoN::la::SparsityPattern::diagOffset_</definition>
        <argsstring></argsstring>
        <name>diagOffset_</name>
        <qualifiedname>NeoN::la::SparsityPattern::diagOffset_</qualifiedname>
        <briefdescription>
<para>mapping from faceId to upper index in a row </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/sparsityPattern.hpp" line="91" column="11" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/sparsityPattern.hpp" bodystart="91" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classNeoN_1_1la_1_1SparsityPattern_1ace19b3a149b732b8bfb0f03407ad0790" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NeoN::la::SparsityPattern::SparsityPattern</definition>
        <argsstring>(const UnstructuredMesh &amp;mesh)</argsstring>
        <name>SparsityPattern</name>
        <qualifiedname>NeoN::la::SparsityPattern::SparsityPattern</qualifiedname>
        <param>
          <type>const <ref refid="classNeoN_1_1UnstructuredMesh" kindref="compound">UnstructuredMesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/sparsityPattern.hpp" line="25" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1la_1_1SparsityPattern_1ad4e08d16fad5ba55bdd586dbf7f9345b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NeoN::la::SparsityPattern::SparsityPattern</definition>
        <argsstring>(Executor exec, localIdx nRows, localIdx nnzs)</argsstring>
        <name>SparsityPattern</name>
        <qualifiedname>NeoN::la::SparsityPattern::SparsityPattern</qualifiedname>
        <param>
          <type><ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">Executor</ref></type>
          <declname>exec</declname>
        </param>
        <param>
          <type><ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref></type>
          <declname>nRows</declname>
        </param>
        <param>
          <type><ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref></type>
          <declname>nnzs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/sparsityPattern.hpp" line="28" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1la_1_1SparsityPattern_1afd18f433d4e9f765a27078ad85c44541" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NeoN::la::SparsityPattern::SparsityPattern</definition>
        <argsstring>(Array&lt; uint8_t &gt; &amp;&amp;rowOffs, Array&lt; uint8_t &gt; &amp;&amp;colIdxs, Array&lt; uint8_t &gt; &amp;&amp;ownerOffset, Vector&lt; localIdx &gt; &amp;&amp;neighbourOffset, Vector&lt; localIdx &gt; &amp;&amp;diagOffset)</argsstring>
        <name>SparsityPattern</name>
        <qualifiedname>NeoN::la::SparsityPattern::SparsityPattern</qualifiedname>
        <param>
          <type><ref refid="classNeoN_1_1Array" kindref="compound">Array</ref>&lt; uint8_t &gt; &amp;&amp;</type>
          <declname>rowOffs</declname>
        </param>
        <param>
          <type><ref refid="classNeoN_1_1Array" kindref="compound">Array</ref>&lt; uint8_t &gt; &amp;&amp;</type>
          <declname>colIdxs</declname>
        </param>
        <param>
          <type><ref refid="classNeoN_1_1Array" kindref="compound">Array</ref>&lt; uint8_t &gt; &amp;&amp;</type>
          <declname>ownerOffset</declname>
        </param>
        <param>
          <type><ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref> &gt; &amp;&amp;</type>
          <declname>neighbourOffset</declname>
        </param>
        <param>
          <type><ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref> &gt; &amp;&amp;</type>
          <declname>diagOffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/sparsityPattern.hpp" line="30" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1la_1_1SparsityPattern_1a1aaaaf579a4b30d38a616351deae7a37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NeoN::la::SparsityPattern::~SparsityPattern</definition>
        <argsstring>()=default</argsstring>
        <name>~SparsityPattern</name>
        <qualifiedname>NeoN::la::SparsityPattern::~SparsityPattern</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/sparsityPattern.hpp" line="38" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1la_1_1SparsityPattern_1a0019d7bba89fb63cf81a0599eacf5226" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classNeoN_1_1Array" kindref="compound">Array</ref>&lt; uint8_t &gt; &amp;</type>
        <definition>const Array&lt; uint8_t &gt; &amp; NeoN::la::SparsityPattern::ownerOffset</definition>
        <argsstring>() const</argsstring>
        <name>ownerOffset</name>
        <qualifiedname>NeoN::la::SparsityPattern::ownerOffset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/sparsityPattern.hpp" line="41" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1la_1_1SparsityPattern_1a4746b7e03537752efe9d33c089bd5f19" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classNeoN_1_1Array" kindref="compound">Array</ref>&lt; uint8_t &gt; &amp;</type>
        <definition>const Array&lt; uint8_t &gt; &amp; NeoN::la::SparsityPattern::neighbourOffset</definition>
        <argsstring>() const</argsstring>
        <name>neighbourOffset</name>
        <qualifiedname>NeoN::la::SparsityPattern::neighbourOffset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/sparsityPattern.hpp" line="44" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1la_1_1SparsityPattern_1a4ee305a28281ad44785f2f471e3f086e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classNeoN_1_1Array" kindref="compound">Array</ref>&lt; uint8_t &gt; &amp;</type>
        <definition>const Array&lt; uint8_t &gt; &amp; NeoN::la::SparsityPattern::diagOffset</definition>
        <argsstring>() const</argsstring>
        <name>diagOffset</name>
        <qualifiedname>NeoN::la::SparsityPattern::diagOffset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/sparsityPattern.hpp" line="47" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1la_1_1SparsityPattern_1aea716064c5218e9a1a1a084b2d6c10c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classNeoN_1_1Array" kindref="compound">Array</ref>&lt; uint8_t &gt; &amp;</type>
        <definition>Array&lt; uint8_t &gt; &amp; NeoN::la::SparsityPattern::ownerOffset</definition>
        <argsstring>()</argsstring>
        <name>ownerOffset</name>
        <qualifiedname>NeoN::la::SparsityPattern::ownerOffset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/sparsityPattern.hpp" line="50" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1la_1_1SparsityPattern_1a92fe5f570ecfd42e0c1541f2933c02cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classNeoN_1_1Array" kindref="compound">Array</ref>&lt; uint8_t &gt; &amp;</type>
        <definition>Array&lt; uint8_t &gt; &amp; NeoN::la::SparsityPattern::neighbourOffset</definition>
        <argsstring>()</argsstring>
        <name>neighbourOffset</name>
        <qualifiedname>NeoN::la::SparsityPattern::neighbourOffset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/sparsityPattern.hpp" line="53" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1la_1_1SparsityPattern_1a74465382287ceffd7c4d17204e468726" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classNeoN_1_1Array" kindref="compound">Array</ref>&lt; uint8_t &gt; &amp;</type>
        <definition>Array&lt; uint8_t &gt; &amp; NeoN::la::SparsityPattern::diagOffset</definition>
        <argsstring>()</argsstring>
        <name>diagOffset</name>
        <qualifiedname>NeoN::la::SparsityPattern::diagOffset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/sparsityPattern.hpp" line="56" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1la_1_1SparsityPattern_1a6d29f1b333bd1707c73e9ccf35083458" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">Executor</ref> &amp;</type>
        <definition>const Executor &amp; NeoN::la::SparsityPattern::exec</definition>
        <argsstring>() const</argsstring>
        <name>exec</name>
        <qualifiedname>NeoN::la::SparsityPattern::exec</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/sparsityPattern.hpp" line="59" column="20" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/sparsityPattern.hpp" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1la_1_1SparsityPattern_1a4b61740e644820bdffde5a83d98eb840" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref> &gt; &amp;</type>
        <definition>const Vector&lt; localIdx &gt; &amp; NeoN::la::SparsityPattern::colIdxs</definition>
        <argsstring>() const</argsstring>
        <name>colIdxs</name>
        <qualifiedname>NeoN::la::SparsityPattern::colIdxs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/sparsityPattern.hpp" line="62" column="19" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/sparsityPattern.hpp" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1la_1_1SparsityPattern_1ad30c2c87e45dadf1506f988de798f7db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref> &gt; &amp;</type>
        <definition>Vector&lt; localIdx &gt; &amp; NeoN::la::SparsityPattern::colIdxs</definition>
        <argsstring>()</argsstring>
        <name>colIdxs</name>
        <qualifiedname>NeoN::la::SparsityPattern::colIdxs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/sparsityPattern.hpp" line="64" column="13" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/sparsityPattern.hpp" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1la_1_1SparsityPattern_1a4d1a8def1bee369c2c70db32d998d574" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref> &gt; &amp;</type>
        <definition>const Vector&lt; localIdx &gt; &amp; NeoN::la::SparsityPattern::rowOffs</definition>
        <argsstring>() const</argsstring>
        <name>rowOffs</name>
        <qualifiedname>NeoN::la::SparsityPattern::rowOffs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/sparsityPattern.hpp" line="67" column="19" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/sparsityPattern.hpp" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1la_1_1SparsityPattern_1ae3b80db6b70b1b92c71d7c51add12f74" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref> &gt; &amp;</type>
        <definition>Vector&lt; localIdx &gt; &amp; NeoN::la::SparsityPattern::rowOffs</definition>
        <argsstring>()</argsstring>
        <name>rowOffs</name>
        <qualifiedname>NeoN::la::SparsityPattern::rowOffs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/sparsityPattern.hpp" line="70" column="13" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/sparsityPattern.hpp" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1la_1_1SparsityPattern_1af9893bb3c5c0a966a0b0a3b8a7d83fd7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref></type>
        <definition>localIdx NeoN::la::SparsityPattern::rows</definition>
        <argsstring>() const</argsstring>
        <name>rows</name>
        <qualifiedname>NeoN::la::SparsityPattern::rows</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/sparsityPattern.hpp" line="72" column="15" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/sparsityPattern.hpp" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1la_1_1SparsityPattern_1abc480a3a2b330e0c825528785ccccdee" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref></type>
        <definition>localIdx NeoN::la::SparsityPattern::nnz</definition>
        <argsstring>() const</argsstring>
        <name>nnz</name>
        <qualifiedname>NeoN::la::SparsityPattern::nnz</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/sparsityPattern.hpp" line="74" column="15" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/sparsityPattern.hpp" bodystart="74" bodyend="74"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classNeoN_1_1la_1_1SparsityPattern_1acb71fc53e2301685d4fdb181234b8ce0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classNeoN_1_1la_1_1SparsityPattern" kindref="compound">SparsityPattern</ref> &amp;</type>
        <definition>static const SparsityPattern &amp; NeoN::la::SparsityPattern::readOrCreate</definition>
        <argsstring>(const UnstructuredMesh &amp;mesh)</argsstring>
        <name>readOrCreate</name>
        <qualifiedname>NeoN::la::SparsityPattern::readOrCreate</qualifiedname>
        <param>
          <type>const <ref refid="classNeoN_1_1UnstructuredMesh" kindref="compound">UnstructuredMesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/sparsityPattern.hpp" line="77" column="34"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/sparsityPattern.hpp" line="20" column="1" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/sparsityPattern.hpp" bodystart="21" bodyend="92"/>
    <listofallmembers>
      <member refid="classNeoN_1_1la_1_1SparsityPattern_1a4b61740e644820bdffde5a83d98eb840" prot="public" virt="non-virtual"><scope>NeoN::la::SparsityPattern</scope><name>colIdxs</name></member>
      <member refid="classNeoN_1_1la_1_1SparsityPattern_1ad30c2c87e45dadf1506f988de798f7db" prot="public" virt="non-virtual"><scope>NeoN::la::SparsityPattern</scope><name>colIdxs</name></member>
      <member refid="classNeoN_1_1la_1_1SparsityPattern_1ab30fa023f92b9d312e50eff3bd84a548" prot="private" virt="non-virtual"><scope>NeoN::la::SparsityPattern</scope><name>colIdxs_</name></member>
      <member refid="classNeoN_1_1la_1_1SparsityPattern_1a4ee305a28281ad44785f2f471e3f086e" prot="public" virt="non-virtual"><scope>NeoN::la::SparsityPattern</scope><name>diagOffset</name></member>
      <member refid="classNeoN_1_1la_1_1SparsityPattern_1a74465382287ceffd7c4d17204e468726" prot="public" virt="non-virtual"><scope>NeoN::la::SparsityPattern</scope><name>diagOffset</name></member>
      <member refid="classNeoN_1_1la_1_1SparsityPattern_1ada63400c443d82d0efee37eb8292ec44" prot="private" virt="non-virtual"><scope>NeoN::la::SparsityPattern</scope><name>diagOffset_</name></member>
      <member refid="classNeoN_1_1la_1_1SparsityPattern_1a6d29f1b333bd1707c73e9ccf35083458" prot="public" virt="non-virtual"><scope>NeoN::la::SparsityPattern</scope><name>exec</name></member>
      <member refid="classNeoN_1_1la_1_1SparsityPattern_1a6741d7feeeb59a01c3956263194d8d53" prot="private" virt="non-virtual"><scope>NeoN::la::SparsityPattern</scope><name>exec_</name></member>
      <member refid="classNeoN_1_1la_1_1SparsityPattern_1a4746b7e03537752efe9d33c089bd5f19" prot="public" virt="non-virtual"><scope>NeoN::la::SparsityPattern</scope><name>neighbourOffset</name></member>
      <member refid="classNeoN_1_1la_1_1SparsityPattern_1a92fe5f570ecfd42e0c1541f2933c02cf" prot="public" virt="non-virtual"><scope>NeoN::la::SparsityPattern</scope><name>neighbourOffset</name></member>
      <member refid="classNeoN_1_1la_1_1SparsityPattern_1a9b281849f310d27705da74bb5997e946" prot="private" virt="non-virtual"><scope>NeoN::la::SparsityPattern</scope><name>neighbourOffset_</name></member>
      <member refid="classNeoN_1_1la_1_1SparsityPattern_1abc480a3a2b330e0c825528785ccccdee" prot="public" virt="non-virtual"><scope>NeoN::la::SparsityPattern</scope><name>nnz</name></member>
      <member refid="classNeoN_1_1la_1_1SparsityPattern_1a0019d7bba89fb63cf81a0599eacf5226" prot="public" virt="non-virtual"><scope>NeoN::la::SparsityPattern</scope><name>ownerOffset</name></member>
      <member refid="classNeoN_1_1la_1_1SparsityPattern_1aea716064c5218e9a1a1a084b2d6c10c5" prot="public" virt="non-virtual"><scope>NeoN::la::SparsityPattern</scope><name>ownerOffset</name></member>
      <member refid="classNeoN_1_1la_1_1SparsityPattern_1a4a54be0b7156a189f0983f83f266ebc4" prot="private" virt="non-virtual"><scope>NeoN::la::SparsityPattern</scope><name>ownerOffset_</name></member>
      <member refid="classNeoN_1_1la_1_1SparsityPattern_1acb71fc53e2301685d4fdb181234b8ce0" prot="public" virt="non-virtual"><scope>NeoN::la::SparsityPattern</scope><name>readOrCreate</name></member>
      <member refid="classNeoN_1_1la_1_1SparsityPattern_1a4d1a8def1bee369c2c70db32d998d574" prot="public" virt="non-virtual"><scope>NeoN::la::SparsityPattern</scope><name>rowOffs</name></member>
      <member refid="classNeoN_1_1la_1_1SparsityPattern_1ae3b80db6b70b1b92c71d7c51add12f74" prot="public" virt="non-virtual"><scope>NeoN::la::SparsityPattern</scope><name>rowOffs</name></member>
      <member refid="classNeoN_1_1la_1_1SparsityPattern_1a444ffb0a4021074671cc3f52c9c92fb8" prot="private" virt="non-virtual"><scope>NeoN::la::SparsityPattern</scope><name>rowOffs_</name></member>
      <member refid="classNeoN_1_1la_1_1SparsityPattern_1af9893bb3c5c0a966a0b0a3b8a7d83fd7" prot="public" virt="non-virtual"><scope>NeoN::la::SparsityPattern</scope><name>rows</name></member>
      <member refid="classNeoN_1_1la_1_1SparsityPattern_1ace19b3a149b732b8bfb0f03407ad0790" prot="public" virt="non-virtual"><scope>NeoN::la::SparsityPattern</scope><name>SparsityPattern</name></member>
      <member refid="classNeoN_1_1la_1_1SparsityPattern_1ad4e08d16fad5ba55bdd586dbf7f9345b" prot="public" virt="non-virtual"><scope>NeoN::la::SparsityPattern</scope><name>SparsityPattern</name></member>
      <member refid="classNeoN_1_1la_1_1SparsityPattern_1afd18f433d4e9f765a27078ad85c44541" prot="public" virt="non-virtual"><scope>NeoN::la::SparsityPattern</scope><name>SparsityPattern</name></member>
      <member refid="classNeoN_1_1la_1_1SparsityPattern_1a1aaaaf579a4b30d38a616351deae7a37" prot="public" virt="non-virtual"><scope>NeoN::la::SparsityPattern</scope><name>~SparsityPattern</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
