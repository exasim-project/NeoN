<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classNeoN_1_1CPUExecutor" kind="class" language="C++" prot="public">
    <compoundname>NeoN::CPUExecutor</compoundname>
    <includes refid="CPUExecutor_8hpp" local="no">CPUExecutor.hpp</includes>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classNeoN_1_1CPUExecutor_1ad27d6bca464690d7239bbac64c8eda85" prot="public" static="no">
        <type>Kokkos::DefaultHostExecutionSpace</type>
        <definition>using NeoN::CPUExecutor::exec =  Kokkos::DefaultHostExecutionSpace</definition>
        <argsstring></argsstring>
        <name>exec</name>
        <qualifiedname>NeoN::CPUExecutor::exec</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/executor/CPUExecutor.hpp" line="21" column="5" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/core/executor/CPUExecutor.hpp" bodystart="21" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classNeoN_1_1CPUExecutor_1a6877549842d855dc98f628b93e98b7d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NeoN::CPUExecutor::CPUExecutor</definition>
        <argsstring>()</argsstring>
        <name>CPUExecutor</name>
        <qualifiedname>NeoN::CPUExecutor::CPUExecutor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/executor/CPUExecutor.hpp" line="23" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1CPUExecutor_1aa6533b93eed68e0d81d28c72755a0d69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NeoN::CPUExecutor::~CPUExecutor</definition>
        <argsstring>()</argsstring>
        <name>~CPUExecutor</name>
        <qualifiedname>NeoN::CPUExecutor::~CPUExecutor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/executor/CPUExecutor.hpp" line="24" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1CPUExecutor_1ad046e5b1e58b2160850fb579afddea5b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T * NeoN::CPUExecutor::alloc</definition>
        <argsstring>(size_t size) const</argsstring>
        <name>alloc</name>
        <qualifiedname>NeoN::CPUExecutor::alloc</qualifiedname>
        <param>
          <type><ref refid="namespaceNeoN_1a5ea7bf3a45fbcf9c6ee454474ab13c06" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/executor/CPUExecutor.hpp" line="27" column="7" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/core/executor/CPUExecutor.hpp" bodystart="27" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1CPUExecutor_1aab79adc0091fd0aa245bb45971b0ee48" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T * NeoN::CPUExecutor::realloc</definition>
        <argsstring>(void *ptr, size_t newSize) const</argsstring>
        <name>realloc</name>
        <qualifiedname>NeoN::CPUExecutor::realloc</qualifiedname>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="namespaceNeoN_1a5ea7bf3a45fbcf9c6ee454474ab13c06" kindref="member">size_t</ref></type>
          <declname>newSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/executor/CPUExecutor.hpp" line="33" column="7" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/core/executor/CPUExecutor.hpp" bodystart="33" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1CPUExecutor_1af9449358bae9318681beb6fb9ee91391" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void *</type>
        <definition>void * NeoN::CPUExecutor::alloc</definition>
        <argsstring>(size_t size) const</argsstring>
        <name>alloc</name>
        <qualifiedname>NeoN::CPUExecutor::alloc</qualifiedname>
        <param>
          <type><ref refid="namespaceNeoN_1a5ea7bf3a45fbcf9c6ee454474ab13c06" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/executor/CPUExecutor.hpp" line="38" column="10" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/core/executor/CPUExecutor.hpp" bodystart="38" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1CPUExecutor_1afc4a24d464bf4d48f27d40a688d8411d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void *</type>
        <definition>void * NeoN::CPUExecutor::realloc</definition>
        <argsstring>(void *ptr, size_t newSize) const</argsstring>
        <name>realloc</name>
        <qualifiedname>NeoN::CPUExecutor::realloc</qualifiedname>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="namespaceNeoN_1a5ea7bf3a45fbcf9c6ee454474ab13c06" kindref="member">size_t</ref></type>
          <declname>newSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/executor/CPUExecutor.hpp" line="40" column="10" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/core/executor/CPUExecutor.hpp" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1CPUExecutor_1a5232ea309a5b0c1bc39b12fb1a791093" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) NeoN::CPUExecutor::createKokkosView</definition>
        <argsstring>(ValueType *ptr, size_t size) const</argsstring>
        <name>createKokkosView</name>
        <qualifiedname>NeoN::CPUExecutor::createKokkosView</qualifiedname>
        <param>
          <type>ValueType *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="namespaceNeoN_1a5ea7bf3a45fbcf9c6ee454474ab13c06" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>create a Kokkos view for a given ptr </para>
        </briefdescription>
        <detaileddescription>
<para>Based on the executor this function creates a Kokkos view into the data managed by ptr <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to data for which a view should be created </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of elements this view contains </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ValueType</parametername>
</parameternamelist>
<parameterdescription>
<para>The value type the underlying memory holds </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/executor/CPUExecutor.hpp" line="53" column="14" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/core/executor/CPUExecutor.hpp" bodystart="53" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1CPUExecutor_1af6160d830ceda8c68786c82637bcf131" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NeoN::CPUExecutor::free</definition>
        <argsstring>(void *ptr) const noexcept</argsstring>
        <name>free</name>
        <qualifiedname>NeoN::CPUExecutor::free</qualifiedname>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/executor/CPUExecutor.hpp" line="58" column="10" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/core/executor/CPUExecutor.hpp" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1CPUExecutor_1ad9d9cf933b83b89bbab498b34215442d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string NeoN::CPUExecutor::name</definition>
        <argsstring>() const</argsstring>
        <name>name</name>
        <qualifiedname>NeoN::CPUExecutor::name</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/executor/CPUExecutor.hpp" line="60" column="17" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/core/executor/CPUExecutor.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1CPUExecutor_1a45988fe8dd99e92612b1c4c97dd2384b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoN_1_1CPUExecutor_1ad27d6bca464690d7239bbac64c8eda85" kindref="member">exec</ref></type>
        <definition>exec NeoN::CPUExecutor::underlyingExec</definition>
        <argsstring>() const</argsstring>
        <name>underlyingExec</name>
        <qualifiedname>NeoN::CPUExecutor::underlyingExec</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/executor/CPUExecutor.hpp" line="62" column="10" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/core/executor/CPUExecutor.hpp" bodystart="62" bodyend="62"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Executor for handling multicore CPU based parallelization. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/executor/CPUExecutor.hpp" line="17" column="1" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/core/executor/CPUExecutor.hpp" bodystart="18" bodyend="63"/>
    <listofallmembers>
      <member refid="classNeoN_1_1CPUExecutor_1ad046e5b1e58b2160850fb579afddea5b" prot="public" virt="non-virtual"><scope>NeoN::CPUExecutor</scope><name>alloc</name></member>
      <member refid="classNeoN_1_1CPUExecutor_1af9449358bae9318681beb6fb9ee91391" prot="public" virt="non-virtual"><scope>NeoN::CPUExecutor</scope><name>alloc</name></member>
      <member refid="classNeoN_1_1CPUExecutor_1a6877549842d855dc98f628b93e98b7d1" prot="public" virt="non-virtual"><scope>NeoN::CPUExecutor</scope><name>CPUExecutor</name></member>
      <member refid="classNeoN_1_1CPUExecutor_1a5232ea309a5b0c1bc39b12fb1a791093" prot="public" virt="non-virtual"><scope>NeoN::CPUExecutor</scope><name>createKokkosView</name></member>
      <member refid="classNeoN_1_1CPUExecutor_1ad27d6bca464690d7239bbac64c8eda85" prot="public" virt="non-virtual"><scope>NeoN::CPUExecutor</scope><name>exec</name></member>
      <member refid="classNeoN_1_1CPUExecutor_1af6160d830ceda8c68786c82637bcf131" prot="public" virt="non-virtual"><scope>NeoN::CPUExecutor</scope><name>free</name></member>
      <member refid="classNeoN_1_1CPUExecutor_1ad9d9cf933b83b89bbab498b34215442d" prot="public" virt="non-virtual"><scope>NeoN::CPUExecutor</scope><name>name</name></member>
      <member refid="classNeoN_1_1CPUExecutor_1aab79adc0091fd0aa245bb45971b0ee48" prot="public" virt="non-virtual"><scope>NeoN::CPUExecutor</scope><name>realloc</name></member>
      <member refid="classNeoN_1_1CPUExecutor_1afc4a24d464bf4d48f27d40a688d8411d" prot="public" virt="non-virtual"><scope>NeoN::CPUExecutor</scope><name>realloc</name></member>
      <member refid="classNeoN_1_1CPUExecutor_1a45988fe8dd99e92612b1c4c97dd2384b" prot="public" virt="non-virtual"><scope>NeoN::CPUExecutor</scope><name>underlyingExec</name></member>
      <member refid="classNeoN_1_1CPUExecutor_1aa6533b93eed68e0d81d28c72755a0d69" prot="public" virt="non-virtual"><scope>NeoN::CPUExecutor</scope><name>~CPUExecutor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
