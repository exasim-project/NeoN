<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classNeoN_1_1la_1_1Solver" kind="class" language="C++" prot="public">
    <compoundname>NeoN::la::Solver</compoundname>
    <includes refid="linearAlgebra_2solver_8hpp" local="no">solver.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classNeoN_1_1la_1_1Solver_1ab81335a17b157785d7bdb4f9012188e0" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">Executor</ref></type>
        <definition>const Executor NeoN::la::Solver::exec_</definition>
        <argsstring></argsstring>
        <name>exec_</name>
        <qualifiedname>NeoN::la::Solver::exec_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/solver.hpp" line="79" column="20" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/solver.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoN_1_1la_1_1Solver_1aac1d80d63e88c3b857cf4faae06f2d02" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classNeoN_1_1la_1_1SolverFactory" kindref="compound">SolverFactory</ref> &gt;</type>
        <definition>std::unique_ptr&lt;SolverFactory&gt; NeoN::la::Solver::solverInstance_</definition>
        <argsstring></argsstring>
        <name>solverInstance_</name>
        <qualifiedname>NeoN::la::Solver::solverInstance_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/solver.hpp" line="80" column="21" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/solver.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classNeoN_1_1la_1_1Solver_1a22eeb9da95ff4acfe583c774d31d7544" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoN::la::Solver::Solver</definition>
        <argsstring>(const Solver &amp;solver)</argsstring>
        <name>Solver</name>
        <qualifiedname>NeoN::la::Solver::Solver</qualifiedname>
        <param>
          <type>const <ref refid="classNeoN_1_1la_1_1Solver" kindref="compound">Solver</ref> &amp;</type>
          <declname>solver</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/solver.hpp" line="60" column="5" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/solver.hpp" bodystart="60" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1la_1_1Solver_1ab933fc36828c686c03f024bd7e14024d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoN::la::Solver::Solver</definition>
        <argsstring>(Solver &amp;&amp;solver)</argsstring>
        <name>Solver</name>
        <qualifiedname>NeoN::la::Solver::Solver</qualifiedname>
        <param>
          <type><ref refid="classNeoN_1_1la_1_1Solver" kindref="compound">Solver</ref> &amp;&amp;</type>
          <declname>solver</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/solver.hpp" line="63" column="5" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/solver.hpp" bodystart="63" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1la_1_1Solver_1a290350dcd90d29ca8e76c4f3bffb9a37" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoN::la::Solver::Solver</definition>
        <argsstring>(const Executor &amp;exec, std::unique_ptr&lt; SolverFactory &gt; solverInstance)</argsstring>
        <name>Solver</name>
        <qualifiedname>NeoN::la::Solver::Solver</qualifiedname>
        <param>
          <type>const <ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">Executor</ref> &amp;</type>
          <declname>exec</declname>
        </param>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classNeoN_1_1la_1_1SolverFactory" kindref="compound">SolverFactory</ref> &gt;</type>
          <declname>solverInstance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/solver.hpp" line="66" column="5" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/solver.hpp" bodystart="66" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1la_1_1Solver_1a89adc0dc1b0e9c6cfc89ba50493a0db2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoN::la::Solver::Solver</definition>
        <argsstring>(const Executor &amp;exec, const Dictionary &amp;dict)</argsstring>
        <name>Solver</name>
        <qualifiedname>NeoN::la::Solver::Solver</qualifiedname>
        <param>
          <type>const <ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">Executor</ref> &amp;</type>
          <declname>exec</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoN_1_1Dictionary" kindref="compound">Dictionary</ref> &amp;</type>
          <declname>dict</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/solver.hpp" line="69" column="5" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/solver.hpp" bodystart="69" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1la_1_1Solver_1aef4b622474757d28a6f1ffeafaf4cc92" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structNeoN_1_1la_1_1SolverStats" kindref="compound">SolverStats</ref></type>
        <definition>SolverStats NeoN::la::Solver::solve</definition>
        <argsstring>(const LinearSystem&lt; scalar, localIdx &gt; &amp;ls, Vector&lt; scalar &gt; &amp;field) const</argsstring>
        <name>solve</name>
        <qualifiedname>NeoN::la::Solver::solve</qualifiedname>
        <param>
          <type>const <ref refid="classNeoN_1_1la_1_1LinearSystem" kindref="compound">LinearSystem</ref>&lt; <ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">scalar</ref>, <ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref> &gt; &amp;</type>
          <declname>ls</declname>
        </param>
        <param>
          <type><ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">scalar</ref> &gt; &amp;</type>
          <declname>field</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/solver.hpp" line="72" column="17" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/solver.hpp" bodystart="72" bodyend="75"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/solver.hpp" line="55" column="1" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/solver.hpp" bodystart="56" bodyend="81"/>
    <listofallmembers>
      <member refid="classNeoN_1_1la_1_1Solver_1ab81335a17b157785d7bdb4f9012188e0" prot="private" virt="non-virtual"><scope>NeoN::la::Solver</scope><name>exec_</name></member>
      <member refid="classNeoN_1_1la_1_1Solver_1aef4b622474757d28a6f1ffeafaf4cc92" prot="public" virt="non-virtual"><scope>NeoN::la::Solver</scope><name>solve</name></member>
      <member refid="classNeoN_1_1la_1_1Solver_1a22eeb9da95ff4acfe583c774d31d7544" prot="public" virt="non-virtual"><scope>NeoN::la::Solver</scope><name>Solver</name></member>
      <member refid="classNeoN_1_1la_1_1Solver_1ab933fc36828c686c03f024bd7e14024d" prot="public" virt="non-virtual"><scope>NeoN::la::Solver</scope><name>Solver</name></member>
      <member refid="classNeoN_1_1la_1_1Solver_1a290350dcd90d29ca8e76c4f3bffb9a37" prot="public" virt="non-virtual"><scope>NeoN::la::Solver</scope><name>Solver</name></member>
      <member refid="classNeoN_1_1la_1_1Solver_1a89adc0dc1b0e9c6cfc89ba50493a0db2" prot="public" virt="non-virtual"><scope>NeoN::la::Solver</scope><name>Solver</name></member>
      <member refid="classNeoN_1_1la_1_1Solver_1aac1d80d63e88c3b857cf4faae06f2d02" prot="private" virt="non-virtual"><scope>NeoN::la::Solver</scope><name>solverInstance_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
