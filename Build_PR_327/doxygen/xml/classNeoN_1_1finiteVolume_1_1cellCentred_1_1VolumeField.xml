<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField" kind="class" language="C++" prot="public">
    <compoundname>NeoN::finiteVolume::cellCentred::VolumeField</compoundname>
    <basecompoundref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1DomainMixin" prot="public" virt="non-virtual">NeoN::finiteVolume::cellCentred::DomainMixin&lt; ValueType &gt;</basecompoundref>
    <includes refid="volumeField_8hpp" local="no">volumeField.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename ValueType</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField_1acfb7b20a63dd60efdd39a3a438685b40" prot="public" static="no">
        <type>ValueType</type>
        <definition>using NeoN::finiteVolume::cellCentred::VolumeField&lt; ValueType &gt;::VectorValueType =  ValueType</definition>
        <argsstring></argsstring>
        <name>VectorValueType</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::VolumeField::VectorValueType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/fields/volumeField.hpp" line="31" column="5" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/fields/volumeField.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField_1aa677413d6ed4ce0e15175214ed999334" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string NeoN::finiteVolume::cellCentred::VolumeField&lt; ValueType &gt;::key</definition>
        <argsstring></argsstring>
        <name>key</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::VolumeField::key</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/fields/volumeField.hpp" line="197" column="17" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/fields/volumeField.hpp" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField_1ab678df244033b17aac5301924789024e" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string NeoN::finiteVolume::cellCentred::VolumeField&lt; ValueType &gt;::fieldCollectionName</definition>
        <argsstring></argsstring>
        <name>fieldCollectionName</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::VolumeField::fieldCollectionName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/fields/volumeField.hpp" line="198" column="17" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/fields/volumeField.hpp" bodystart="198" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField_1a4c541a4fda30a071dc908b48e37f2d83" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeBoundary" kindref="compound">VolumeBoundary</ref>&lt; ValueType &gt; &gt;</type>
        <definition>std::vector&lt;VolumeBoundary&lt;ValueType&gt; &gt; NeoN::finiteVolume::cellCentred::VolumeField&lt; ValueType &gt;::boundaryConditions_</definition>
        <argsstring></argsstring>
        <name>boundaryConditions_</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::VolumeField::boundaryConditions_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/fields/volumeField.hpp" line="202" column="17" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/fields/volumeField.hpp" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField_1a74eea20f596c22c91c6870908f4bf962" prot="private" static="no" mutable="no">
        <type>std::optional&lt; <ref refid="classNeoN_1_1Database" kindref="compound">Database</ref> * &gt;</type>
        <definition>std::optional&lt;Database*&gt; NeoN::finiteVolume::cellCentred::VolumeField&lt; ValueType &gt;::db_</definition>
        <argsstring></argsstring>
        <name>db_</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::VolumeField::db_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/fields/volumeField.hpp" line="203" column="19" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/fields/volumeField.hpp" bodystart="203" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField_1a30d07c1a4eafcaeb9361cde011f5b709" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoN::finiteVolume::cellCentred::VolumeField&lt; ValueType &gt;::VolumeField</definition>
        <argsstring>(const Executor &amp;exec, std::string name, const UnstructuredMesh &amp;mesh, const std::vector&lt; VolumeBoundary&lt; ValueType &gt; &gt; &amp;boundaryConditions)</argsstring>
        <name>VolumeField</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::VolumeField::VolumeField</qualifiedname>
        <param>
          <type>const <ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">Executor</ref> &amp;</type>
          <declname>exec</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoN_1_1UnstructuredMesh" kindref="compound">UnstructuredMesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeBoundary" kindref="compound">VolumeBoundary</ref>&lt; ValueType &gt; &gt; &amp;</type>
          <declname>boundaryConditions</declname>
        </param>
        <briefdescription>
<para>Constructor for a uninitialized <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField" kindref="compound">VolumeField</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>exec</parametername>
</parameternamelist>
<parameterdescription>
<para>The executor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the field </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mesh</parametername>
</parameternamelist>
<parameterdescription>
<para>The underlying mesh </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>boundaryConditions</parametername>
</parameternamelist>
<parameterdescription>
<para>a vector of boundary conditions </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/fields/volumeField.hpp" line="42" column="5" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/fields/volumeField.hpp" bodystart="42" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField_1a55cd865d13c21b525b1133b82b4ad5de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoN::finiteVolume::cellCentred::VolumeField&lt; ValueType &gt;::VolumeField</definition>
        <argsstring>(const Executor &amp;exec, std::string name, const UnstructuredMesh &amp;mesh, const Vector&lt; ValueType &gt; &amp;internalVector, const std::vector&lt; VolumeBoundary&lt; ValueType &gt; &gt; &amp;boundaryConditions)</argsstring>
        <name>VolumeField</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::VolumeField::VolumeField</qualifiedname>
        <param>
          <type>const <ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">Executor</ref> &amp;</type>
          <declname>exec</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoN_1_1UnstructuredMesh" kindref="compound">UnstructuredMesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref>&lt; ValueType &gt; &amp;</type>
          <declname>internalVector</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeBoundary" kindref="compound">VolumeBoundary</ref>&lt; ValueType &gt; &gt; &amp;</type>
          <declname>boundaryConditions</declname>
        </param>
        <briefdescription>
<para>Constructor for a <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField" kindref="compound">VolumeField</ref> with a given internal field. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>exec</parametername>
</parameternamelist>
<parameterdescription>
<para>The executor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the field </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mesh</parametername>
</parameternamelist>
<parameterdescription>
<para>The underlying mesh </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>internalVector</parametername>
</parameternamelist>
<parameterdescription>
<para>the underlying internal field </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>boundaryConditions</parametername>
</parameternamelist>
<parameterdescription>
<para>a vector of boundary conditions </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/fields/volumeField.hpp" line="65" column="5" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/fields/volumeField.hpp" bodystart="65" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField_1ad24d0a88a2e1158f7d8c7882fb94bc6a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoN::finiteVolume::cellCentred::VolumeField&lt; ValueType &gt;::VolumeField</definition>
        <argsstring>(const Executor &amp;exec, std::string name, const UnstructuredMesh &amp;mesh, const Vector&lt; ValueType &gt; &amp;internalVector, const BoundaryData&lt; ValueType &gt; &amp;boundaryVectors, const std::vector&lt; VolumeBoundary&lt; ValueType &gt; &gt; &amp;boundaryConditions)</argsstring>
        <name>VolumeField</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::VolumeField::VolumeField</qualifiedname>
        <param>
          <type>const <ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">Executor</ref> &amp;</type>
          <declname>exec</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoN_1_1UnstructuredMesh" kindref="compound">UnstructuredMesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref>&lt; ValueType &gt; &amp;</type>
          <declname>internalVector</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoN_1_1BoundaryData" kindref="compound">BoundaryData</ref>&lt; ValueType &gt; &amp;</type>
          <declname>boundaryVectors</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeBoundary" kindref="compound">VolumeBoundary</ref>&lt; ValueType &gt; &gt; &amp;</type>
          <declname>boundaryConditions</declname>
        </param>
        <briefdescription>
<para>Constructor for a <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField" kindref="compound">VolumeField</ref> with a given internal and boundary field. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the field </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mesh</parametername>
</parameternamelist>
<parameterdescription>
<para>The underlying mesh </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>internalVector</parametername>
</parameternamelist>
<parameterdescription>
<para>the underlying internal field </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>boundaryVectors</parametername>
</parameternamelist>
<parameterdescription>
<para>the underlying boundary data fields </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>boundaryConditions</parametername>
</parameternamelist>
<parameterdescription>
<para>a vector of boundary conditions </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/fields/volumeField.hpp" line="88" column="5" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/fields/volumeField.hpp" bodystart="88" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField_1abc7050b5554331e88a9b99e2e6551659" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoN::finiteVolume::cellCentred::VolumeField&lt; ValueType &gt;::VolumeField</definition>
        <argsstring>(const Executor &amp;exec, std::string fieldName, const UnstructuredMesh &amp;mesh, const Field&lt; ValueType &gt; &amp;domainVector, const std::vector&lt; VolumeBoundary&lt; ValueType &gt; &gt; &amp;boundaryConditions, Database &amp;db, std::string dbKey, std::string collectionName)</argsstring>
        <name>VolumeField</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::VolumeField::VolumeField</qualifiedname>
        <param>
          <type>const <ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">Executor</ref> &amp;</type>
          <declname>exec</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>fieldName</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoN_1_1UnstructuredMesh" kindref="compound">UnstructuredMesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoN_1_1Field" kindref="compound">Field</ref>&lt; ValueType &gt; &amp;</type>
          <declname>domainVector</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeBoundary" kindref="compound">VolumeBoundary</ref>&lt; ValueType &gt; &gt; &amp;</type>
          <declname>boundaryConditions</declname>
        </param>
        <param>
          <type><ref refid="classNeoN_1_1Database" kindref="compound">Database</ref> &amp;</type>
          <declname>db</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>dbKey</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>collectionName</declname>
        </param>
        <briefdescription>
<para>Constructor for a <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField" kindref="compound">VolumeField</ref> with a given internal field and database. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>exec</parametername>
</parameternamelist>
<parameterdescription>
<para>The executor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fieldName</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the field </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mesh</parametername>
</parameternamelist>
<parameterdescription>
<para>The underlying mesh </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>internalVector</parametername>
</parameternamelist>
<parameterdescription>
<para>the underlying internal field </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>boundaryConditions</parametername>
</parameternamelist>
<parameterdescription>
<para>a vector of boundary conditions </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>db</parametername>
</parameternamelist>
<parameterdescription>
<para>The database </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dbKey</parametername>
</parameternamelist>
<parameterdescription>
<para>The key of the field in the database </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>collectionName</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the field collection in the database </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/fields/volumeField.hpp" line="112" column="5" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/fields/volumeField.hpp" bodystart="112" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField_1a368f7314c44f59ee0e7de92a2663b21e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoN::finiteVolume::cellCentred::VolumeField&lt; ValueType &gt;::VolumeField</definition>
        <argsstring>(const VolumeField &amp;other)</argsstring>
        <name>VolumeField</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::VolumeField::VolumeField</qualifiedname>
        <param>
          <type>const <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField" kindref="compound">VolumeField</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/fields/volumeField.hpp" line="126" column="5" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/fields/volumeField.hpp" bodystart="126" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField_1ab478b40c9a474b8a733af658ebdb6b7c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NeoN::finiteVolume::cellCentred::VolumeField&lt; ValueType &gt;::correctBoundaryConditions</definition>
        <argsstring>()</argsstring>
        <name>correctBoundaryConditions</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::VolumeField::correctBoundaryConditions</qualifiedname>
        <briefdescription>
<para>Corrects the boundary conditions of the surface field. </para>
        </briefdescription>
        <detaileddescription>
<para>This function applies the <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField_1ab478b40c9a474b8a733af658ebdb6b7c" kindref="member">correctBoundaryConditions()</ref> method to each boundary condition in the field. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/fields/volumeField.hpp" line="138" column="10" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/fields/volumeField.hpp" bodystart="138" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField_1a7170b18c6f8c92f5a81400b4851d3f35" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool NeoN::finiteVolume::cellCentred::VolumeField&lt; ValueType &gt;::hasDatabase</definition>
        <argsstring>() const</argsstring>
        <name>hasDatabase</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::VolumeField::hasDatabase</qualifiedname>
        <briefdescription>
<para>Returns true if the field has a database, false otherwise. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if the field has a database, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/fields/volumeField.hpp" line="151" column="10" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/fields/volumeField.hpp" bodystart="151" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField_1a0bf0e89112c1270710ac5da206e86d22" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoN_1_1Database" kindref="compound">Database</ref> &amp;</type>
        <definition>Database &amp; NeoN::finiteVolume::cellCentred::VolumeField&lt; ValueType &gt;::db</definition>
        <argsstring>()</argsstring>
        <name>db</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::VolumeField::db</qualifiedname>
        <briefdescription>
<para>Retrieves the database. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classNeoN_1_1Database" kindref="compound">Database</ref>&amp; A reference to the database. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/fields/volumeField.hpp" line="158" column="14" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/fields/volumeField.hpp" bodystart="158" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField_1a699b327f5f0b95c980f63693a47c982f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classNeoN_1_1Database" kindref="compound">Database</ref> &amp;</type>
        <definition>const Database &amp; NeoN::finiteVolume::cellCentred::VolumeField&lt; ValueType &gt;::db</definition>
        <argsstring>() const</argsstring>
        <name>db</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::VolumeField::db</qualifiedname>
        <briefdescription>
<para>Retrieves the database. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>const <ref refid="classNeoN_1_1Database" kindref="compound">Database</ref>&amp; A const reference to the database. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/fields/volumeField.hpp" line="174" column="20" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/fields/volumeField.hpp" bodystart="174" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField_1ab687f7bc375f0cb6fb6008d4e5ccf019" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool NeoN::finiteVolume::cellCentred::VolumeField&lt; ValueType &gt;::registered</definition>
        <argsstring>() const</argsstring>
        <name>registered</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::VolumeField::registered</qualifiedname>
        <briefdescription>
<para>Returns true if the field is registered in the database, false otherwise. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if the field is registered in the database, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/fields/volumeField.hpp" line="190" column="10" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/fields/volumeField.hpp" bodystart="190" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField_1abb0f2b7d367e01f755e53021fad3527f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeBoundary" kindref="compound">VolumeBoundary</ref>&lt; ValueType &gt; &gt;</type>
        <definition>std::vector&lt; VolumeBoundary&lt; ValueType &gt; &gt; NeoN::finiteVolume::cellCentred::VolumeField&lt; ValueType &gt;::boundaryConditions</definition>
        <argsstring>() const</argsstring>
        <name>boundaryConditions</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::VolumeField::boundaryConditions</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/fields/volumeField.hpp" line="192" column="17" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/fields/volumeField.hpp" bodystart="192" bodyend="195"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Represents a volume field in a finite volume method. </para>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField" kindref="compound">VolumeField</ref> class is a template class that represents a cell-centered field in a finite volume method. It inherits from the <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1DomainMixin" kindref="compound">DomainMixin</ref> class and provides methods for correcting boundary conditions.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ValueType</parametername>
</parameternamelist>
<parameterdescription>
<para>The value type of the field. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>NeoN::finiteVolume::cellCentred::DomainMixin&lt; ValueType &gt;</label>
        <link refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1DomainMixin"/>
      </node>
      <node id="1">
        <label>NeoN::finiteVolume::cellCentred::VolumeField&lt; ValueType &gt;</label>
        <link refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>NeoN::UnstructuredMesh</label>
        <link refid="classNeoN_1_1UnstructuredMesh"/>
      </node>
      <node id="2">
        <label>NeoN::finiteVolume::cellCentred::DomainMixin&lt; ValueType &gt;</label>
        <link refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1DomainMixin"/>
        <childnode refid="3" relation="usage">
          <edgelabel>mesh_</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>NeoN::finiteVolume::cellCentred::VolumeField&lt; ValueType &gt;</label>
        <link refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/fields/volumeField.hpp" line="26" column="1" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/fields/volumeField.hpp" bodystart="27" bodyend="204"/>
    <listofallmembers>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField_1abb0f2b7d367e01f755e53021fad3527f" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VolumeField</scope><name>boundaryConditions</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField_1a4c541a4fda30a071dc908b48e37f2d83" prot="private" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VolumeField</scope><name>boundaryConditions_</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1DomainMixin_1a8cad826fe324b211022770b2d4eb7a31" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VolumeField</scope><name>boundaryData</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1DomainMixin_1a48d129d28334d8b8c13eb8ffb39de611" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VolumeField</scope><name>boundaryData</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField_1ab478b40c9a474b8a733af658ebdb6b7c" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VolumeField</scope><name>correctBoundaryConditions</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField_1a0bf0e89112c1270710ac5da206e86d22" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VolumeField</scope><name>db</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField_1a699b327f5f0b95c980f63693a47c982f" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VolumeField</scope><name>db</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField_1a74eea20f596c22c91c6870908f4bf962" prot="private" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VolumeField</scope><name>db_</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1DomainMixin_1acff205bf0a76976fccbf70294091587b" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VolumeField</scope><name>DomainMixin</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1DomainMixin_1a38cf4aa6c4a6d47e4f24f4e158950af3" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VolumeField</scope><name>DomainMixin</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1DomainMixin_1ab101449a0835b3a3c07b9815842f35f5" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VolumeField</scope><name>ElementType</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1DomainMixin_1ae06b75408af47206bcfa482f217bdfff" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VolumeField</scope><name>exec</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1DomainMixin_1a530d6feca3956d2671204447cffec235" prot="protected" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VolumeField</scope><name>exec_</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1DomainMixin_1afef01a21b9579a76855ce85e318e2cab" prot="protected" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VolumeField</scope><name>field_</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField_1ab678df244033b17aac5301924789024e" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VolumeField</scope><name>fieldCollectionName</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField_1a7170b18c6f8c92f5a81400b4851d3f35" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VolumeField</scope><name>hasDatabase</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1DomainMixin_1af26fd248fd921be40c9dd98d912feddb" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VolumeField</scope><name>internalVector</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1DomainMixin_1ab222ae003a169c052c2bcf9068eacf85" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VolumeField</scope><name>internalVector</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField_1aa677413d6ed4ce0e15175214ed999334" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VolumeField</scope><name>key</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1DomainMixin_1a6aee693a9887535811934a27d1892e3e" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VolumeField</scope><name>mesh</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1DomainMixin_1ab8c17b9efb6860a6c2dde1f6b67a7c57" prot="protected" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VolumeField</scope><name>mesh_</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1DomainMixin_1adccbbd2c1b3d558ca69c4db20e2f9392" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VolumeField</scope><name>name</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField_1ab687f7bc375f0cb6fb6008d4e5ccf019" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VolumeField</scope><name>registered</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1DomainMixin_1a8848bf626211ed2b6e0192951e61ef9a" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VolumeField</scope><name>size</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField_1acfb7b20a63dd60efdd39a3a438685b40" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VolumeField</scope><name>VectorValueType</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField_1a30d07c1a4eafcaeb9361cde011f5b709" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VolumeField</scope><name>VolumeField</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField_1a55cd865d13c21b525b1133b82b4ad5de" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VolumeField</scope><name>VolumeField</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField_1ad24d0a88a2e1158f7d8c7882fb94bc6a" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VolumeField</scope><name>VolumeField</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField_1abc7050b5554331e88a9b99e2e6551659" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VolumeField</scope><name>VolumeField</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField_1a368f7314c44f59ee0e7de92a2663b21e" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VolumeField</scope><name>VolumeField</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
