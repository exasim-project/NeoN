<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classNeoN_1_1SegmentedVectorView" kind="class" language="C++" prot="public">
    <compoundname>NeoN::SegmentedVectorView</compoundname>
    <includes refid="segmentedVector_8hpp" local="no">segmentedVector.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename ValueType</type>
      </param>
      <param>
        <type>typename IndexType</type>
        <defval><ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">NeoN::localIdx</ref></defval>
      </param>
    </templateparamlist>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classNeoN_1_1SegmentedVectorView_1ac9d5ff1ed74531fe956a31da40b0565e" prot="public" static="no" mutable="no">
        <type><ref refid="classNeoN_1_1View" kindref="compound">View</ref>&lt; ValueType &gt;</type>
        <definition>View&lt;ValueType&gt; NeoN::SegmentedVectorView&lt; ValueType, IndexType &gt;::values</definition>
        <argsstring></argsstring>
        <name>values</name>
        <qualifiedname>NeoN::SegmentedVectorView::values</qualifiedname>
        <briefdescription>
<para>A <ref refid="classNeoN_1_1View" kindref="compound">View</ref> with the values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/segmentedVector.hpp" line="64" column="10" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/segmentedVector.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoN_1_1SegmentedVectorView_1a0e101da590fc55027c7a0d0e986d27d3" prot="public" static="no" mutable="no">
        <type><ref refid="classNeoN_1_1View" kindref="compound">View</ref>&lt; IndexType &gt;</type>
        <definition>View&lt;IndexType&gt; NeoN::SegmentedVectorView&lt; ValueType, IndexType &gt;::segments</definition>
        <argsstring></argsstring>
        <name>segments</name>
        <qualifiedname>NeoN::SegmentedVectorView::segments</qualifiedname>
        <briefdescription>
<para>A <ref refid="classNeoN_1_1View" kindref="compound">View</ref> of indices representing the segments. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/segmentedVector.hpp" line="69" column="10" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/segmentedVector.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classNeoN_1_1SegmentedVectorView_1ae951634d8f5ebd5fb95d7e165af78ccc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION Kokkos::pair&lt; IndexType, IndexType &gt;</type>
        <definition>KOKKOS_INLINE_FUNCTION Kokkos::pair&lt; IndexType, IndexType &gt; NeoN::SegmentedVectorView&lt; ValueType, IndexType &gt;::bounds</definition>
        <argsstring>(localIdx segI) const</argsstring>
        <name>bounds</name>
        <qualifiedname>NeoN::SegmentedVectorView::bounds</qualifiedname>
        <param>
          <type><ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref></type>
          <declname>segI</declname>
        </param>
        <briefdescription>
<para>Get the bounds of a segment. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>segI</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the segment. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pair of indices representing the start and end of the segment. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/segmentedVector.hpp" line="78" column="18" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/segmentedVector.hpp" bodystart="78" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1SegmentedVectorView_1a5d4df24eed300290e90a89a5ee590826" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION Kokkos::pair&lt; IndexType, IndexType &gt;</type>
        <definition>KOKKOS_INLINE_FUNCTION Kokkos::pair&lt; IndexType, IndexType &gt; NeoN::SegmentedVectorView&lt; ValueType, IndexType &gt;::range</definition>
        <argsstring>(localIdx segI) const</argsstring>
        <name>range</name>
        <qualifiedname>NeoN::SegmentedVectorView::range</qualifiedname>
        <param>
          <type><ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref></type>
          <declname>segI</declname>
        </param>
        <briefdescription>
<para>Get the range, ie. [start,end), of a segment. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>segI</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the segment. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pair of indices representing the start and length of the segment. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/segmentedVector.hpp" line="90" column="18" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/segmentedVector.hpp" bodystart="90" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1SegmentedVectorView_1a540204ab62d925577ce4792b1d67bf91" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION <ref refid="classNeoN_1_1View" kindref="compound">View</ref>&lt; ValueType &gt;</type>
        <definition>KOKKOS_INLINE_FUNCTION View&lt; ValueType &gt; NeoN::SegmentedVectorView&lt; ValueType, IndexType &gt;::view</definition>
        <argsstring>(localIdx segI) const</argsstring>
        <name>view</name>
        <qualifiedname>NeoN::SegmentedVectorView::view</qualifiedname>
        <param>
          <type><ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref></type>
          <declname>segI</declname>
        </param>
        <briefdescription>
<para>Get a subview of values corresponding to a segment. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ValueType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the values. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>segI</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the segment. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A subview of values corresponding to the segment. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/segmentedVector.hpp" line="104" column="33" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/segmentedVector.hpp" bodystart="104" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1SegmentedVectorView_1a9313fe2ecf9d4a4e0b045294ae84f88e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION IndexType</type>
        <definition>KOKKOS_INLINE_FUNCTION IndexType NeoN::SegmentedVectorView&lt; ValueType, IndexType &gt;::operator[]</definition>
        <argsstring>(localIdx i) const</argsstring>
        <name>operator[]</name>
        <qualifiedname>NeoN::SegmentedVectorView::operator[]</qualifiedname>
        <param>
          <type><ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Access an element of the segments. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the element. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The value of the element at the specified index. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/segmentedVector.hpp" line="117" column="15" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/segmentedVector.hpp" bodystart="117" bodyend="117"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A class representing a segment of indices. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>IndexType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the indices. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>NeoN::SegmentedVectorView&lt; ValueType, IndexType &gt;</label>
        <link refid="classNeoN_1_1SegmentedVectorView"/>
        <childnode refid="2" relation="usage">
          <edgelabel>segments</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>NeoN::View&lt; NeoN::localIdx &gt;</label>
        <link refid="classNeoN_1_1View"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>std::span&lt; NeoN::localIdx  &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/segmentedVector.hpp" line="57" column="1" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/segmentedVector.hpp" bodystart="58" bodyend="118"/>
    <listofallmembers>
      <member refid="classNeoN_1_1SegmentedVectorView_1ae951634d8f5ebd5fb95d7e165af78ccc" prot="public" virt="non-virtual"><scope>NeoN::SegmentedVectorView</scope><name>bounds</name></member>
      <member refid="classNeoN_1_1SegmentedVectorView_1a9313fe2ecf9d4a4e0b045294ae84f88e" prot="public" virt="non-virtual"><scope>NeoN::SegmentedVectorView</scope><name>operator[]</name></member>
      <member refid="classNeoN_1_1SegmentedVectorView_1a5d4df24eed300290e90a89a5ee590826" prot="public" virt="non-virtual"><scope>NeoN::SegmentedVectorView</scope><name>range</name></member>
      <member refid="classNeoN_1_1SegmentedVectorView_1a0e101da590fc55027c7a0d0e986d27d3" prot="public" virt="non-virtual"><scope>NeoN::SegmentedVectorView</scope><name>segments</name></member>
      <member refid="classNeoN_1_1SegmentedVectorView_1ac9d5ff1ed74531fe956a31da40b0565e" prot="public" virt="non-virtual"><scope>NeoN::SegmentedVectorView</scope><name>values</name></member>
      <member refid="classNeoN_1_1SegmentedVectorView_1a540204ab62d925577ce4792b1d67bf91" prot="public" virt="non-virtual"><scope>NeoN::SegmentedVectorView</scope><name>view</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
