<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classNeoN_1_1View" kind="class" language="C++" prot="public">
    <compoundname>NeoN::View</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::span&lt; ValueType &gt;</basecompoundref>
    <includes refid="view_8hpp" local="no">view.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename ValueType</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classNeoN_1_1View_1a03191759d470e4e6692d27af6a176ddc" prot="public" static="no">
        <type>std::span&lt; ValueType &gt;</type>
        <definition>using NeoN::View&lt; ValueType &gt;::base =  std::span&lt;ValueType&gt;</definition>
        <argsstring></argsstring>
        <name>base</name>
        <qualifiedname>NeoN::View::base</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/view.hpp" line="27" column="5" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/core/view.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classNeoN_1_1View_1a63ef7ab5beb5f2636917213af3ba3c92" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool NeoN::View&lt; ValueType &gt;::abort</definition>
        <argsstring></argsstring>
        <name>abort</name>
        <qualifiedname>NeoN::View::abort</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/view.hpp" line="32" column="10" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/core/view.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoN_1_1View_1a47737a308b5ee947e194a13884aab8f9" prot="public" static="no" mutable="yes">
        <type><ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref></type>
        <definition>localIdx NeoN::View&lt; ValueType &gt;::failureIndex</definition>
        <argsstring></argsstring>
        <name>failureIndex</name>
        <qualifiedname>NeoN::View::failureIndex</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/view.hpp" line="38" column="22" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/core/view.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classNeoN_1_1View_1a5a42f0869904d16726d8cc6f67d2a0e9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION</type>
        <definition>KOKKOS_INLINE_FUNCTION NeoN::View&lt; ValueType &gt;::View</definition>
        <argsstring>(std::span&lt; ValueType &gt; in)</argsstring>
        <name>View</name>
        <qualifiedname>NeoN::View::View</qualifiedname>
        <param>
          <type>std::span&lt; ValueType &gt;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/view.hpp" line="45" column="5" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/core/view.hpp" bodystart="45" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1View_1a0ce01edd1bcd61c22395ac4d5b3774f4" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr ValueType &amp;</type>
        <definition>constexpr ValueType &amp; NeoN::View&lt; ValueType &gt;::operator[]</definition>
        <argsstring>(localIdx index) const</argsstring>
        <name>operator[]</name>
        <qualifiedname>NeoN::View::operator[]</qualifiedname>
        <param>
          <type><ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/view.hpp" line="47" column="25" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/core/view.hpp" bodystart="47" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1View_1ab06e71e3f5df85b5e97af95b7dd68298" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION <ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref></type>
        <definition>KOKKOS_INLINE_FUNCTION localIdx NeoN::View&lt; ValueType &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>NeoN::View::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/view.hpp" line="75" column="14" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/core/view.hpp" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1View_1a0808f06e3d1be03831c5f0e30063aaa8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION <ref refid="classNeoN_1_1View" kindref="compound">View</ref>&lt; ValueType &gt;</type>
        <definition>KOKKOS_INLINE_FUNCTION View&lt; ValueType &gt; NeoN::View&lt; ValueType &gt;::subview</definition>
        <argsstring>(localIdx start, localIdx length) const</argsstring>
        <name>subview</name>
        <qualifiedname>NeoN::View::subview</qualifiedname>
        <param>
          <type><ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref></type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/view.hpp" line="78" column="10" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/core/view.hpp" bodystart="78" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1View_1aa9e66f2e7f0c8804aba3cbae78a477c4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION <ref refid="classNeoN_1_1View" kindref="compound">View</ref>&lt; ValueType &gt;</type>
        <definition>KOKKOS_INLINE_FUNCTION View&lt; ValueType &gt; NeoN::View&lt; ValueType &gt;::subview</definition>
        <argsstring>(localIdx start) const</argsstring>
        <name>subview</name>
        <qualifiedname>NeoN::View::subview</qualifiedname>
        <param>
          <type><ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref></type>
          <declname>start</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/view.hpp" line="84" column="10" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/core/view.hpp" bodystart="84" bodyend="87"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>NeoN::View&lt; ValueType &gt;</label>
        <link refid="classNeoN_1_1View"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::span&lt; ValueType &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>NeoN::View&lt; ValueType &gt;</label>
        <link refid="classNeoN_1_1View"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::span&lt; ValueType &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/view.hpp" line="23" column="1" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/core/view.hpp" bodystart="24" bodyend="88"/>
    <listofallmembers>
      <member refid="classNeoN_1_1View_1a63ef7ab5beb5f2636917213af3ba3c92" prot="public" virt="non-virtual"><scope>NeoN::View</scope><name>abort</name></member>
      <member refid="classNeoN_1_1View_1a03191759d470e4e6692d27af6a176ddc" prot="public" virt="non-virtual"><scope>NeoN::View</scope><name>base</name></member>
      <member refid="classNeoN_1_1View_1a47737a308b5ee947e194a13884aab8f9" prot="public" virt="non-virtual"><scope>NeoN::View</scope><name>failureIndex</name></member>
      <member refid="classNeoN_1_1View_1a0ce01edd1bcd61c22395ac4d5b3774f4" prot="public" virt="non-virtual"><scope>NeoN::View</scope><name>operator[]</name></member>
      <member refid="classNeoN_1_1View_1ab06e71e3f5df85b5e97af95b7dd68298" prot="public" virt="non-virtual"><scope>NeoN::View</scope><name>size</name></member>
      <member refid="classNeoN_1_1View_1a0808f06e3d1be03831c5f0e30063aaa8" prot="public" virt="non-virtual"><scope>NeoN::View</scope><name>subview</name></member>
      <member refid="classNeoN_1_1View_1aa9e66f2e7f0c8804aba3cbae78a477c4" prot="public" virt="non-virtual"><scope>NeoN::View</scope><name>subview</name></member>
      <member refid="classNeoN_1_1View_1a5a42f0869904d16726d8cc6f67d2a0e9" prot="public" virt="non-virtual"><scope>NeoN::View</scope><name>View</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
