<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Linear" kind="class" language="C++" prot="public">
    <compoundname>NeoN::finiteVolume::cellCentred::Linear</compoundname>
    <basecompoundref prot="public" virt="non-virtual">SurfaceInterpolationFactory&lt; ValueType &gt;::template Register</basecompoundref>
    <includes refid="linear_8hpp" local="no">linear.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename ValueType</type>
      </param>
    </templateparamlist>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Linear_1ac82a2f29797aa7d4f854d49b15ccdc64" prot="private" static="no">
        <type><ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1SurfaceInterpolationFactory" kindref="compound">SurfaceInterpolationFactory</ref>&lt; ValueType &gt;::template <ref refid="classRuntimeSelectionFactory_1_1Register" kindref="compound">Register</ref>&lt; <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Linear" kindref="compound">Linear</ref>&lt; ValueType &gt; &gt;</type>
        <definition>using NeoN::finiteVolume::cellCentred::Linear&lt; ValueType &gt;::Base =  SurfaceInterpolationFactory&lt;ValueType&gt;::template Register&lt;Linear&lt;ValueType&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>Base</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::Linear::Base</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/linear.hpp" line="40" column="5" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/linear.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Linear_1a1f9c44cc393fcd78ab100bf2054221f2" prot="private" static="no" mutable="no">
        <type>const std::shared_ptr&lt; <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1GeometryScheme" kindref="compound">GeometryScheme</ref> &gt;</type>
        <definition>const std::shared_ptr&lt;GeometryScheme&gt; NeoN::finiteVolume::cellCentred::Linear&lt; ValueType &gt;::geometryScheme_</definition>
        <argsstring></argsstring>
        <name>geometryScheme_</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::Linear::geometryScheme_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/linear.hpp" line="93" column="27" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/linear.hpp" bodystart="93" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Linear_1a8d26b7f83d21d3b43ee949b0cf551725" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoN::finiteVolume::cellCentred::Linear&lt; ValueType &gt;::Linear</definition>
        <argsstring>(const Executor &amp;exec, const UnstructuredMesh &amp;mesh, Input input)</argsstring>
        <name>Linear</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::Linear::Linear</qualifiedname>
        <param>
          <type>const <ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">Executor</ref> &amp;</type>
          <declname>exec</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoN_1_1UnstructuredMesh" kindref="compound">UnstructuredMesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type><ref refid="namespaceNeoN_1a0f89cac0ba212d1026c9fedc65742cea" kindref="member">Input</ref></type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/linear.hpp" line="44" column="5" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/linear.hpp" bodystart="44" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Linear_1a38f99a671e7f5cc244c535dceb3ca5d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoN::finiteVolume::cellCentred::Linear&lt; ValueType &gt;::Linear</definition>
        <argsstring>(const Executor &amp;exec, const UnstructuredMesh &amp;mesh)</argsstring>
        <name>Linear</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::Linear::Linear</qualifiedname>
        <param>
          <type>const <ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">Executor</ref> &amp;</type>
          <declname>exec</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoN_1_1UnstructuredMesh" kindref="compound">UnstructuredMesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/linear.hpp" line="47" column="5" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/linear.hpp" bodystart="47" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Linear_1a9afb3f1399f1ebdce7d96642306e95f1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NeoN::finiteVolume::cellCentred::Linear&lt; ValueType &gt;::interpolate</definition>
        <argsstring>(const VolumeField&lt; ValueType &gt; &amp;src, SurfaceField&lt; ValueType &gt; &amp;dst) const override</argsstring>
        <name>interpolate</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::Linear::interpolate</qualifiedname>
        <param>
          <type>const <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField" kindref="compound">VolumeField</ref>&lt; ValueType &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1SurfaceField" kindref="compound">SurfaceField</ref>&lt; ValueType &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/linear.hpp" line="57" column="10" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/linear.hpp" bodystart="57" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Linear_1afb530a9bf2b6fc82d8a754e6a9025b5b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NeoN::finiteVolume::cellCentred::Linear&lt; ValueType &gt;::interpolate</definition>
        <argsstring>(const SurfaceField&lt; scalar &gt; &amp;, const VolumeField&lt; ValueType &gt; &amp;src, SurfaceField&lt; ValueType &gt; &amp;dst) const override</argsstring>
        <name>interpolate</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::Linear::interpolate</qualifiedname>
        <param>
          <type>const <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1SurfaceField" kindref="compound">SurfaceField</ref>&lt; <ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">scalar</ref> &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField" kindref="compound">VolumeField</ref>&lt; ValueType &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1SurfaceField" kindref="compound">SurfaceField</ref>&lt; ValueType &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/linear.hpp" line="62" column="10" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/linear.hpp" bodystart="62" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Linear_1acda49c4524c0eacdaa6a4a703586e2e3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NeoN::finiteVolume::cellCentred::Linear&lt; ValueType &gt;::weight</definition>
        <argsstring>(const VolumeField&lt; ValueType &gt; &amp;, SurfaceField&lt; scalar &gt; &amp;weight) const override</argsstring>
        <name>weight</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::Linear::weight</qualifiedname>
        <param>
          <type>const <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField" kindref="compound">VolumeField</ref>&lt; ValueType &gt; &amp;</type>
        </param>
        <param>
          <type><ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1SurfaceField" kindref="compound">SurfaceField</ref>&lt; <ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">scalar</ref> &gt; &amp;</type>
          <declname>weight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/linear.hpp" line="69" column="10" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/linear.hpp" bodystart="69" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Linear_1a6b662d0fb14f45293bb61551dbcc1b3c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NeoN::finiteVolume::cellCentred::Linear&lt; ValueType &gt;::weight</definition>
        <argsstring>(const SurfaceField&lt; scalar &gt; &amp;, const VolumeField&lt; ValueType &gt; &amp;, SurfaceField&lt; scalar &gt; &amp;weight) const override</argsstring>
        <name>weight</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::Linear::weight</qualifiedname>
        <param>
          <type>const <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1SurfaceField" kindref="compound">SurfaceField</ref>&lt; <ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">scalar</ref> &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField" kindref="compound">VolumeField</ref>&lt; ValueType &gt; &amp;</type>
        </param>
        <param>
          <type><ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1SurfaceField" kindref="compound">SurfaceField</ref>&lt; <ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">scalar</ref> &gt; &amp;</type>
          <declname>weight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/linear.hpp" line="76" column="10" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/linear.hpp" bodystart="76" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Linear_1a0fb2a0ef645417b2f45c71a5e3274d3f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1SurfaceInterpolationFactory" kindref="compound">SurfaceInterpolationFactory</ref>&lt; ValueType &gt; &gt;</type>
        <definition>std::unique_ptr&lt; SurfaceInterpolationFactory&lt; ValueType &gt; &gt; NeoN::finiteVolume::cellCentred::Linear&lt; ValueType &gt;::clone</definition>
        <argsstring>() const override</argsstring>
        <name>clone</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::Linear::clone</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/linear.hpp" line="86" column="21" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/linear.hpp" bodystart="86" bodyend="89"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Linear_1a95d9a765de67cb9323c618cbe4bf4449" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string NeoN::finiteVolume::cellCentred::Linear&lt; ValueType &gt;::name</definition>
        <argsstring>()</argsstring>
        <name>name</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::Linear::name</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/linear.hpp" line="51" column="24" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/linear.hpp" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Linear_1a607f6875cf1a6aa2efa1fbc19d48ed44" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string NeoN::finiteVolume::cellCentred::Linear&lt; ValueType &gt;::doc</definition>
        <argsstring>()</argsstring>
        <name>doc</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::Linear::doc</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/linear.hpp" line="53" column="24" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/linear.hpp" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Linear_1a4b0a570f0126c9559b1dbd1c5c5ecb3f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string NeoN::finiteVolume::cellCentred::Linear&lt; ValueType &gt;::schema</definition>
        <argsstring>()</argsstring>
        <name>schema</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::Linear::schema</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/linear.hpp" line="55" column="24" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/linear.hpp" bodystart="55" bodyend="55"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>NeoN::finiteVolume::cellCentred::Linear&lt; ValueType &gt;</label>
        <link refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Linear"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>SurfaceInterpolationFactory&lt; ValueType &gt;::template Register&lt; Linear&lt; ValueType &gt; &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>NeoN::finiteVolume::cellCentred::Linear&lt; ValueType &gt;</label>
        <link refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Linear"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>SurfaceInterpolationFactory&lt; ValueType &gt;::template Register&lt; Linear&lt; ValueType &gt; &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/linear.hpp" line="38" column="1" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/linear.hpp" bodystart="39" bodyend="94"/>
    <listofallmembers>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Linear_1ac82a2f29797aa7d4f854d49b15ccdc64" prot="private" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::Linear</scope><name>Base</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Linear_1a0fb2a0ef645417b2f45c71a5e3274d3f" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::Linear</scope><name>clone</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Linear_1a607f6875cf1a6aa2efa1fbc19d48ed44" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::Linear</scope><name>doc</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Linear_1a1f9c44cc393fcd78ab100bf2054221f2" prot="private" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::Linear</scope><name>geometryScheme_</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Linear_1a9afb3f1399f1ebdce7d96642306e95f1" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::Linear</scope><name>interpolate</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Linear_1afb530a9bf2b6fc82d8a754e6a9025b5b" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::Linear</scope><name>interpolate</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Linear_1a8d26b7f83d21d3b43ee949b0cf551725" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::Linear</scope><name>Linear</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Linear_1a38f99a671e7f5cc244c535dceb3ca5d0" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::Linear</scope><name>Linear</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Linear_1a95d9a765de67cb9323c618cbe4bf4449" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::Linear</scope><name>name</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Linear_1a4b0a570f0126c9559b1dbd1c5c5ecb3f" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::Linear</scope><name>schema</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Linear_1acda49c4524c0eacdaa6a4a703586e2e3" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::Linear</scope><name>weight</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Linear_1a6b662d0fb14f45293bb61551dbcc1b3c" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::Linear</scope><name>weight</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
