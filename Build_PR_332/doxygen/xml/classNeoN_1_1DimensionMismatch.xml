<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classNeoN_1_1DimensionMismatch" kind="class" language="C++" prot="public">
    <compoundname>NeoN::DimensionMismatch</compoundname>
    <basecompoundref refid="classNeoN_1_1Error" prot="public" virt="non-virtual">NeoN::Error</basecompoundref>
    <includes refid="exceptions_8hpp" local="no">exceptions.hpp</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classNeoN_1_1DimensionMismatch_1a39c69f28efc25ac526f44d140d955817" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoN::DimensionMismatch::DimensionMismatch</definition>
        <argsstring>(const std::string &amp;file, int line, const std::string &amp;func, localIdx lengthA, localIdx lengthB, const std::string &amp;clarification)</argsstring>
        <name>DimensionMismatch</name>
        <qualifiedname>NeoN::DimensionMismatch::DimensionMismatch</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>func</declname>
        </param>
        <param>
          <type><ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref></type>
          <declname>lengthA</declname>
        </param>
        <param>
          <type><ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref></type>
          <declname>lengthB</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>clarification</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initializes a dimension mismatch error.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the offending source file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>The source code line number where the error occurred </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>func</parametername>
</parameternamelist>
<parameterdescription>
<para>The function name where the error occurred </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length_a</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the first container </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length_b</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the second container </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clarification</parametername>
</parameternamelist>
<parameterdescription>
<para>An additional message describing the error further </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/helpers/exceptions.hpp" line="74" column="5" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/helpers/exceptions.hpp" bodystart="74" bodyend="88"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para><ref refid="classNeoN_1_1Error" kindref="compound">Error</ref> for handling two containers of incompatible lengths. </para>
    </briefdescription>
    <detaileddescription>
<para><ref refid="classNeoN_1_1DimensionMismatch" kindref="compound">DimensionMismatch</ref> is thrown if an operation is being applied to containers of incompatible size. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>NeoN::DimensionMismatch</label>
        <link refid="classNeoN_1_1DimensionMismatch"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>NeoN::Error</label>
        <link refid="classNeoN_1_1Error"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>std::exception</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>NeoN::DimensionMismatch</label>
        <link refid="classNeoN_1_1DimensionMismatch"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>NeoN::Error</label>
        <link refid="classNeoN_1_1Error"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>std::exception</label>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/NeoN/NeoN/include/NeoN/helpers/exceptions.hpp" line="60" column="1" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/helpers/exceptions.hpp" bodystart="61" bodyend="89"/>
    <listofallmembers>
      <member refid="classNeoN_1_1DimensionMismatch_1a39c69f28efc25ac526f44d140d955817" prot="public" virt="non-virtual"><scope>NeoN::DimensionMismatch</scope><name>DimensionMismatch</name></member>
      <member refid="classNeoN_1_1Error_1a8dfebf7b6b0b7321b725272646e09868" prot="public" virt="non-virtual"><scope>NeoN::DimensionMismatch</scope><name>Error</name></member>
      <member refid="classNeoN_1_1Error_1af18f627eb1d4e921582dea0238b4305b" prot="public" virt="virtual"><scope>NeoN::DimensionMismatch</scope><name>what</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
