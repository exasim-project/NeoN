<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classNeoN_1_1dsl_1_1TemporalOperator" kind="class" language="C++" prot="public">
    <compoundname>NeoN::dsl::TemporalOperator</compoundname>
    <includes refid="temporalOperator_8hpp" local="no">temporalOperator.hpp</includes>
    <innerclass refid="structNeoN_1_1dsl_1_1TemporalOperator_1_1TemporalOperatorConcept" prot="private">NeoN::dsl::TemporalOperator::TemporalOperatorConcept</innerclass>
    <innerclass refid="structNeoN_1_1dsl_1_1TemporalOperator_1_1TemporalOperatorModel" prot="private">NeoN::dsl::TemporalOperator::TemporalOperatorModel</innerclass>
    <templateparamlist>
      <param>
        <type>typename ValueType</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classNeoN_1_1dsl_1_1TemporalOperator_1a170e45964a65213eed233d610e6232a9" prot="public" static="no">
        <type>ValueType</type>
        <definition>using NeoN::dsl::TemporalOperator&lt; ValueType &gt;::VectorValueType =  ValueType</definition>
        <argsstring></argsstring>
        <name>VectorValueType</name>
        <qualifiedname>NeoN::dsl::TemporalOperator::VectorValueType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" line="60" column="5" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classNeoN_1_1dsl_1_1TemporalOperator_1a0c2746526a4cddeb4eeccfc992391d53" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; TemporalOperatorConcept &gt;</type>
        <definition>std::unique_ptr&lt;TemporalOperatorConcept&gt; NeoN::dsl::TemporalOperator&lt; ValueType &gt;::model_</definition>
        <argsstring></argsstring>
        <name>model_</name>
        <qualifiedname>NeoN::dsl::TemporalOperator::model_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" line="185" column="21" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" bodystart="185" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classNeoN_1_1dsl_1_1TemporalOperator_1abb175059bcbc826532ec7f205def0569" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>HasTemporalOperator</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>NeoN::dsl::TemporalOperator&lt; ValueType &gt;::TemporalOperator</definition>
        <argsstring>(T cls)</argsstring>
        <name>TemporalOperator</name>
        <qualifiedname>NeoN::dsl::TemporalOperator::TemporalOperator</qualifiedname>
        <param>
          <type>T</type>
          <declname>cls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" line="63" column="5" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" bodystart="63" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1dsl_1_1TemporalOperator_1a123506bf619aa5d08e47c84310b788eb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoN::dsl::TemporalOperator&lt; ValueType &gt;::TemporalOperator</definition>
        <argsstring>(const TemporalOperator &amp;eqnOperator)</argsstring>
        <name>TemporalOperator</name>
        <qualifiedname>NeoN::dsl::TemporalOperator::TemporalOperator</qualifiedname>
        <param>
          <type>const <ref refid="classNeoN_1_1dsl_1_1TemporalOperator" kindref="compound">TemporalOperator</ref> &amp;</type>
          <declname>eqnOperator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" line="66" column="5" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1dsl_1_1TemporalOperator_1aa8547a528d858e4e848ccd862a5af320" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoN::dsl::TemporalOperator&lt; ValueType &gt;::TemporalOperator</definition>
        <argsstring>(TemporalOperator &amp;&amp;eqnOperator)</argsstring>
        <name>TemporalOperator</name>
        <qualifiedname>NeoN::dsl::TemporalOperator::TemporalOperator</qualifiedname>
        <param>
          <type><ref refid="classNeoN_1_1dsl_1_1TemporalOperator" kindref="compound">TemporalOperator</ref> &amp;&amp;</type>
          <declname>eqnOperator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" line="68" column="5" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1dsl_1_1TemporalOperator_1ae58c2ca6d0833a5be40ed8bdd4b4a5d5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NeoN::dsl::TemporalOperator&lt; ValueType &gt;::explicitOperation</definition>
        <argsstring>(Vector&lt; ValueType &gt; &amp;source, scalar t, scalar dt) const</argsstring>
        <name>explicitOperation</name>
        <qualifiedname>NeoN::dsl::TemporalOperator::explicitOperation</qualifiedname>
        <param>
          <type><ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref>&lt; ValueType &gt; &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type><ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">scalar</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">scalar</ref></type>
          <declname>dt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" line="70" column="10" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" bodystart="70" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1dsl_1_1TemporalOperator_1a64987751d310396ab416571655661cae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NeoN::dsl::TemporalOperator&lt; ValueType &gt;::implicitOperation</definition>
        <argsstring>(la::LinearSystem&lt; ValueType, localIdx &gt; &amp;ls, scalar t, scalar dt)</argsstring>
        <name>implicitOperation</name>
        <qualifiedname>NeoN::dsl::TemporalOperator::implicitOperation</qualifiedname>
        <param>
          <type><ref refid="classNeoN_1_1la_1_1LinearSystem" kindref="compound">la::LinearSystem</ref>&lt; ValueType, <ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref> &gt; &amp;</type>
          <declname>ls</declname>
        </param>
        <param>
          <type><ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">scalar</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">scalar</ref></type>
          <declname>dt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" line="75" column="10" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1dsl_1_1TemporalOperator_1a23c757d779140b6c736cf569bd024cfa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoN_1_1dsl_1_1Operator_1ad72823c9a2d04641ab7c7181902f6dd3" kindref="member">Operator::Type</ref></type>
        <definition>Operator::Type NeoN::dsl::TemporalOperator&lt; ValueType &gt;::getType</definition>
        <argsstring>() const</argsstring>
        <name>getType</name>
        <qualifiedname>NeoN::dsl::TemporalOperator::getType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" line="81" column="20" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" bodystart="81" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1dsl_1_1TemporalOperator_1a6e1c8d3fd58767be533ef6dffe4af1f6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string NeoN::dsl::TemporalOperator&lt; ValueType &gt;::getName</definition>
        <argsstring>() const</argsstring>
        <name>getName</name>
        <qualifiedname>NeoN::dsl::TemporalOperator::getName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" line="83" column="17" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1dsl_1_1TemporalOperator_1aa99d5db76b2cac206f5015a9c16e887a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoN_1_1dsl_1_1Coeff" kindref="compound">Coeff</ref> &amp;</type>
        <definition>Coeff &amp; NeoN::dsl::TemporalOperator&lt; ValueType &gt;::getCoefficient</definition>
        <argsstring>()</argsstring>
        <name>getCoefficient</name>
        <qualifiedname>NeoN::dsl::TemporalOperator::getCoefficient</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" line="85" column="11" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" bodystart="85" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1dsl_1_1TemporalOperator_1a6fe16992f3ec6270570440e302a86f19" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoN_1_1dsl_1_1Coeff" kindref="compound">Coeff</ref></type>
        <definition>Coeff NeoN::dsl::TemporalOperator&lt; ValueType &gt;::getCoefficient</definition>
        <argsstring>() const</argsstring>
        <name>getCoefficient</name>
        <qualifiedname>NeoN::dsl::TemporalOperator::getCoefficient</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" line="87" column="11" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" bodystart="87" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1dsl_1_1TemporalOperator_1a97633d93c2e6d5438806991482f8d29d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NeoN::dsl::TemporalOperator&lt; ValueType &gt;::read</definition>
        <argsstring>(const Input &amp;input)</argsstring>
        <name>read</name>
        <qualifiedname>NeoN::dsl::TemporalOperator::read</qualifiedname>
        <param>
          <type>const <ref refid="namespaceNeoN_1a0f89cac0ba212d1026c9fedc65742cea" kindref="member">Input</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" line="90" column="10" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" bodystart="90" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1dsl_1_1TemporalOperator_1a243dfd0d6dc7e606ce01d93f19e259a8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">Executor</ref> &amp;</type>
        <definition>const Executor &amp; NeoN::dsl::TemporalOperator&lt; ValueType &gt;::exec</definition>
        <argsstring>() const</argsstring>
        <name>exec</name>
        <qualifiedname>NeoN::dsl::TemporalOperator::exec</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" line="93" column="20" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" bodystart="93" bodyend="93"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" line="56" column="1" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" bodystart="57" bodyend="186"/>
    <listofallmembers>
      <member refid="classNeoN_1_1dsl_1_1TemporalOperator_1a243dfd0d6dc7e606ce01d93f19e259a8" prot="public" virt="non-virtual"><scope>NeoN::dsl::TemporalOperator</scope><name>exec</name></member>
      <member refid="classNeoN_1_1dsl_1_1TemporalOperator_1ae58c2ca6d0833a5be40ed8bdd4b4a5d5" prot="public" virt="non-virtual"><scope>NeoN::dsl::TemporalOperator</scope><name>explicitOperation</name></member>
      <member refid="classNeoN_1_1dsl_1_1TemporalOperator_1aa99d5db76b2cac206f5015a9c16e887a" prot="public" virt="non-virtual"><scope>NeoN::dsl::TemporalOperator</scope><name>getCoefficient</name></member>
      <member refid="classNeoN_1_1dsl_1_1TemporalOperator_1a6fe16992f3ec6270570440e302a86f19" prot="public" virt="non-virtual"><scope>NeoN::dsl::TemporalOperator</scope><name>getCoefficient</name></member>
      <member refid="classNeoN_1_1dsl_1_1TemporalOperator_1a6e1c8d3fd58767be533ef6dffe4af1f6" prot="public" virt="non-virtual"><scope>NeoN::dsl::TemporalOperator</scope><name>getName</name></member>
      <member refid="classNeoN_1_1dsl_1_1TemporalOperator_1a23c757d779140b6c736cf569bd024cfa" prot="public" virt="non-virtual"><scope>NeoN::dsl::TemporalOperator</scope><name>getType</name></member>
      <member refid="classNeoN_1_1dsl_1_1TemporalOperator_1a64987751d310396ab416571655661cae" prot="public" virt="non-virtual"><scope>NeoN::dsl::TemporalOperator</scope><name>implicitOperation</name></member>
      <member refid="classNeoN_1_1dsl_1_1TemporalOperator_1a0c2746526a4cddeb4eeccfc992391d53" prot="private" virt="non-virtual"><scope>NeoN::dsl::TemporalOperator</scope><name>model_</name></member>
      <member refid="classNeoN_1_1dsl_1_1TemporalOperator_1a97633d93c2e6d5438806991482f8d29d" prot="public" virt="non-virtual"><scope>NeoN::dsl::TemporalOperator</scope><name>read</name></member>
      <member refid="classNeoN_1_1dsl_1_1TemporalOperator_1abb175059bcbc826532ec7f205def0569" prot="public" virt="non-virtual"><scope>NeoN::dsl::TemporalOperator</scope><name>TemporalOperator</name></member>
      <member refid="classNeoN_1_1dsl_1_1TemporalOperator_1a123506bf619aa5d08e47c84310b788eb" prot="public" virt="non-virtual"><scope>NeoN::dsl::TemporalOperator</scope><name>TemporalOperator</name></member>
      <member refid="classNeoN_1_1dsl_1_1TemporalOperator_1aa8547a528d858e4e848ccd862a5af320" prot="public" virt="non-virtual"><scope>NeoN::dsl::TemporalOperator</scope><name>TemporalOperator</name></member>
      <member refid="classNeoN_1_1dsl_1_1TemporalOperator_1a170e45964a65213eed233d610e6232a9" prot="public" virt="non-virtual"><scope>NeoN::dsl::TemporalOperator</scope><name>VectorValueType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
