<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classNeoN_1_1dsl_1_1SpatialOperator" kind="class" language="C++" prot="public">
    <compoundname>NeoN::dsl::SpatialOperator</compoundname>
    <includes refid="spatialOperator_8hpp" local="no">spatialOperator.hpp</includes>
    <innerclass refid="structNeoN_1_1dsl_1_1SpatialOperator_1_1OperatorConcept" prot="private">NeoN::dsl::SpatialOperator::OperatorConcept</innerclass>
    <innerclass refid="structNeoN_1_1dsl_1_1SpatialOperator_1_1OperatorModel" prot="private">NeoN::dsl::SpatialOperator::OperatorModel</innerclass>
    <templateparamlist>
      <param>
        <type>typename ValueType</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classNeoN_1_1dsl_1_1SpatialOperator_1aedfbc85da7dc707f61742b232952bdcc" prot="public" static="no">
        <type>ValueType</type>
        <definition>using NeoN::dsl::SpatialOperator&lt; ValueType &gt;::VectorValueType =  ValueType</definition>
        <argsstring></argsstring>
        <name>VectorValueType</name>
        <qualifiedname>NeoN::dsl::SpatialOperator::VectorValueType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/spatialOperator.hpp" line="57" column="5" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/spatialOperator.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classNeoN_1_1dsl_1_1SpatialOperator_1a0cda89b6cbcd32ca8aa492f5736d5265" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; OperatorConcept &gt;</type>
        <definition>std::unique_ptr&lt;OperatorConcept&gt; NeoN::dsl::SpatialOperator&lt; ValueType &gt;::model_</definition>
        <argsstring></argsstring>
        <name>model_</name>
        <qualifiedname>NeoN::dsl::SpatialOperator::model_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/spatialOperator.hpp" line="184" column="21" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/spatialOperator.hpp" bodystart="184" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classNeoN_1_1dsl_1_1SpatialOperator_1ac0d411e093c1ccd5a40c630b45638a72" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>NeoN::dsl::SpatialOperator&lt; ValueType &gt;::SpatialOperator</definition>
        <argsstring>(T cls)</argsstring>
        <name>SpatialOperator</name>
        <qualifiedname>NeoN::dsl::SpatialOperator::SpatialOperator</qualifiedname>
        <param>
          <type>T</type>
          <declname>cls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/spatialOperator.hpp" line="62" column="5" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/spatialOperator.hpp" bodystart="62" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1dsl_1_1SpatialOperator_1aaedf167aa2b3590b3ff87c0493e8dbc5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoN::dsl::SpatialOperator&lt; ValueType &gt;::SpatialOperator</definition>
        <argsstring>(const SpatialOperator &amp;eqnOperator)</argsstring>
        <name>SpatialOperator</name>
        <qualifiedname>NeoN::dsl::SpatialOperator::SpatialOperator</qualifiedname>
        <param>
          <type>const <ref refid="classNeoN_1_1dsl_1_1SpatialOperator" kindref="compound">SpatialOperator</ref> &amp;</type>
          <declname>eqnOperator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/spatialOperator.hpp" line="65" column="5" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/spatialOperator.hpp" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1dsl_1_1SpatialOperator_1a51ea515de3795dc003f4ec09fe6fe562" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoN::dsl::SpatialOperator&lt; ValueType &gt;::SpatialOperator</definition>
        <argsstring>(SpatialOperator &amp;&amp;eqnOperator)</argsstring>
        <name>SpatialOperator</name>
        <qualifiedname>NeoN::dsl::SpatialOperator::SpatialOperator</qualifiedname>
        <param>
          <type><ref refid="classNeoN_1_1dsl_1_1SpatialOperator" kindref="compound">SpatialOperator</ref> &amp;&amp;</type>
          <declname>eqnOperator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/spatialOperator.hpp" line="67" column="5" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/spatialOperator.hpp" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1dsl_1_1SpatialOperator_1a0205e14515f0e95115d83a58260dab03" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoN_1_1dsl_1_1SpatialOperator" kindref="compound">SpatialOperator</ref> &amp;</type>
        <definition>SpatialOperator &amp; NeoN::dsl::SpatialOperator&lt; ValueType &gt;::operator=</definition>
        <argsstring>(const SpatialOperator &amp;eqnOperator)</argsstring>
        <name>operator=</name>
        <qualifiedname>NeoN::dsl::SpatialOperator::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classNeoN_1_1dsl_1_1SpatialOperator" kindref="compound">SpatialOperator</ref> &amp;</type>
          <declname>eqnOperator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/spatialOperator.hpp" line="69" column="21" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/spatialOperator.hpp" bodystart="69" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1dsl_1_1SpatialOperator_1a5e56907203e06efbb1846294fe6714fb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NeoN::dsl::SpatialOperator&lt; ValueType &gt;::explicitOperation</definition>
        <argsstring>(Vector&lt; ValueType &gt; &amp;source) const</argsstring>
        <name>explicitOperation</name>
        <qualifiedname>NeoN::dsl::SpatialOperator::explicitOperation</qualifiedname>
        <param>
          <type><ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref>&lt; ValueType &gt; &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/spatialOperator.hpp" line="75" column="10" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/spatialOperator.hpp" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1dsl_1_1SpatialOperator_1a06dc4ead7ef74c3a10db5b0347f8c591" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NeoN::dsl::SpatialOperator&lt; ValueType &gt;::implicitOperation</definition>
        <argsstring>(la::LinearSystem&lt; ValueType, localIdx &gt; &amp;ls)</argsstring>
        <name>implicitOperation</name>
        <qualifiedname>NeoN::dsl::SpatialOperator::implicitOperation</qualifiedname>
        <param>
          <type><ref refid="classNeoN_1_1la_1_1LinearSystem" kindref="compound">la::LinearSystem</ref>&lt; ValueType, <ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref> &gt; &amp;</type>
          <declname>ls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/spatialOperator.hpp" line="77" column="10" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/spatialOperator.hpp" bodystart="77" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1dsl_1_1SpatialOperator_1a7dca09b90089c20925c631b6e6493174" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoN_1_1dsl_1_1Operator_1ad72823c9a2d04641ab7c7181902f6dd3" kindref="member">Operator::Type</ref></type>
        <definition>Operator::Type NeoN::dsl::SpatialOperator&lt; ValueType &gt;::getType</definition>
        <argsstring>() const</argsstring>
        <name>getType</name>
        <qualifiedname>NeoN::dsl::SpatialOperator::getType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/spatialOperator.hpp" line="83" column="20" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/spatialOperator.hpp" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1dsl_1_1SpatialOperator_1af61a3a1a208a5fa8a779e3899ed659e9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string NeoN::dsl::SpatialOperator&lt; ValueType &gt;::getName</definition>
        <argsstring>() const</argsstring>
        <name>getName</name>
        <qualifiedname>NeoN::dsl::SpatialOperator::getName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/spatialOperator.hpp" line="85" column="17" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/spatialOperator.hpp" bodystart="85" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1dsl_1_1SpatialOperator_1aa6974df9f345d3d1e6fd66b685db9a38" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoN_1_1dsl_1_1Coeff" kindref="compound">Coeff</ref> &amp;</type>
        <definition>Coeff &amp; NeoN::dsl::SpatialOperator&lt; ValueType &gt;::getCoefficient</definition>
        <argsstring>()</argsstring>
        <name>getCoefficient</name>
        <qualifiedname>NeoN::dsl::SpatialOperator::getCoefficient</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/spatialOperator.hpp" line="88" column="11" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/spatialOperator.hpp" bodystart="88" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1dsl_1_1SpatialOperator_1aec6cd2e8e754f1a10ea0a01707f51a4b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoN_1_1dsl_1_1Coeff" kindref="compound">Coeff</ref></type>
        <definition>Coeff NeoN::dsl::SpatialOperator&lt; ValueType &gt;::getCoefficient</definition>
        <argsstring>() const</argsstring>
        <name>getCoefficient</name>
        <qualifiedname>NeoN::dsl::SpatialOperator::getCoefficient</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/spatialOperator.hpp" line="90" column="11" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/spatialOperator.hpp" bodystart="90" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1dsl_1_1SpatialOperator_1abbf112a2938a5fe153d451c9b68ec19a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NeoN::dsl::SpatialOperator&lt; ValueType &gt;::read</definition>
        <argsstring>(const Input &amp;input)</argsstring>
        <name>read</name>
        <qualifiedname>NeoN::dsl::SpatialOperator::read</qualifiedname>
        <param>
          <type>const <ref refid="namespaceNeoN_1a0f89cac0ba212d1026c9fedc65742cea" kindref="member">Input</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/spatialOperator.hpp" line="93" column="10" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/spatialOperator.hpp" bodystart="93" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1dsl_1_1SpatialOperator_1a78ada1cf73d345d9df1a917d0ba3c76f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">Executor</ref> &amp;</type>
        <definition>const Executor &amp; NeoN::dsl::SpatialOperator&lt; ValueType &gt;::exec</definition>
        <argsstring>() const</argsstring>
        <name>exec</name>
        <qualifiedname>NeoN::dsl::SpatialOperator::exec</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/spatialOperator.hpp" line="96" column="20" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/spatialOperator.hpp" bodystart="96" bodyend="96"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/spatialOperator.hpp" line="53" column="1" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/spatialOperator.hpp" bodystart="54" bodyend="185"/>
    <listofallmembers>
      <member refid="classNeoN_1_1dsl_1_1SpatialOperator_1a78ada1cf73d345d9df1a917d0ba3c76f" prot="public" virt="non-virtual"><scope>NeoN::dsl::SpatialOperator</scope><name>exec</name></member>
      <member refid="classNeoN_1_1dsl_1_1SpatialOperator_1a5e56907203e06efbb1846294fe6714fb" prot="public" virt="non-virtual"><scope>NeoN::dsl::SpatialOperator</scope><name>explicitOperation</name></member>
      <member refid="classNeoN_1_1dsl_1_1SpatialOperator_1aa6974df9f345d3d1e6fd66b685db9a38" prot="public" virt="non-virtual"><scope>NeoN::dsl::SpatialOperator</scope><name>getCoefficient</name></member>
      <member refid="classNeoN_1_1dsl_1_1SpatialOperator_1aec6cd2e8e754f1a10ea0a01707f51a4b" prot="public" virt="non-virtual"><scope>NeoN::dsl::SpatialOperator</scope><name>getCoefficient</name></member>
      <member refid="classNeoN_1_1dsl_1_1SpatialOperator_1af61a3a1a208a5fa8a779e3899ed659e9" prot="public" virt="non-virtual"><scope>NeoN::dsl::SpatialOperator</scope><name>getName</name></member>
      <member refid="classNeoN_1_1dsl_1_1SpatialOperator_1a7dca09b90089c20925c631b6e6493174" prot="public" virt="non-virtual"><scope>NeoN::dsl::SpatialOperator</scope><name>getType</name></member>
      <member refid="classNeoN_1_1dsl_1_1SpatialOperator_1a06dc4ead7ef74c3a10db5b0347f8c591" prot="public" virt="non-virtual"><scope>NeoN::dsl::SpatialOperator</scope><name>implicitOperation</name></member>
      <member refid="classNeoN_1_1dsl_1_1SpatialOperator_1a0cda89b6cbcd32ca8aa492f5736d5265" prot="private" virt="non-virtual"><scope>NeoN::dsl::SpatialOperator</scope><name>model_</name></member>
      <member refid="classNeoN_1_1dsl_1_1SpatialOperator_1a0205e14515f0e95115d83a58260dab03" prot="public" virt="non-virtual"><scope>NeoN::dsl::SpatialOperator</scope><name>operator=</name></member>
      <member refid="classNeoN_1_1dsl_1_1SpatialOperator_1abbf112a2938a5fe153d451c9b68ec19a" prot="public" virt="non-virtual"><scope>NeoN::dsl::SpatialOperator</scope><name>read</name></member>
      <member refid="classNeoN_1_1dsl_1_1SpatialOperator_1ac0d411e093c1ccd5a40c630b45638a72" prot="public" virt="non-virtual"><scope>NeoN::dsl::SpatialOperator</scope><name>SpatialOperator</name></member>
      <member refid="classNeoN_1_1dsl_1_1SpatialOperator_1aaedf167aa2b3590b3ff87c0493e8dbc5" prot="public" virt="non-virtual"><scope>NeoN::dsl::SpatialOperator</scope><name>SpatialOperator</name></member>
      <member refid="classNeoN_1_1dsl_1_1SpatialOperator_1a51ea515de3795dc003f4ec09fe6fe562" prot="public" virt="non-virtual"><scope>NeoN::dsl::SpatialOperator</scope><name>SpatialOperator</name></member>
      <member refid="classNeoN_1_1dsl_1_1SpatialOperator_1aedfbc85da7dc707f61742b232952bdcc" prot="public" virt="non-virtual"><scope>NeoN::dsl::SpatialOperator</scope><name>VectorValueType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
