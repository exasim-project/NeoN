<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kind="class" language="C++" prot="public">
    <compoundname>NeoN::finiteVolume::cellCentred::Expression</compoundname>
    <includes refid="finiteVolume_2cellCentred_2dsl_2expression_8hpp" local="no">expression.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename ValueType</type>
      </param>
      <param>
        <type>typename IndexType</type>
        <defval><ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref></defval>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression_1a6d0b144916182a57ac2294bbc44f32f1" prot="private" static="no" mutable="no">
        <type><ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField" kindref="compound">VolumeField</ref>&lt; ValueType &gt; &amp;</type>
        <definition>VolumeField&lt;ValueType&gt;&amp; NeoN::finiteVolume::cellCentred::Expression&lt; ValueType, IndexType &gt;::psi_</definition>
        <argsstring></argsstring>
        <name>psi_</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::Expression::psi_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/dsl/expression.hpp" line="180" column="17" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/dsl/expression.hpp" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression_1ad00f0205a8b83bc0c816710611294631" prot="private" static="no" mutable="no">
        <type><ref refid="classNeoN_1_1dsl_1_1Expression" kindref="compound">dsl::Expression</ref>&lt; ValueType &gt;</type>
        <definition>dsl::Expression&lt;ValueType&gt; NeoN::finiteVolume::cellCentred::Expression&lt; ValueType, IndexType &gt;::expr_</definition>
        <argsstring></argsstring>
        <name>expr_</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::Expression::expr_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/dsl/expression.hpp" line="181" column="21" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/dsl/expression.hpp" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression_1a68d09bb0ac59990150990db10d254422" prot="private" static="no" mutable="no">
        <type>const <ref refid="classNeoN_1_1Dictionary" kindref="compound">Dictionary</ref> &amp;</type>
        <definition>const Dictionary&amp; NeoN::finiteVolume::cellCentred::Expression&lt; ValueType, IndexType &gt;::fvSchemes_</definition>
        <argsstring></argsstring>
        <name>fvSchemes_</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::Expression::fvSchemes_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/dsl/expression.hpp" line="182" column="22" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/dsl/expression.hpp" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression_1a6fa7c586c075d834daef5f140d715775" prot="private" static="no" mutable="no">
        <type>const <ref refid="classNeoN_1_1Dictionary" kindref="compound">Dictionary</ref> &amp;</type>
        <definition>const Dictionary&amp; NeoN::finiteVolume::cellCentred::Expression&lt; ValueType, IndexType &gt;::fvSolution_</definition>
        <argsstring></argsstring>
        <name>fvSolution_</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::Expression::fvSolution_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/dsl/expression.hpp" line="183" column="22" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/dsl/expression.hpp" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression_1ad843ac6ef3212b43a971913b04093cc3" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1SparsityPattern" kindref="compound">SparsityPattern</ref> &gt;</type>
        <definition>std::shared_ptr&lt;SparsityPattern&gt; NeoN::finiteVolume::cellCentred::Expression&lt; ValueType, IndexType &gt;::sparsityPattern_</definition>
        <argsstring></argsstring>
        <name>sparsityPattern_</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::Expression::sparsityPattern_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/dsl/expression.hpp" line="184" column="21" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/dsl/expression.hpp" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression_1a432675b261e2bdc6a39a770fb572b16c" prot="private" static="no" mutable="no">
        <type><ref refid="classNeoN_1_1la_1_1LinearSystem" kindref="compound">la::LinearSystem</ref>&lt; ValueType, IndexType &gt;</type>
        <definition>la::LinearSystem&lt;ValueType, IndexType&gt; NeoN::finiteVolume::cellCentred::Expression&lt; ValueType, IndexType &gt;::ls_</definition>
        <argsstring></argsstring>
        <name>ls_</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::Expression::ls_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/dsl/expression.hpp" line="185" column="22" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/dsl/expression.hpp" bodystart="185" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression_1aab0bf4552af22f09687801782cb49ce6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoN::finiteVolume::cellCentred::Expression&lt; ValueType, IndexType &gt;::Expression</definition>
        <argsstring>(dsl::Expression&lt; ValueType &gt; expr, VolumeField&lt; ValueType &gt; &amp;psi, const Dictionary &amp;fvSchemes, const Dictionary &amp;fvSolution)</argsstring>
        <name>Expression</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::Expression::Expression</qualifiedname>
        <param>
          <type><ref refid="classNeoN_1_1dsl_1_1Expression" kindref="compound">dsl::Expression</ref>&lt; ValueType &gt;</type>
          <declname>expr</declname>
        </param>
        <param>
          <type><ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField" kindref="compound">VolumeField</ref>&lt; ValueType &gt; &amp;</type>
          <declname>psi</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoN_1_1Dictionary" kindref="compound">Dictionary</ref> &amp;</type>
          <declname>fvSchemes</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoN_1_1Dictionary" kindref="compound">Dictionary</ref> &amp;</type>
          <declname>fvSolution</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/dsl/expression.hpp" line="31" column="5" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/dsl/expression.hpp" bodystart="31" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression_1ac430a7c19eaca2d61a694b86930ebe2d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoN::finiteVolume::cellCentred::Expression&lt; ValueType, IndexType &gt;::Expression</definition>
        <argsstring>(const Expression &amp;ls)</argsstring>
        <name>Expression</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::Expression::Expression</qualifiedname>
        <param>
          <type>const <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">Expression</ref> &amp;</type>
          <declname>ls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/dsl/expression.hpp" line="47" column="5" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/dsl/expression.hpp" bodystart="47" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression_1a229b18b0d99762553e35175e6377752b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NeoN::finiteVolume::cellCentred::Expression&lt; ValueType, IndexType &gt;::~Expression</definition>
        <argsstring>()=default</argsstring>
        <name>~Expression</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::Expression::~Expression</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/dsl/expression.hpp" line="51" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression_1a4cfaa913d49e8f0e57ecc7595fcfbba2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoN_1_1la_1_1LinearSystem" kindref="compound">la::LinearSystem</ref>&lt; ValueType, IndexType &gt; &amp;</type>
        <definition>la::LinearSystem&lt; ValueType, IndexType &gt; &amp; NeoN::finiteVolume::cellCentred::Expression&lt; ValueType, IndexType &gt;::linearSystem</definition>
        <argsstring>()</argsstring>
        <name>linearSystem</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::Expression::linearSystem</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/dsl/expression.hpp" line="53" column="23" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/dsl/expression.hpp" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression_1ad7708d86c2611df217f691f28c4f1d89" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1SparsityPattern" kindref="compound">SparsityPattern</ref> &amp;</type>
        <definition>SparsityPattern &amp; NeoN::finiteVolume::cellCentred::Expression&lt; ValueType, IndexType &gt;::sparsityPattern</definition>
        <argsstring>()</argsstring>
        <name>sparsityPattern</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::Expression::sparsityPattern</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/dsl/expression.hpp" line="54" column="22" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/dsl/expression.hpp" bodystart="54" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression_1ab9c6c545458030aa1daae38afa749629" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField" kindref="compound">VolumeField</ref>&lt; ValueType &gt; &amp;</type>
        <definition>VolumeField&lt; ValueType &gt; &amp; NeoN::finiteVolume::cellCentred::Expression&lt; ValueType, IndexType &gt;::getVector</definition>
        <argsstring>()</argsstring>
        <name>getVector</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::Expression::getVector</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/dsl/expression.hpp" line="63" column="17" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/dsl/expression.hpp" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression_1a4a060c97571cab58651239e783828fbf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField" kindref="compound">VolumeField</ref>&lt; ValueType &gt; &amp;</type>
        <definition>const VolumeField&lt; ValueType &gt; &amp; NeoN::finiteVolume::cellCentred::Expression&lt; ValueType, IndexType &gt;::getVector</definition>
        <argsstring>() const</argsstring>
        <name>getVector</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::Expression::getVector</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/dsl/expression.hpp" line="65" column="23" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/dsl/expression.hpp" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression_1a3f50e3180cf0efa6df4e362b8d3e1bfc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classNeoN_1_1la_1_1LinearSystem" kindref="compound">la::LinearSystem</ref>&lt; ValueType, IndexType &gt; &amp;</type>
        <definition>const la::LinearSystem&lt; ValueType, IndexType &gt; &amp; NeoN::finiteVolume::cellCentred::Expression&lt; ValueType, IndexType &gt;::linearSystem</definition>
        <argsstring>() const</argsstring>
        <name>linearSystem</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::Expression::linearSystem</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/dsl/expression.hpp" line="67" column="29" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/dsl/expression.hpp" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression_1a1baaff5e210051508be2e08334c37b5c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1SparsityPattern" kindref="compound">SparsityPattern</ref> &amp;</type>
        <definition>const SparsityPattern &amp; NeoN::finiteVolume::cellCentred::Expression&lt; ValueType, IndexType &gt;::sparsityPattern</definition>
        <argsstring>() const</argsstring>
        <name>sparsityPattern</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::Expression::sparsityPattern</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/dsl/expression.hpp" line="68" column="28" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/dsl/expression.hpp" bodystart="68" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression_1a3b2b4dc757790fcf661da6b47e1c1a0a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">Executor</ref> &amp;</type>
        <definition>const Executor &amp; NeoN::finiteVolume::cellCentred::Expression&lt; ValueType, IndexType &gt;::exec</definition>
        <argsstring>() const</argsstring>
        <name>exec</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::Expression::exec</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/dsl/expression.hpp" line="77" column="20" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/dsl/expression.hpp" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression_1ac7254fa5c400fe38615400f3e695548a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NeoN::finiteVolume::cellCentred::Expression&lt; ValueType, IndexType &gt;::assemble</definition>
        <argsstring>(scalar t, scalar dt)</argsstring>
        <name>assemble</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::Expression::assemble</qualifiedname>
        <param>
          <type><ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">scalar</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">scalar</ref></type>
          <declname>dt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/dsl/expression.hpp" line="80" column="10" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/dsl/expression.hpp" bodystart="80" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression_1a4b38ac1885afb4338315a6a119306ddc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NeoN::finiteVolume::cellCentred::Expression&lt; ValueType, IndexType &gt;::assemble</definition>
        <argsstring>()</argsstring>
        <name>assemble</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::Expression::assemble</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/dsl/expression.hpp" line="100" column="10" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/dsl/expression.hpp" bodystart="100" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression_1a3f8378adb3cc48d7a82d2dabd8575113" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NeoN::finiteVolume::cellCentred::Expression&lt; ValueType, IndexType &gt;::solve</definition>
        <argsstring>(scalar, scalar)</argsstring>
        <name>solve</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::Expression::solve</qualifiedname>
        <param>
          <type><ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">scalar</ref></type>
        </param>
        <param>
          <type><ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">scalar</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/dsl/expression.hpp" line="134" column="10" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/dsl/expression.hpp" bodystart="134" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression_1ad55183feff01e60075b59bbe828b856e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NeoN::finiteVolume::cellCentred::Expression&lt; ValueType, IndexType &gt;::setReference</definition>
        <argsstring>(const IndexType refCell, ValueType refValue)</argsstring>
        <name>setReference</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::Expression::setReference</qualifiedname>
        <param>
          <type>const IndexType</type>
          <declname>refCell</declname>
        </param>
        <param>
          <type>ValueType</type>
          <declname>refValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/dsl/expression.hpp" line="159" column="10" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/dsl/expression.hpp" bodystart="159" bodyend="176"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/dsl/expression.hpp" line="27" column="1" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/dsl/expression.hpp" bodystart="28" bodyend="186"/>
    <listofallmembers>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression_1ac7254fa5c400fe38615400f3e695548a" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::Expression</scope><name>assemble</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression_1a4b38ac1885afb4338315a6a119306ddc" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::Expression</scope><name>assemble</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression_1a3b2b4dc757790fcf661da6b47e1c1a0a" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::Expression</scope><name>exec</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression_1ad00f0205a8b83bc0c816710611294631" prot="private" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::Expression</scope><name>expr_</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression_1aab0bf4552af22f09687801782cb49ce6" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::Expression</scope><name>Expression</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression_1ac430a7c19eaca2d61a694b86930ebe2d" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::Expression</scope><name>Expression</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression_1a68d09bb0ac59990150990db10d254422" prot="private" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::Expression</scope><name>fvSchemes_</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression_1a6fa7c586c075d834daef5f140d715775" prot="private" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::Expression</scope><name>fvSolution_</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression_1ab9c6c545458030aa1daae38afa749629" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::Expression</scope><name>getVector</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression_1a4a060c97571cab58651239e783828fbf" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::Expression</scope><name>getVector</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression_1a4cfaa913d49e8f0e57ecc7595fcfbba2" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::Expression</scope><name>linearSystem</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression_1a3f50e3180cf0efa6df4e362b8d3e1bfc" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::Expression</scope><name>linearSystem</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression_1a432675b261e2bdc6a39a770fb572b16c" prot="private" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::Expression</scope><name>ls_</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression_1a6d0b144916182a57ac2294bbc44f32f1" prot="private" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::Expression</scope><name>psi_</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression_1ad55183feff01e60075b59bbe828b856e" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::Expression</scope><name>setReference</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression_1a3f8378adb3cc48d7a82d2dabd8575113" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::Expression</scope><name>solve</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression_1ad7708d86c2611df217f691f28c4f1d89" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::Expression</scope><name>sparsityPattern</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression_1a1baaff5e210051508be2e08334c37b5c" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::Expression</scope><name>sparsityPattern</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression_1ad843ac6ef3212b43a971913b04093cc3" prot="private" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::Expression</scope><name>sparsityPattern_</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression_1a229b18b0d99762553e35175e6377752b" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::Expression</scope><name>~Expression</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
