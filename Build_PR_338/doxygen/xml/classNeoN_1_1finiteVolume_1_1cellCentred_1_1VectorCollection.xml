<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection" kind="class" language="C++" prot="public">
    <compoundname>NeoN::finiteVolume::cellCentred::VectorCollection</compoundname>
    <basecompoundref refid="classNeoN_1_1CollectionMixin" prot="public" virt="non-virtual">NeoN::CollectionMixin&lt; VectorDocument &gt;</basecompoundref>
    <includes refid="fieldCollection_8hpp" local="no">fieldCollection.hpp</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection_1a3fcb2a4833def7bfbe953cba5310bda2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NeoN::finiteVolume::cellCentred::VectorCollection::VectorCollection</definition>
        <argsstring>(NeoN::Database &amp;db, std::string name)</argsstring>
        <name>VectorCollection</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::VectorCollection::VectorCollection</qualifiedname>
        <param>
          <type><ref refid="classNeoN_1_1Database" kindref="compound">NeoN::Database</ref> &amp;</type>
          <declname>db</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection" kindref="compound">VectorCollection</ref> with the given database and name. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>db</parametername>
</parameternamelist>
<parameterdescription>
<para>The database to create the collection in. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the collection. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/database/fieldCollection.hpp" line="217" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection_1a1fd75e870a1107728a81a88feb242fbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NeoN::finiteVolume::cellCentred::VectorCollection::VectorCollection</definition>
        <argsstring>(const VectorCollection &amp;)=delete</argsstring>
        <name>VectorCollection</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::VectorCollection::VectorCollection</qualifiedname>
        <param>
          <type>const <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection" kindref="compound">VectorCollection</ref> &amp;</type>
        </param>
        <briefdescription>
<para>A <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection" kindref="compound">VectorCollection</ref> is not copyable, but moveable. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/database/fieldCollection.hpp" line="222" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection_1adbfa2f627b02f15f09812b43f119580c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection" kindref="compound">VectorCollection</ref> &amp;</type>
        <definition>VectorCollection &amp; NeoN::finiteVolume::cellCentred::VectorCollection::operator=</definition>
        <argsstring>(const VectorCollection &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::VectorCollection::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection" kindref="compound">VectorCollection</ref> &amp;</type>
        </param>
        <briefdescription>
<para>A <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection" kindref="compound">VectorCollection</ref> is not copyable, but moveable. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/database/fieldCollection.hpp" line="227" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection_1a9053f0562727c03df64414ebb1541bb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NeoN::finiteVolume::cellCentred::VectorCollection::VectorCollection</definition>
        <argsstring>(VectorCollection &amp;&amp;)=default</argsstring>
        <name>VectorCollection</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::VectorCollection::VectorCollection</qualifiedname>
        <param>
          <type><ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection" kindref="compound">VectorCollection</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
<para>A <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection" kindref="compound">VectorCollection</ref> is move constructable, but not copyable. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/database/fieldCollection.hpp" line="232" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection_1ae22facdaa6a6b422c56534fbc68f4962" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection" kindref="compound">VectorCollection</ref> &amp;</type>
        <definition>VectorCollection &amp; NeoN::finiteVolume::cellCentred::VectorCollection::operator=</definition>
        <argsstring>(VectorCollection &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::VectorCollection::operator=</qualifiedname>
        <param>
          <type><ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection" kindref="compound">VectorCollection</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
<para>A <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection" kindref="compound">VectorCollection</ref> is not move-assign-able, but move-construct-able. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/database/fieldCollection.hpp" line="237" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection_1af6790f9d66e2507930021b4f9901f617" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool NeoN::finiteVolume::cellCentred::VectorCollection::contains</definition>
        <argsstring>(const std::string &amp;id) const</argsstring>
        <name>contains</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::VectorCollection::contains</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Checks if the collection contains a field with the given ID. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID of the field to check for. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the collection contains the field, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/database/fieldCollection.hpp" line="245" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection_1a8308db0eff4b6c333c975fa60e845a41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string NeoN::finiteVolume::cellCentred::VectorCollection::insert</definition>
        <argsstring>(const VectorDocument &amp;fd)</argsstring>
        <name>insert</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::VectorCollection::insert</qualifiedname>
        <param>
          <type>const <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorDocument" kindref="compound">VectorDocument</ref> &amp;</type>
          <declname>fd</declname>
        </param>
        <briefdescription>
<para>Inserts a field document into the collection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>The field document to insert. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A string representing the unique identifier of the inserted field. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/database/fieldCollection.hpp" line="253" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection_1a7f7e6fbac2bb5daeeb1d3d242b9f2d42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorDocument" kindref="compound">VectorDocument</ref> &amp;</type>
        <definition>VectorDocument &amp; NeoN::finiteVolume::cellCentred::VectorCollection::fieldDoc</definition>
        <argsstring>(const std::string &amp;id)</argsstring>
        <name>fieldDoc</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::VectorCollection::fieldDoc</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Retrieves a field document by its ID. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID of the field document to retrieve. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorDocument" kindref="compound">VectorDocument</ref>&amp; A reference to the field document. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/database/fieldCollection.hpp" line="261" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection_1a6fdf9b4bda1ffeba7cf07f32f7f8fea7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorDocument" kindref="compound">VectorDocument</ref> &amp;</type>
        <definition>const VectorDocument &amp; NeoN::finiteVolume::cellCentred::VectorCollection::fieldDoc</definition>
        <argsstring>(const std::string &amp;id) const</argsstring>
        <name>fieldDoc</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::VectorCollection::fieldDoc</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Retrieves a field document by its ID (const version). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID of the field document to retrieve. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>const <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorDocument" kindref="compound">VectorDocument</ref>&amp; A const reference to the field document. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/database/fieldCollection.hpp" line="269" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection_1a5f8085e0fff1f846252d828653a363c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VectorType</type>
          </param>
        </templateparamlist>
        <type>VectorType &amp;</type>
        <definition>VectorType &amp; NeoN::finiteVolume::cellCentred::VectorCollection::registerVector</definition>
        <argsstring>(CreateFunction createFunc)</argsstring>
        <name>registerVector</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::VectorCollection::registerVector</qualifiedname>
        <param>
          <type><ref refid="namespaceNeoN_1_1finiteVolume_1_1cellCentred_1af1c5b27f52cfe871ebc69cf0c8d11626" kindref="member">CreateFunction</ref></type>
          <declname>createFunc</declname>
        </param>
        <briefdescription>
<para>Registers a field in the collection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>VectorType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the field to register. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>createFunc</parametername>
</parameternamelist>
<parameterdescription>
<para>The function to create the field document. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to the registered field. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/database/fieldCollection.hpp" line="335" column="16" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/core/database/fieldCollection.hpp" bodystart="335" bodyend="349"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection_1af7dc5506c3e37cd10181f5f58d9668c3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection" kindref="compound">VectorCollection</ref> &amp;</type>
        <definition>static VectorCollection &amp; NeoN::finiteVolume::cellCentred::VectorCollection::instance</definition>
        <argsstring>(NeoN::Database &amp;db, std::string name)</argsstring>
        <name>instance</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::VectorCollection::instance</qualifiedname>
        <param>
          <type><ref refid="classNeoN_1_1Database" kindref="compound">NeoN::Database</ref> &amp;</type>
          <declname>db</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Retrieves the instance of the <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection" kindref="compound">VectorCollection</ref> with the given name. </para>
        </briefdescription>
        <detaileddescription>
<para>creates the <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection" kindref="compound">VectorCollection</ref> if it does not exist.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>db</parametername>
</parameternamelist>
<parameterdescription>
<para>The database to retrieve the <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection" kindref="compound">VectorCollection</ref> from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection" kindref="compound">VectorCollection</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection" kindref="compound">VectorCollection</ref>&amp; A reference to the <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection" kindref="compound">VectorCollection</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/database/fieldCollection.hpp" line="280" column="29"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection_1a413ed18056cc90eb9815cb94cc741fb8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection" kindref="compound">VectorCollection</ref> &amp;</type>
        <definition>static const VectorCollection &amp; NeoN::finiteVolume::cellCentred::VectorCollection::instance</definition>
        <argsstring>(const NeoN::Database &amp;db, std::string name)</argsstring>
        <name>instance</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::VectorCollection::instance</qualifiedname>
        <param>
          <type>const <ref refid="classNeoN_1_1Database" kindref="compound">NeoN::Database</ref> &amp;</type>
          <declname>db</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Retrieves the instance of the <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection" kindref="compound">VectorCollection</ref> with the given name (const version). </para>
        </briefdescription>
        <detaileddescription>
<para>creates the <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection" kindref="compound">VectorCollection</ref> if it does not exist.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>db</parametername>
</parameternamelist>
<parameterdescription>
<para>The database to retrieve the <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection" kindref="compound">VectorCollection</ref> from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection" kindref="compound">VectorCollection</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>const <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection" kindref="compound">VectorCollection</ref>&amp; A const reference to the <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection" kindref="compound">VectorCollection</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/database/fieldCollection.hpp" line="292" column="35"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection_1a7c521bf11f7aba749d5810c1acc0b451" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VectorType</type>
          </param>
        </templateparamlist>
        <type><ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection" kindref="compound">VectorCollection</ref> &amp;</type>
        <definition>static VectorCollection &amp; NeoN::finiteVolume::cellCentred::VectorCollection::instance</definition>
        <argsstring>(VectorType &amp;field)</argsstring>
        <name>instance</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::VectorCollection::instance</qualifiedname>
        <param>
          <type>VectorType &amp;</type>
          <declname>field</declname>
        </param>
        <briefdescription>
<para>Retrieves the instance of the <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection" kindref="compound">VectorCollection</ref> from a const registered VectorType. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>A registered VectorType </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection" kindref="compound">VectorCollection</ref>&amp; A reference to the <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection" kindref="compound">VectorCollection</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/database/fieldCollection.hpp" line="301" column="29" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/core/database/fieldCollection.hpp" bodystart="301" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection_1abf0c9fdaffd993cb3b2aecafd3cfd456" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VectorType</type>
          </param>
        </templateparamlist>
        <type>const <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection" kindref="compound">VectorCollection</ref> &amp;</type>
        <definition>static const VectorCollection &amp; NeoN::finiteVolume::cellCentred::VectorCollection::instance</definition>
        <argsstring>(const VectorType &amp;field)</argsstring>
        <name>instance</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::VectorCollection::instance</qualifiedname>
        <param>
          <type>const VectorType &amp;</type>
          <declname>field</declname>
        </param>
        <briefdescription>
<para>Retrieves the instance of the <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection" kindref="compound">VectorCollection</ref> from a const registered VectorType. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>A registered VectorType </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection" kindref="compound">VectorCollection</ref>&amp; A reference to the <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection" kindref="compound">VectorCollection</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/database/fieldCollection.hpp" line="316" column="35" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/core/database/fieldCollection.hpp" bodystart="316" bodyend="325"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A class representing a collection of field documents in a database. </para>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection" kindref="compound">VectorCollection</ref> class represents a collection of field documents in a database and provides additional functionality for accessing field-specific data. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>NeoN::CollectionMixin&lt; VectorDocument &gt;</label>
        <link refid="classNeoN_1_1CollectionMixin"/>
      </node>
      <node id="1">
        <label>NeoN::finiteVolume::cellCentred::VectorCollection</label>
        <link refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>NeoN::CollectionMixin&lt; VectorDocument &gt;</label>
        <link refid="classNeoN_1_1CollectionMixin"/>
        <childnode refid="3" relation="usage">
          <edgelabel>db_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>NeoN::Database</label>
        <link refid="classNeoN_1_1Database"/>
      </node>
      <node id="1">
        <label>NeoN::finiteVolume::cellCentred::VectorCollection</label>
        <link refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/database/fieldCollection.hpp" line="207" column="1" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/core/database/fieldCollection.hpp" bodystart="208" bodyend="350"/>
    <listofallmembers>
      <member refid="classNeoN_1_1CollectionMixin_1a5c533ffeda2bfb3b0dd6140a9b33933b" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VectorCollection</scope><name>CollectionMixin</name></member>
      <member refid="classNeoN_1_1CollectionMixin_1abaa1804d768e094625d6253d972e0dfb" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VectorCollection</scope><name>CollectionMixin</name></member>
      <member refid="classNeoN_1_1CollectionMixin_1a7c8d6846fe92a5dd9319e877a45c0d97" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VectorCollection</scope><name>CollectionMixin</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection_1af6790f9d66e2507930021b4f9901f617" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VectorCollection</scope><name>contains</name></member>
      <member refid="classNeoN_1_1CollectionMixin_1a817c2dc43ae8feac71fc686fb2ba7b13" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VectorCollection</scope><name>db</name></member>
      <member refid="classNeoN_1_1CollectionMixin_1a382c73d467ed7c093f47f4158ef41956" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VectorCollection</scope><name>db</name></member>
      <member refid="classNeoN_1_1CollectionMixin_1aa737ea2c96d46037f80d4524f0d843da" prot="protected" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VectorCollection</scope><name>db_</name></member>
      <member refid="classNeoN_1_1CollectionMixin_1af3c8806d121577d87af64f7e8bc90270" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VectorCollection</scope><name>doc</name></member>
      <member refid="classNeoN_1_1CollectionMixin_1a40da7d5e6f9121c4892bc3a7f7feb574" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VectorCollection</scope><name>doc</name></member>
      <member refid="classNeoN_1_1CollectionMixin_1a999afc07d7b24436f26ee1865dbcd6a0" prot="protected" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VectorCollection</scope><name>docs_</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection_1a7f7e6fbac2bb5daeeb1d3d242b9f2d42" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VectorCollection</scope><name>fieldDoc</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection_1a6fdf9b4bda1ffeba7cf07f32f7f8fea7" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VectorCollection</scope><name>fieldDoc</name></member>
      <member refid="classNeoN_1_1CollectionMixin_1a5d4b588b1edf7fba73f8a2ef77c0cdc1" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VectorCollection</scope><name>find</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection_1a8308db0eff4b6c333c975fa60e845a41" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VectorCollection</scope><name>insert</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection_1af7dc5506c3e37cd10181f5f58d9668c3" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VectorCollection</scope><name>instance</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection_1a413ed18056cc90eb9815cb94cc741fb8" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VectorCollection</scope><name>instance</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection_1a7c521bf11f7aba749d5810c1acc0b451" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VectorCollection</scope><name>instance</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection_1abf0c9fdaffd993cb3b2aecafd3cfd456" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VectorCollection</scope><name>instance</name></member>
      <member refid="classNeoN_1_1CollectionMixin_1a3e11a5752aceb65be85c9b015ccc59af" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VectorCollection</scope><name>name</name></member>
      <member refid="classNeoN_1_1CollectionMixin_1a019b4a98e1b7c10e7657bf5922a0ca3c" prot="protected" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VectorCollection</scope><name>name_</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection_1adbfa2f627b02f15f09812b43f119580c" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VectorCollection</scope><name>operator=</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection_1ae22facdaa6a6b422c56534fbc68f4962" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VectorCollection</scope><name>operator=</name></member>
      <member refid="classNeoN_1_1CollectionMixin_1ab48c00584d4b9374460a65e25ecc211c" prot="public" virt="non-virtual" ambiguityscope="CollectionMixin&lt; VectorDocument &gt;::"><scope>NeoN::finiteVolume::cellCentred::VectorCollection</scope><name>operator=</name></member>
      <member refid="classNeoN_1_1CollectionMixin_1a019cd00d1007114c97e6c76757822b7a" prot="public" virt="non-virtual" ambiguityscope="CollectionMixin&lt; VectorDocument &gt;::"><scope>NeoN::finiteVolume::cellCentred::VectorCollection</scope><name>operator=</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection_1a5f8085e0fff1f846252d828653a363c0" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VectorCollection</scope><name>registerVector</name></member>
      <member refid="classNeoN_1_1CollectionMixin_1a68e559c60897ba6c5edf6c90ce56bc59" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VectorCollection</scope><name>size</name></member>
      <member refid="classNeoN_1_1CollectionMixin_1aee4265b72483f00cc9057213b6e930dc" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VectorCollection</scope><name>sortedKeys</name></member>
      <member refid="classNeoN_1_1CollectionMixin_1a996d80b8f25ae166443b99cae12c3497" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VectorCollection</scope><name>type</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection_1a3fcb2a4833def7bfbe953cba5310bda2" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VectorCollection</scope><name>VectorCollection</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection_1a1fd75e870a1107728a81a88feb242fbf" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VectorCollection</scope><name>VectorCollection</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VectorCollection_1a9053f0562727c03df64414ebb1541bb7" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::VectorCollection</scope><name>VectorCollection</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
