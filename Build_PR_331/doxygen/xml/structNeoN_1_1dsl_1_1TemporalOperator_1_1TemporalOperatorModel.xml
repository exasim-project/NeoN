<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structNeoN_1_1dsl_1_1TemporalOperator_1_1TemporalOperatorModel" kind="struct" language="C++" prot="private">
    <compoundname>NeoN::dsl::TemporalOperator::TemporalOperatorModel</compoundname>
    <basecompoundref prot="public" virt="non-virtual">NeoN::dsl::TemporalOperator&lt; ValueType &gt;::TemporalOperatorConcept</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename ConcreteTemporalOperatorType</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structNeoN_1_1dsl_1_1TemporalOperator_1_1TemporalOperatorModel_1abcc3e9d6be6570883ab3dcb066d6e2ff" prot="public" static="no" mutable="no">
        <type>ConcreteTemporalOperatorType</type>
        <definition>ConcreteTemporalOperatorType NeoN::dsl::TemporalOperator&lt; ValueType &gt;::TemporalOperatorModel&lt; ConcreteTemporalOperatorType &gt;::concreteOp_</definition>
        <argsstring></argsstring>
        <name>concreteOp_</name>
        <qualifiedname>NeoN::dsl::TemporalOperator::TemporalOperatorModel::concreteOp_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" line="182" column="38" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" bodystart="182" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structNeoN_1_1dsl_1_1TemporalOperator_1_1TemporalOperatorModel_1a5dbedce9516177aebf4755a93c58bc11" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoN::dsl::TemporalOperator&lt; ValueType &gt;::TemporalOperatorModel&lt; ConcreteTemporalOperatorType &gt;::TemporalOperatorModel</definition>
        <argsstring>(ConcreteTemporalOperatorType concreteOp)</argsstring>
        <name>TemporalOperatorModel</name>
        <qualifiedname>NeoN::dsl::TemporalOperator::TemporalOperatorModel::TemporalOperatorModel</qualifiedname>
        <param>
          <type>ConcreteTemporalOperatorType</type>
          <declname>concreteOp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" line="137" column="9" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" bodystart="137" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="structNeoN_1_1dsl_1_1TemporalOperator_1_1TemporalOperatorModel_1a7cc1fbc9caa53721359d60f716cfd061" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string NeoN::dsl::TemporalOperator&lt; ValueType &gt;::TemporalOperatorModel&lt; ConcreteTemporalOperatorType &gt;::getName</definition>
        <argsstring>() const override</argsstring>
        <name>getName</name>
        <qualifiedname>NeoN::dsl::TemporalOperator::TemporalOperatorModel::getName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" line="142" column="21" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" bodystart="142" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="structNeoN_1_1dsl_1_1TemporalOperator_1_1TemporalOperatorModel_1aba276c2c717bb4ef89cf8e05cdcf6ed2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void NeoN::dsl::TemporalOperator&lt; ValueType &gt;::TemporalOperatorModel&lt; ConcreteTemporalOperatorType &gt;::explicitOperation</definition>
        <argsstring>(Vector&lt; ValueType &gt; &amp;source, scalar t, scalar dt) override</argsstring>
        <name>explicitOperation</name>
        <qualifiedname>NeoN::dsl::TemporalOperator::TemporalOperatorModel::explicitOperation</qualifiedname>
        <param>
          <type><ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref>&lt; ValueType &gt; &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type><ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">scalar</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">scalar</ref></type>
          <declname>dt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" line="144" column="22" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" bodystart="144" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="structNeoN_1_1dsl_1_1TemporalOperator_1_1TemporalOperatorModel_1a2942ace46b34ba3363ea2533ccb263c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void NeoN::dsl::TemporalOperator&lt; ValueType &gt;::TemporalOperatorModel&lt; ConcreteTemporalOperatorType &gt;::implicitOperation</definition>
        <argsstring>(la::LinearSystem&lt; ValueType, localIdx &gt; &amp;ls, scalar t, scalar dt) override</argsstring>
        <name>implicitOperation</name>
        <qualifiedname>NeoN::dsl::TemporalOperator::TemporalOperatorModel::implicitOperation</qualifiedname>
        <param>
          <type><ref refid="classNeoN_1_1la_1_1LinearSystem" kindref="compound">la::LinearSystem</ref>&lt; ValueType, <ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref> &gt; &amp;</type>
          <declname>ls</declname>
        </param>
        <param>
          <type><ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">scalar</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">scalar</ref></type>
          <declname>dt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" line="153" column="9" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" bodystart="153" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="structNeoN_1_1dsl_1_1TemporalOperator_1_1TemporalOperatorModel_1a54cf3a5280307eb6843f6d118b31c93c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void NeoN::dsl::TemporalOperator&lt; ValueType &gt;::TemporalOperatorModel&lt; ConcreteTemporalOperatorType &gt;::read</definition>
        <argsstring>(const Input &amp;input) override</argsstring>
        <name>read</name>
        <qualifiedname>NeoN::dsl::TemporalOperator::TemporalOperatorModel::read</qualifiedname>
        <param>
          <type>const <ref refid="namespaceNeoN_1a0f89cac0ba212d1026c9fedc65742cea" kindref="member">Input</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" line="162" column="22" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" bodystart="162" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="structNeoN_1_1dsl_1_1TemporalOperator_1_1TemporalOperatorModel_1a2f39e9439ad38088b2dd8225134237eb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoN_1_1dsl_1_1Operator_1ad72823c9a2d04641ab7c7181902f6dd3" kindref="member">Operator::Type</ref></type>
        <definition>Operator::Type NeoN::dsl::TemporalOperator&lt; ValueType &gt;::TemporalOperatorModel&lt; ConcreteTemporalOperatorType &gt;::getType</definition>
        <argsstring>() const override</argsstring>
        <name>getType</name>
        <qualifiedname>NeoN::dsl::TemporalOperator::TemporalOperatorModel::getType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" line="165" column="24" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" bodystart="165" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="structNeoN_1_1dsl_1_1TemporalOperator_1_1TemporalOperatorModel_1aef6ce0322a3497dd430e76834f812293" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">Executor</ref> &amp;</type>
        <definition>const Executor &amp; NeoN::dsl::TemporalOperator&lt; ValueType &gt;::TemporalOperatorModel&lt; ConcreteTemporalOperatorType &gt;::exec</definition>
        <argsstring>() const override</argsstring>
        <name>exec</name>
        <qualifiedname>NeoN::dsl::TemporalOperator::TemporalOperatorModel::exec</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" line="168" column="24" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" bodystart="168" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="structNeoN_1_1dsl_1_1TemporalOperator_1_1TemporalOperatorModel_1a9cea8c74a8d70c18e9bc8b588684ea80" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classNeoN_1_1dsl_1_1Coeff" kindref="compound">Coeff</ref> &amp;</type>
        <definition>virtual Coeff &amp; NeoN::dsl::TemporalOperator&lt; ValueType &gt;::TemporalOperatorModel&lt; ConcreteTemporalOperatorType &gt;::getCoefficient</definition>
        <argsstring>() override</argsstring>
        <name>getCoefficient</name>
        <qualifiedname>NeoN::dsl::TemporalOperator::TemporalOperatorModel::getCoefficient</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" line="171" column="23" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" bodystart="171" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="structNeoN_1_1dsl_1_1TemporalOperator_1_1TemporalOperatorModel_1a3983b9cd62618a01542400a14e22a2df" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classNeoN_1_1dsl_1_1Coeff" kindref="compound">Coeff</ref></type>
        <definition>virtual Coeff NeoN::dsl::TemporalOperator&lt; ValueType &gt;::TemporalOperatorModel&lt; ConcreteTemporalOperatorType &gt;::getCoefficient</definition>
        <argsstring>() const override</argsstring>
        <name>getCoefficient</name>
        <qualifiedname>NeoN::dsl::TemporalOperator::TemporalOperatorModel::getCoefficient</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" line="174" column="23" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" bodystart="174" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="structNeoN_1_1dsl_1_1TemporalOperator_1_1TemporalOperatorModel_1af7669e9969b308c66dc78bff31793157" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::unique_ptr&lt; TemporalOperatorConcept &gt;</type>
        <definition>std::unique_ptr&lt; TemporalOperatorConcept &gt; NeoN::dsl::TemporalOperator&lt; ValueType &gt;::TemporalOperatorModel&lt; ConcreteTemporalOperatorType &gt;::clone</definition>
        <argsstring>() const override</argsstring>
        <name>clone</name>
        <qualifiedname>NeoN::dsl::TemporalOperator::TemporalOperatorModel::clone</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" line="177" column="25" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" bodystart="177" bodyend="180"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>NeoN::dsl::TemporalOperator&lt; ValueType &gt;::TemporalOperatorConcept</label>
      </node>
      <node id="1">
        <label>NeoN::dsl::TemporalOperator&lt; ValueType &gt;::TemporalOperatorModel&lt; ConcreteTemporalOperatorType &gt;</label>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>NeoN::dsl::TemporalOperator&lt; ValueType &gt;::TemporalOperatorConcept</label>
      </node>
      <node id="1">
        <label>NeoN::dsl::TemporalOperator&lt; ValueType &gt;::TemporalOperatorModel&lt; ConcreteTemporalOperatorType &gt;</label>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" line="134" column="5" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp" bodystart="135" bodyend="183"/>
    <listofallmembers>
      <member refid="structNeoN_1_1dsl_1_1TemporalOperator_1_1TemporalOperatorModel_1af7669e9969b308c66dc78bff31793157" prot="public" virt="non-virtual"><scope>NeoN::dsl::TemporalOperator::TemporalOperatorModel</scope><name>clone</name></member>
      <member refid="structNeoN_1_1dsl_1_1TemporalOperator_1_1TemporalOperatorModel_1abcc3e9d6be6570883ab3dcb066d6e2ff" prot="public" virt="non-virtual"><scope>NeoN::dsl::TemporalOperator::TemporalOperatorModel</scope><name>concreteOp_</name></member>
      <member refid="structNeoN_1_1dsl_1_1TemporalOperator_1_1TemporalOperatorModel_1aef6ce0322a3497dd430e76834f812293" prot="public" virt="non-virtual"><scope>NeoN::dsl::TemporalOperator::TemporalOperatorModel</scope><name>exec</name></member>
      <member refid="structNeoN_1_1dsl_1_1TemporalOperator_1_1TemporalOperatorModel_1aba276c2c717bb4ef89cf8e05cdcf6ed2" prot="public" virt="virtual"><scope>NeoN::dsl::TemporalOperator::TemporalOperatorModel</scope><name>explicitOperation</name></member>
      <member refid="structNeoN_1_1dsl_1_1TemporalOperator_1_1TemporalOperatorModel_1a9cea8c74a8d70c18e9bc8b588684ea80" prot="public" virt="virtual"><scope>NeoN::dsl::TemporalOperator::TemporalOperatorModel</scope><name>getCoefficient</name></member>
      <member refid="structNeoN_1_1dsl_1_1TemporalOperator_1_1TemporalOperatorModel_1a3983b9cd62618a01542400a14e22a2df" prot="public" virt="virtual"><scope>NeoN::dsl::TemporalOperator::TemporalOperatorModel</scope><name>getCoefficient</name></member>
      <member refid="structNeoN_1_1dsl_1_1TemporalOperator_1_1TemporalOperatorModel_1a7cc1fbc9caa53721359d60f716cfd061" prot="public" virt="non-virtual"><scope>NeoN::dsl::TemporalOperator::TemporalOperatorModel</scope><name>getName</name></member>
      <member refid="structNeoN_1_1dsl_1_1TemporalOperator_1_1TemporalOperatorModel_1a2f39e9439ad38088b2dd8225134237eb" prot="public" virt="non-virtual"><scope>NeoN::dsl::TemporalOperator::TemporalOperatorModel</scope><name>getType</name></member>
      <member refid="structNeoN_1_1dsl_1_1TemporalOperator_1_1TemporalOperatorModel_1a2942ace46b34ba3363ea2533ccb263c1" prot="public" virt="virtual"><scope>NeoN::dsl::TemporalOperator::TemporalOperatorModel</scope><name>implicitOperation</name></member>
      <member refid="structNeoN_1_1dsl_1_1TemporalOperator_1_1TemporalOperatorModel_1a54cf3a5280307eb6843f6d118b31c93c" prot="public" virt="virtual"><scope>NeoN::dsl::TemporalOperator::TemporalOperatorModel</scope><name>read</name></member>
      <member refid="structNeoN_1_1dsl_1_1TemporalOperator_1_1TemporalOperatorModel_1a5dbedce9516177aebf4755a93c58bc11" prot="public" virt="non-virtual"><scope>NeoN::dsl::TemporalOperator::TemporalOperatorModel</scope><name>TemporalOperatorModel</name></member>
      <member refid="structNeoN_1_1dsl_1_1TemporalOperator_1_1TemporalOperatorConcept_1ad36f69714075845826b2faa7cab8776e" prot="public" virt="virtual"><scope>NeoN::dsl::TemporalOperator::TemporalOperatorModel</scope><name>~TemporalOperatorConcept</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
