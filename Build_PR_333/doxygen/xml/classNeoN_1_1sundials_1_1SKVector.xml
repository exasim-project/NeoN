<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classNeoN_1_1sundials_1_1SKVector" kind="class" language="C++" prot="public">
    <compoundname>NeoN::sundials::SKVector</compoundname>
    <includes refid="sundials_8hpp" local="no">sundials.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename ValueType</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classNeoN_1_1sundials_1_1SKVector_1a6f44a918379395ebcb47572213e7ef20" prot="public" static="no">
        <type><ref refid="classNeoN_1_1sundials_1_1SKVectorSerial" kindref="compound">SKVectorSerial</ref>&lt; ValueType &gt;</type>
        <definition>using NeoN::sundials::SKVector&lt; ValueType &gt;::SKVectorSerialV =  SKVectorSerial&lt;ValueType&gt;</definition>
        <argsstring></argsstring>
        <name>SKVectorSerialV</name>
        <qualifiedname>NeoN::sundials::SKVector::SKVectorSerialV</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/timeIntegration/sundials.hpp" line="376" column="5" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/timeIntegration/sundials.hpp" bodystart="376" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classNeoN_1_1sundials_1_1SKVector_1a8bf00f10e8ac0094fa7289f3ef88f0fc" prot="public" static="no">
        <type><ref refid="classNeoN_1_1sundials_1_1SKVectorHostDefault" kindref="compound">SKVectorHostDefault</ref>&lt; ValueType &gt;</type>
        <definition>using NeoN::sundials::SKVector&lt; ValueType &gt;::SKVectorHostDefaultV =  SKVectorHostDefault&lt;ValueType&gt;</definition>
        <argsstring></argsstring>
        <name>SKVectorHostDefaultV</name>
        <qualifiedname>NeoN::sundials::SKVector::SKVectorHostDefaultV</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/timeIntegration/sundials.hpp" line="377" column="5" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/timeIntegration/sundials.hpp" bodystart="377" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classNeoN_1_1sundials_1_1SKVector_1ae86efaf7da383d97231f1fdeed3598d8" prot="public" static="no">
        <type><ref refid="classNeoN_1_1sundials_1_1SKVectorDefault" kindref="compound">SKVectorDefault</ref>&lt; ValueType &gt;</type>
        <definition>using NeoN::sundials::SKVector&lt; ValueType &gt;::SKDefaultVectorV =  SKVectorDefault&lt;ValueType&gt;</definition>
        <argsstring></argsstring>
        <name>SKDefaultVectorV</name>
        <qualifiedname>NeoN::sundials::SKVector::SKDefaultVectorV</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/timeIntegration/sundials.hpp" line="378" column="5" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/timeIntegration/sundials.hpp" bodystart="378" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classNeoN_1_1sundials_1_1SKVector_1ad31adb2bd937b354f20430e5ed0c4fd0" prot="public" static="no">
        <type>std::variant&lt; <ref refid="classNeoN_1_1sundials_1_1SKVector_1a6f44a918379395ebcb47572213e7ef20" kindref="member">SKVectorSerialV</ref>, <ref refid="classNeoN_1_1sundials_1_1SKVector_1a8bf00f10e8ac0094fa7289f3ef88f0fc" kindref="member">SKVectorHostDefaultV</ref>, <ref refid="classNeoN_1_1sundials_1_1SKVector_1ae86efaf7da383d97231f1fdeed3598d8" kindref="member">SKDefaultVectorV</ref> &gt;</type>
        <definition>using NeoN::sundials::SKVector&lt; ValueType &gt;::SKVectorVariant =  std::variant&lt;SKVectorSerialV, SKVectorHostDefaultV, SKDefaultVectorV&gt;</definition>
        <argsstring></argsstring>
        <name>SKVectorVariant</name>
        <qualifiedname>NeoN::sundials::SKVector::SKVectorVariant</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/timeIntegration/sundials.hpp" line="379" column="5" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/timeIntegration/sundials.hpp" bodystart="379" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classNeoN_1_1sundials_1_1SKVector_1a80d173a920e18aabcaf2343dada7c8a5" prot="private" static="no" mutable="no">
        <type><ref refid="classNeoN_1_1sundials_1_1SKVector_1ad31adb2bd937b354f20430e5ed0c4fd0" kindref="member">SKVectorVariant</ref></type>
        <definition>SKVectorVariant NeoN::sundials::SKVector&lt; ValueType &gt;::vector_</definition>
        <argsstring></argsstring>
        <name>vector_</name>
        <qualifiedname>NeoN::sundials::SKVector::vector_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Variant storing executor-specific vector implementation </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/timeIntegration/sundials.hpp" line="487" column="21" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/timeIntegration/sundials.hpp" bodystart="487" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classNeoN_1_1sundials_1_1SKVector_1a55efd18a8ac8a7f87439b1c58cc30a7d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoN::sundials::SKVector&lt; ValueType &gt;::SKVector</definition>
        <argsstring>()</argsstring>
        <name>SKVector</name>
        <qualifiedname>NeoN::sundials::SKVector::SKVector</qualifiedname>
        <briefdescription>
<para>Default constructor. Initializes with host-default vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/timeIntegration/sundials.hpp" line="384" column="5" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/timeIntegration/sundials.hpp" bodystart="384" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1sundials_1_1SKVector_1a9dd70282bf6718a25e8ad810a4f707e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NeoN::sundials::SKVector&lt; ValueType &gt;::~SKVector</definition>
        <argsstring>()=default</argsstring>
        <name>~SKVector</name>
        <qualifiedname>NeoN::sundials::SKVector::~SKVector</qualifiedname>
        <briefdescription>
<para>Default destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/timeIntegration/sundials.hpp" line="389" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1sundials_1_1SKVector_1a913b7a91de436ab615affd6f507fc578" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NeoN::sundials::SKVector&lt; ValueType &gt;::SKVector</definition>
        <argsstring>(const SKVector &amp;)=default</argsstring>
        <name>SKVector</name>
        <qualifiedname>NeoN::sundials::SKVector::SKVector</qualifiedname>
        <param>
          <type>const <ref refid="classNeoN_1_1sundials_1_1SKVector" kindref="compound">SKVector</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">other</parametername>
</parameternamelist>
<parameterdescription>
<para>Source <ref refid="classNeoN_1_1sundials_1_1SKVector" kindref="compound">SKVector</ref> to copy from </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/timeIntegration/sundials.hpp" line="395" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1sundials_1_1SKVector_1a7826492b421fe6765099271e2b872623" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classNeoN_1_1sundials_1_1SKVector" kindref="compound">SKVector</ref> &amp;</type>
        <definition>SKVector &amp; NeoN::sundials::SKVector&lt; ValueType &gt;::operator=</definition>
        <argsstring>(const SKVector &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>NeoN::sundials::SKVector::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classNeoN_1_1sundials_1_1SKVector" kindref="compound">SKVector</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Copy assignment operator (deleted). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/timeIntegration/sundials.hpp" line="400" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1sundials_1_1SKVector_1a90f0b55a7a83e627495a5698b3a379c2" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>NeoN::sundials::SKVector&lt; ValueType &gt;::SKVector</definition>
        <argsstring>(SKVector &amp;&amp;) noexcept=default</argsstring>
        <name>SKVector</name>
        <qualifiedname>NeoN::sundials::SKVector::SKVector</qualifiedname>
        <param>
          <type><ref refid="classNeoN_1_1sundials_1_1SKVector" kindref="compound">SKVector</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
<para>Move constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">other</parametername>
</parameternamelist>
<parameterdescription>
<para>Source <ref refid="classNeoN_1_1sundials_1_1SKVector" kindref="compound">SKVector</ref> to move from </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/timeIntegration/sundials.hpp" line="406" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1sundials_1_1SKVector_1a842b6445b72ad55903ec61f21b05c2cc" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="classNeoN_1_1sundials_1_1SKVector" kindref="compound">SKVector</ref> &amp;</type>
        <definition>SKVector &amp; NeoN::sundials::SKVector&lt; ValueType &gt;::operator=</definition>
        <argsstring>(SKVector &amp;&amp;) noexcept=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>NeoN::sundials::SKVector::operator=</qualifiedname>
        <param>
          <type><ref refid="classNeoN_1_1sundials_1_1SKVector" kindref="compound">SKVector</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
<para>Move assignment operator (deleted). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/timeIntegration/sundials.hpp" line="411" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1sundials_1_1SKVector_1a7dc25bd6dec0981fad907c94c66da645" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NeoN::sundials::SKVector&lt; ValueType &gt;::setExecutor</definition>
        <argsstring>(const NeoN::Executor &amp;exec)</argsstring>
        <name>setExecutor</name>
        <qualifiedname>NeoN::sundials::SKVector::setExecutor</qualifiedname>
        <param>
          <type>const <ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">NeoN::Executor</ref> &amp;</type>
          <declname>exec</declname>
        </param>
        <briefdescription>
<para>Sets appropriate vector implementation based on executor type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">exec</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="namespaceNeoN" kindref="compound">NeoN</ref> executor specifying computation space </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/timeIntegration/sundials.hpp" line="417" column="10" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/timeIntegration/sundials.hpp" bodystart="417" bodyend="439"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1sundials_1_1SKVector_1a1728457d156cf45c87eaba4bf32ea7a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NeoN::sundials::SKVector&lt; ValueType &gt;::initNVector</definition>
        <argsstring>(size_t size, std::shared_ptr&lt; SUNContext &gt; context)</argsstring>
        <name>initNVector</name>
        <qualifiedname>NeoN::sundials::SKVector::initNVector</qualifiedname>
        <param>
          <type><ref refid="namespaceNeoN_1a5ea7bf3a45fbcf9c6ee454474ab13c06" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; SUNContext &gt;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Initializes underlying vector with given size and context. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of vector elements </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>SUNDIALS context for vector operations </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/timeIntegration/sundials.hpp" line="446" column="10" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/timeIntegration/sundials.hpp" bodystart="446" bodyend="451"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1sundials_1_1SKVector_1a3741786c8803463c8474313439d4f62e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const N_Vector &amp;</type>
        <definition>const N_Vector &amp; NeoN::sundials::SKVector&lt; ValueType &gt;::sunNVector</definition>
        <argsstring>() const</argsstring>
        <name>sunNVector</name>
        <qualifiedname>NeoN::sundials::SKVector::sunNVector</qualifiedname>
        <briefdescription>
<para>Gets const reference to underlying N_Vector. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Const reference to wrapped SUNDIALS N_Vector </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/timeIntegration/sundials.hpp" line="457" column="20" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/timeIntegration/sundials.hpp" bodystart="457" bodyend="462"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1sundials_1_1SKVector_1a51f1a5ba7d6887820486572983a39296" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>N_Vector &amp;</type>
        <definition>N_Vector &amp; NeoN::sundials::SKVector&lt; ValueType &gt;::sunNVector</definition>
        <argsstring>()</argsstring>
        <name>sunNVector</name>
        <qualifiedname>NeoN::sundials::SKVector::sunNVector</qualifiedname>
        <briefdescription>
<para>Gets mutable reference to underlying N_Vector. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Mutable reference to wrapped SUNDIALS N_Vector </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/timeIntegration/sundials.hpp" line="468" column="14" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/timeIntegration/sundials.hpp" bodystart="468" bodyend="471"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1sundials_1_1SKVector_1a6eabd2e44193e47f31b086d5ca43d4e3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classNeoN_1_1sundials_1_1SKVector_1ad31adb2bd937b354f20430e5ed0c4fd0" kindref="member">SKVectorVariant</ref> &amp;</type>
        <definition>const SKVectorVariant &amp; NeoN::sundials::SKVector&lt; ValueType &gt;::variant</definition>
        <argsstring>() const</argsstring>
        <name>variant</name>
        <qualifiedname>NeoN::sundials::SKVector::variant</qualifiedname>
        <briefdescription>
<para>Gets const reference to variant storing implementation. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Const reference to vector variant </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/timeIntegration/sundials.hpp" line="477" column="27" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/timeIntegration/sundials.hpp" bodystart="477" bodyend="477"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1sundials_1_1SKVector_1a0f9b14c6f6d4ee27a621c9dd8089c06b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoN_1_1sundials_1_1SKVector_1ad31adb2bd937b354f20430e5ed0c4fd0" kindref="member">SKVectorVariant</ref> &amp;</type>
        <definition>SKVectorVariant &amp; NeoN::sundials::SKVector&lt; ValueType &gt;::variant</definition>
        <argsstring>()</argsstring>
        <name>variant</name>
        <qualifiedname>NeoN::sundials::SKVector::variant</qualifiedname>
        <briefdescription>
<para>Gets mutable reference to variant storing implementation. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Mutable reference to vector variant </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/timeIntegration/sundials.hpp" line="483" column="21" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/timeIntegration/sundials.hpp" bodystart="483" bodyend="483"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Unified interface for SUNDIALS Kokkos vector management. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ValueType</parametername>
</parameternamelist>
<parameterdescription>
<para>The vector data type</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Manages executor-specific vector implementations through variant storage. Provides common interface for vector initialization and access. </para>
    </detaileddescription>
    <location file="/home/runner/work/NeoN/NeoN/include/NeoN/timeIntegration/sundials.hpp" line="372" column="1" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/timeIntegration/sundials.hpp" bodystart="373" bodyend="488"/>
    <listofallmembers>
      <member refid="classNeoN_1_1sundials_1_1SKVector_1a1728457d156cf45c87eaba4bf32ea7a1" prot="public" virt="non-virtual"><scope>NeoN::sundials::SKVector</scope><name>initNVector</name></member>
      <member refid="classNeoN_1_1sundials_1_1SKVector_1a7826492b421fe6765099271e2b872623" prot="public" virt="non-virtual"><scope>NeoN::sundials::SKVector</scope><name>operator=</name></member>
      <member refid="classNeoN_1_1sundials_1_1SKVector_1a842b6445b72ad55903ec61f21b05c2cc" prot="public" virt="non-virtual"><scope>NeoN::sundials::SKVector</scope><name>operator=</name></member>
      <member refid="classNeoN_1_1sundials_1_1SKVector_1a7dc25bd6dec0981fad907c94c66da645" prot="public" virt="non-virtual"><scope>NeoN::sundials::SKVector</scope><name>setExecutor</name></member>
      <member refid="classNeoN_1_1sundials_1_1SKVector_1ae86efaf7da383d97231f1fdeed3598d8" prot="public" virt="non-virtual"><scope>NeoN::sundials::SKVector</scope><name>SKDefaultVectorV</name></member>
      <member refid="classNeoN_1_1sundials_1_1SKVector_1a55efd18a8ac8a7f87439b1c58cc30a7d" prot="public" virt="non-virtual"><scope>NeoN::sundials::SKVector</scope><name>SKVector</name></member>
      <member refid="classNeoN_1_1sundials_1_1SKVector_1a913b7a91de436ab615affd6f507fc578" prot="public" virt="non-virtual"><scope>NeoN::sundials::SKVector</scope><name>SKVector</name></member>
      <member refid="classNeoN_1_1sundials_1_1SKVector_1a90f0b55a7a83e627495a5698b3a379c2" prot="public" virt="non-virtual"><scope>NeoN::sundials::SKVector</scope><name>SKVector</name></member>
      <member refid="classNeoN_1_1sundials_1_1SKVector_1a8bf00f10e8ac0094fa7289f3ef88f0fc" prot="public" virt="non-virtual"><scope>NeoN::sundials::SKVector</scope><name>SKVectorHostDefaultV</name></member>
      <member refid="classNeoN_1_1sundials_1_1SKVector_1a6f44a918379395ebcb47572213e7ef20" prot="public" virt="non-virtual"><scope>NeoN::sundials::SKVector</scope><name>SKVectorSerialV</name></member>
      <member refid="classNeoN_1_1sundials_1_1SKVector_1ad31adb2bd937b354f20430e5ed0c4fd0" prot="public" virt="non-virtual"><scope>NeoN::sundials::SKVector</scope><name>SKVectorVariant</name></member>
      <member refid="classNeoN_1_1sundials_1_1SKVector_1a3741786c8803463c8474313439d4f62e" prot="public" virt="non-virtual"><scope>NeoN::sundials::SKVector</scope><name>sunNVector</name></member>
      <member refid="classNeoN_1_1sundials_1_1SKVector_1a51f1a5ba7d6887820486572983a39296" prot="public" virt="non-virtual"><scope>NeoN::sundials::SKVector</scope><name>sunNVector</name></member>
      <member refid="classNeoN_1_1sundials_1_1SKVector_1a6eabd2e44193e47f31b086d5ca43d4e3" prot="public" virt="non-virtual"><scope>NeoN::sundials::SKVector</scope><name>variant</name></member>
      <member refid="classNeoN_1_1sundials_1_1SKVector_1a0f9b14c6f6d4ee27a621c9dd8089c06b" prot="public" virt="non-virtual"><scope>NeoN::sundials::SKVector</scope><name>variant</name></member>
      <member refid="classNeoN_1_1sundials_1_1SKVector_1a80d173a920e18aabcaf2343dada7c8a5" prot="private" virt="non-virtual"><scope>NeoN::sundials::SKVector</scope><name>vector_</name></member>
      <member refid="classNeoN_1_1sundials_1_1SKVector_1a9dd70282bf6718a25e8ad810a4f707e7" prot="public" virt="non-virtual"><scope>NeoN::sundials::SKVector</scope><name>~SKVector</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
