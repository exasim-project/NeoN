<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="vector_8hpp" kind="file" language="C++">
    <compoundname>vector.hpp</compoundname>
    <includes local="no">Kokkos_Core.hpp</includes>
    <includes refid="error_8hpp" local="yes">NeoN/core/error.hpp</includes>
    <includes refid="executor_8hpp" local="yes">NeoN/core/executor/executor.hpp</includes>
    <includes refid="label_8hpp" local="yes">NeoN/core/primitives/label.hpp</includes>
    <includes refid="scalar_8hpp" local="yes">NeoN/core/primitives/scalar.hpp</includes>
    <includes refid="view_8hpp" local="yes">NeoN/core/view.hpp</includes>
    <includes refid="fieldFreeFunctions_8hpp" local="yes">NeoN/fields/fieldFreeFunctions.hpp</includes>
    <includes refid="fieldTypeDefs_8hpp" local="yes">NeoN/fields/fieldTypeDefs.hpp</includes>
    <includes local="no">variant</includes>
    <includes local="no">vector</includes>
    <includedby refid="fieldCollection_8hpp" local="yes">/home/runner/work/NeoN/NeoN/include/NeoN/core/database/fieldCollection.hpp</includedby>
    <includedby refid="coeff_8hpp" local="yes">/home/runner/work/NeoN/NeoN/include/NeoN/dsl/coeff.hpp</includedby>
    <includedby refid="spatialOperator_8hpp" local="yes">/home/runner/work/NeoN/NeoN/include/NeoN/dsl/spatialOperator.hpp</includedby>
    <includedby refid="temporalOperator_8hpp" local="yes">/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp</includedby>
    <includedby refid="boundaryData_8hpp" local="yes">/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp</includedby>
    <includedby refid="field_8hpp" local="yes">/home/runner/work/NeoN/NeoN/include/NeoN/fields/field.hpp</includedby>
    <includedby refid="fieldTypeDefs_8hpp" local="yes">/home/runner/work/NeoN/NeoN/include/NeoN/fields/fieldTypeDefs.hpp</includedby>
    <includedby refid="segmentedVector_8hpp" local="yes">/home/runner/work/NeoN/NeoN/include/NeoN/fields/segmentedVector.hpp</includedby>
    <includedby refid="domain_8hpp" local="yes">/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/fields/domain.hpp</includedby>
    <includedby refid="ddtOperator_8hpp" local="yes">/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/operators/ddtOperator.hpp</includedby>
    <includedby refid="laplacianOperator_8hpp" local="yes">/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/operators/laplacianOperator.hpp</includedby>
    <includedby refid="sourceTerm_8hpp" local="yes">/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/operators/sourceTerm.hpp</includedby>
    <includedby refid="surfaceIntegrate_8hpp" local="yes">/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/operators/surfaceIntegrate.hpp</includedby>
    <includedby refid="CSRMatrix_8hpp" local="yes">/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/CSRMatrix.hpp</includedby>
    <includedby refid="linearSystem_8hpp" local="yes">/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/linearSystem.hpp</includedby>
    <includedby refid="utilities_8hpp" local="yes">/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/utilities.hpp</includedby>
    <incdepgraph>
      <node id="3">
        <label>NeoN/core/error.hpp</label>
        <link refid="error_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>NeoN/core/executor/CPUExecutor.hpp</label>
        <link refid="CPUExecutor_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>NeoN/core/executor/GPUExecutor.hpp</label>
        <link refid="GPUExecutor_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>NeoN/core/executor/executor.hpp</label>
        <link refid="executor_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>NeoN/core/executor/serialExecutor.hpp</label>
        <link refid="serialExecutor_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>info.hpp</label>
        <link refid="info_8hpp"/>
      </node>
      <node id="26">
        <label>NeoN/core/parallelAlgorithms.hpp</label>
        <link refid="parallelAlgorithms_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>NeoN/core/primitives/label.hpp</label>
        <link refid="label_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>NeoN/core/primitives/scalar.hpp</label>
        <link refid="scalar_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>NeoN/core/primitives/traits.hpp</label>
        <link refid="traits_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>NeoN/core/primitives/vec3.hpp</label>
        <link refid="vec3_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/core/vector.hpp</label>
        <link refid="vector_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>NeoN/core/view.hpp</label>
        <link refid="view_8hpp"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>NeoN/fields/fieldFreeFunctions.hpp</label>
        <link refid="fieldFreeFunctions_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>NeoN/fields/fieldTypeDefs.hpp</label>
        <link refid="fieldTypeDefs_8hpp"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>NeoN/helpers/exceptions.hpp</label>
        <link refid="exceptions_8hpp"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Kokkos_Core.hpp</label>
      </node>
      <node id="16">
        <label>cstdint</label>
      </node>
      <node id="4">
        <label>cstdlib</label>
      </node>
      <node id="5">
        <label>exception</label>
      </node>
      <node id="6">
        <label>iostream</label>
      </node>
      <node id="20">
        <label>limits</label>
      </node>
      <node id="21">
        <label>span</label>
      </node>
      <node id="8">
        <label>sstream</label>
      </node>
      <node id="7">
        <label>string</label>
      </node>
      <node id="24">
        <label>tuple</label>
      </node>
      <node id="22">
        <label>type_traits</label>
      </node>
      <node id="11">
        <label>variant</label>
      </node>
      <node id="29">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/core/database/fieldCollection.hpp</label>
        <link refid="fieldCollection_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/core/database/oldTimeCollection.hpp</label>
        <link refid="oldTimeCollection_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/core/vector.hpp</label>
        <link refid="vector_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/dsl/coeff.hpp</label>
        <link refid="coeff_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/dsl/ddt.hpp</label>
        <link refid="ddt_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/dsl/explicit.hpp</label>
        <link refid="explicit_8hpp"/>
      </node>
      <node id="13">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/dsl/expression.hpp</label>
        <link refid="expression_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/dsl/implicit.hpp</label>
        <link refid="implicit_8hpp"/>
      </node>
      <node id="8">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/dsl/operator.hpp</label>
        <link refid="operator_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/dsl/solver.hpp</label>
        <link refid="dsl_2solver_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/dsl/spatialOperator.hpp</label>
        <link refid="spatialOperator_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/dsl/temporalOperator.hpp</label>
        <link refid="temporalOperator_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp</label>
        <link refid="boundaryData_8hpp"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/fields/field.hpp</label>
        <link refid="field_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/fields/fieldTypeDefs.hpp</label>
        <link refid="fieldTypeDefs_8hpp"/>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/fields/segmentedVector.hpp</label>
        <link refid="segmentedVector_8hpp"/>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/auxiliary/coNum.hpp</label>
        <link refid="coNum_8hpp"/>
      </node>
      <node id="29">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/boundary.hpp</label>
        <link refid="boundary_8hpp"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/boundary/boundaryPatchMixin.hpp</label>
        <link refid="boundaryPatchMixin_8hpp"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/boundary/surface/calculated.hpp</label>
        <link refid="surface_2calculated_8hpp"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/boundary/surface/empty.hpp</label>
        <link refid="surface_2empty_8hpp"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/boundary/surface/fixedValue.hpp</label>
        <link refid="surface_2fixedValue_8hpp"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/boundary/surfaceBoundaryFactory.hpp</label>
        <link refid="surfaceBoundaryFactory_8hpp"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/boundary/volume/calculated.hpp</label>
        <link refid="volume_2calculated_8hpp"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/boundary/volume/empty.hpp</label>
        <link refid="volume_2empty_8hpp"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/boundary/volume/extrapolated.hpp</label>
        <link refid="extrapolated_8hpp"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/boundary/volume/fixedGradient.hpp</label>
        <link refid="fixedGradient_8hpp"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/boundary/volume/fixedValue.hpp</label>
        <link refid="volume_2fixedValue_8hpp"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/boundary/volumeBoundaryFactory.hpp</label>
        <link refid="volumeBoundaryFactory_8hpp"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/faceNormalGradient/faceNormalGradient.hpp</label>
        <link refid="faceNormalGradient_8hpp"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/faceNormalGradient/uncorrected.hpp</label>
        <link refid="uncorrected_8hpp"/>
      </node>
      <node id="49">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/fields/domain.hpp</label>
        <link refid="domain_8hpp"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/fields/surfaceField.hpp</label>
        <link refid="surfaceField_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/fields/volumeField.hpp</label>
        <link refid="volumeField_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/linear.hpp</label>
        <link refid="linear_8hpp"/>
      </node>
      <node id="32">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/surfaceInterpolation.hpp</label>
        <link refid="surfaceInterpolation_8hpp"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/upwind.hpp</label>
        <link refid="upwind_8hpp"/>
      </node>
      <node id="55">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/linearAlgebra/sparsityPattern.hpp</label>
        <link refid="sparsityPattern_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/operators/ddtOperator.hpp</label>
        <link refid="ddtOperator_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/operators/divOperator.hpp</label>
        <link refid="divOperator_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/operators/gaussGreenDiv.hpp</label>
        <link refid="gaussGreenDiv_8hpp"/>
      </node>
      <node id="35">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/operators/gaussGreenGrad.hpp</label>
        <link refid="gaussGreenGrad_8hpp"/>
      </node>
      <node id="21">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/operators/gaussGreenLaplacian.hpp</label>
        <link refid="gaussGreenLaplacian_8hpp"/>
      </node>
      <node id="20">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/operators/laplacianOperator.hpp</label>
        <link refid="laplacianOperator_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/operators/sourceTerm.hpp</label>
        <link refid="sourceTerm_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/operators/surfaceIntegrate.hpp</label>
        <link refid="surfaceIntegrate_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/stencil/basicGeometryScheme.hpp</label>
        <link refid="basicGeometryScheme_8hpp"/>
      </node>
      <node id="56">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/stencil/cellToFaceStencil.hpp</label>
        <link refid="cellToFaceStencil_8hpp"/>
      </node>
      <node id="41">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/stencil/geometryScheme.hpp</label>
        <link refid="geometryScheme_8hpp"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/CSRMatrix.hpp</label>
        <link refid="CSRMatrix_8hpp"/>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/linearSystem.hpp</label>
        <link refid="linearSystem_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/solver.hpp</label>
        <link refid="linearAlgebra_2solver_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/linearAlgebra/utilities.hpp</label>
        <link refid="utilities_8hpp"/>
      </node>
      <node id="53">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/mesh/unstructured/boundaryMesh.hpp</label>
        <link refid="boundaryMesh_8hpp"/>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/mesh/unstructured/communicator.hpp</label>
        <link refid="communicator_8hpp"/>
      </node>
      <node id="54">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/mesh/unstructured/unstructuredMesh.hpp</label>
        <link refid="unstructuredMesh_8hpp"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/timeIntegration/backwardEuler.hpp</label>
        <link refid="backwardEuler_8hpp"/>
      </node>
      <node id="5">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/timeIntegration/forwardEuler.hpp</label>
        <link refid="forwardEuler_8hpp"/>
      </node>
      <node id="6">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/timeIntegration/rungeKutta.hpp</label>
        <link refid="rungeKutta_8hpp"/>
      </node>
      <node id="51">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/timeIntegration/sundials.hpp</label>
        <link refid="sundials_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>/home/runner/work/NeoN/NeoN/include/NeoN/timeIntegration/timeIntegration.hpp</label>
        <link refid="timeIntegration_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classNeoN_1_1Vector" prot="public">NeoN::Vector</innerclass>
    <innernamespace refid="namespaceNeoN">NeoN</innernamespace>
    <innernamespace refid="namespaceNeoN_1_1detail">NeoN::detail</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>MIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2023<sp/>NeoN<sp/>authors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Kokkos_Core.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="error_8hpp" kindref="compound">NeoN/core/error.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="executor_8hpp" kindref="compound">NeoN/core/executor/executor.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="label_8hpp" kindref="compound">NeoN/core/primitives/label.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="scalar_8hpp" kindref="compound">NeoN/core/primitives/scalar.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="view_8hpp" kindref="compound">NeoN/core/view.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="fieldFreeFunctions_8hpp" kindref="compound">NeoN/fields/fieldFreeFunctions.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="fieldTypeDefs_8hpp" kindref="compound">NeoN/fields/fieldTypeDefs.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;variant&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceNeoN" kindref="compound">NeoN</ref></highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="namespaceNeoN_1_1detail" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail</highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValueType&gt;</highlight></codeline>
<codeline lineno="33" refid="namespaceNeoN_1_1detail_1ac9fe2d7185e9fe7c36c8ea5f91886286" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespaceNeoN_1_1detail_1ac9fe2d7185e9fe7c36c8ea5f91886286" kindref="member">deepCopyVisitor</ref>(<ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref><sp/>ssize,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ValueType*<sp/>srcPtr,<sp/>ValueType*<sp/>dstPtr)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ssize);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[size,<sp/>srcPtr,<sp/>dstPtr](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>srcExec,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>dstExec)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::deep_copy(</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dstExec.createKokkosView(dstPtr,<sp/>size),<sp/>srcExec.createKokkosView(srcPtr,<sp/>size)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValueType&gt;</highlight></codeline>
<codeline lineno="52" refid="classNeoN_1_1Vector" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref></highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="classNeoN_1_1Vector_1abfab4edc3452c4ed762fa880f3065928" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classNeoN_1_1Vector_1abfab4edc3452c4ed762fa880f3065928" kindref="member">VectorValueType</ref><sp/>=<sp/>ValueType;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="classNeoN_1_1Vector_1a756f74abb1e1975e0b1e66e35a18c0a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classNeoN_1_1Vector_1a756f74abb1e1975e0b1e66e35a18c0a9" kindref="member">Vector</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">Executor</ref>&amp;<sp/><ref refid="classNeoN_1_1Vector_1aaf18ea0e8c0b963eea6b54db622cd1fa" kindref="member">exec</ref>,<sp/><ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref><sp/><ref refid="classNeoN_1_1Vector_1a2ab8411bc0c72d42ce04c21f8a8a3438" kindref="member">size</ref>)<sp/>:<sp/>size_(<ref refid="classNeoN_1_1Vector_1a2ab8411bc0c72d42ce04c21f8a8a3438" kindref="member">size</ref>),<sp/>data_(nullptr),<sp/>exec_(<ref refid="classNeoN_1_1Vector_1aaf18ea0e8c0b963eea6b54db622cd1fa" kindref="member">exec</ref>)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ptr<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::visit(</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;ptr,<sp/><ref refid="classNeoN_1_1Vector_1a2ab8411bc0c72d42ce04c21f8a8a3438" kindref="member">size</ref>](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>concreteExec)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>ptr<sp/>=<sp/>concreteExec.alloc(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classNeoN_1_1Vector_1a2ab8411bc0c72d42ce04c21f8a8a3438" kindref="member">size</ref>)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ValueType));<sp/>},</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exec_</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">ValueType*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ptr);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="classNeoN_1_1Vector_1a0ea5a308476eb99be20616fbe7657fdc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classNeoN_1_1Vector_1a0ea5a308476eb99be20616fbe7657fdc" kindref="member">Vector</ref>(</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">Executor</ref>&amp;<sp/><ref refid="classNeoN_1_1Vector_1aaf18ea0e8c0b963eea6b54db622cd1fa" kindref="member">exec</ref>,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ValueType*<sp/>in,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref><sp/><ref refid="classNeoN_1_1Vector_1a2ab8411bc0c72d42ce04c21f8a8a3438" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">Executor</ref><sp/>hostExec<sp/>=<sp/><ref refid="classNeoN_1_1SerialExecutor" kindref="compound">SerialExecutor</ref>()</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>size_(<ref refid="classNeoN_1_1Vector_1a2ab8411bc0c72d42ce04c21f8a8a3438" kindref="member">size</ref>),<sp/>data_(nullptr),<sp/>exec_(<ref refid="classNeoN_1_1Vector_1aaf18ea0e8c0b963eea6b54db622cd1fa" kindref="member">exec</ref>)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ptr<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::visit(</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;ptr,<sp/><ref refid="classNeoN_1_1Vector_1a2ab8411bc0c72d42ce04c21f8a8a3438" kindref="member">size</ref>](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>concreteExec)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>ptr<sp/>=<sp/>concreteExec.alloc(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classNeoN_1_1Vector_1a2ab8411bc0c72d42ce04c21f8a8a3438" kindref="member">size</ref>)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ValueType));<sp/>},</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exec_</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">ValueType*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ptr);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::visit(detail::deepCopyVisitor&lt;ValueType&gt;(size_,<sp/>in,<sp/>data_),<sp/>hostExec,<sp/>exec_);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="classNeoN_1_1Vector_1a45e24dccfd011f30f7b211ff35e1e3a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classNeoN_1_1Vector_1a45e24dccfd011f30f7b211ff35e1e3a3" kindref="member">Vector</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">Executor</ref>&amp;<sp/><ref refid="classNeoN_1_1Vector_1aaf18ea0e8c0b963eea6b54db622cd1fa" kindref="member">exec</ref>,<sp/><ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref><sp/><ref refid="classNeoN_1_1Vector_1a2ab8411bc0c72d42ce04c21f8a8a3438" kindref="member">size</ref>,<sp/>ValueType<sp/>value)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>size_(<ref refid="classNeoN_1_1Vector_1a2ab8411bc0c72d42ce04c21f8a8a3438" kindref="member">size</ref>),<sp/>data_(nullptr),<sp/>exec_(<ref refid="classNeoN_1_1Vector_1aaf18ea0e8c0b963eea6b54db622cd1fa" kindref="member">exec</ref>)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ptr<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::visit(</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;ptr,<sp/><ref refid="classNeoN_1_1Vector_1a2ab8411bc0c72d42ce04c21f8a8a3438" kindref="member">size</ref>](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>execu)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>ptr<sp/>=<sp/>execu.alloc(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classNeoN_1_1Vector_1a2ab8411bc0c72d42ce04c21f8a8a3438" kindref="member">size</ref>)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ValueType));<sp/>},</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exec_</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">ValueType*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ptr);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceNeoN_1a4df3c8c32ed2bdaa77d100c44de4b3eb" kindref="member">NeoN::fill</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="classNeoN_1_1Vector_1ac13dd0cde894a2f78a11286b20907f34" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classNeoN_1_1Vector_1ac13dd0cde894a2f78a11286b20907f34" kindref="member">Vector</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">Executor</ref>&amp;<sp/><ref refid="classNeoN_1_1Vector_1aaf18ea0e8c0b963eea6b54db622cd1fa" kindref="member">exec</ref>,<sp/>std::vector&lt;ValueType&gt;<sp/>in)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref>(<ref refid="classNeoN_1_1Vector_1aaf18ea0e8c0b963eea6b54db622cd1fa" kindref="member">exec</ref>,<sp/>in.<ref refid="classNeoN_1_1Vector_1a43e0722e173db5b15126abbc163b5eb1" kindref="member">data</ref>(),<sp/>static_cast&lt;<ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref>&gt;(in.<ref refid="classNeoN_1_1Vector_1a2ab8411bc0c72d42ce04c21f8a8a3438" kindref="member">size</ref>()))</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="classNeoN_1_1Vector_1a3fda9acfd9787039435b92fe31c04049" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classNeoN_1_1Vector_1a3fda9acfd9787039435b92fe31c04049" kindref="member">Vector</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">Executor</ref>&amp;<sp/><ref refid="classNeoN_1_1Vector_1aaf18ea0e8c0b963eea6b54db622cd1fa" kindref="member">exec</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNeoN_1_1Vector" kindref="compound">Vector&lt;ValueType&gt;</ref>&amp;<sp/>in)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref>(<ref refid="classNeoN_1_1Vector_1aaf18ea0e8c0b963eea6b54db622cd1fa" kindref="member">exec</ref>,<sp/>in.<ref refid="classNeoN_1_1Vector_1a43e0722e173db5b15126abbc163b5eb1" kindref="member">data</ref>(),<sp/>in.<ref refid="classNeoN_1_1Vector_1a2ab8411bc0c72d42ce04c21f8a8a3438" kindref="member">size</ref>(),<sp/>in.<ref refid="classNeoN_1_1Vector_1aaf18ea0e8c0b963eea6b54db622cd1fa" kindref="member">exec</ref>())</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="classNeoN_1_1Vector_1a229d6abcc33e4040a5e5ee173e639070" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classNeoN_1_1Vector_1a229d6abcc33e4040a5e5ee173e639070" kindref="member">Vector</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNeoN_1_1Vector" kindref="compound">Vector&lt;ValueType&gt;</ref>&amp;<sp/>rhs)<sp/>:<sp/><ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref>(rhs.<ref refid="classNeoN_1_1Vector_1aaf18ea0e8c0b963eea6b54db622cd1fa" kindref="member">exec</ref>(),<sp/>rhs.<ref refid="classNeoN_1_1Vector_1a43e0722e173db5b15126abbc163b5eb1" kindref="member">data</ref>(),<sp/>rhs.<ref refid="classNeoN_1_1Vector_1a2ab8411bc0c72d42ce04c21f8a8a3438" kindref="member">size</ref>(),<sp/>rhs.<ref refid="classNeoN_1_1Vector_1aaf18ea0e8c0b963eea6b54db622cd1fa" kindref="member">exec</ref>())<sp/>{}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="classNeoN_1_1Vector_1a15731af41b65b80b4b2c4539476a716e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classNeoN_1_1Vector_1a15731af41b65b80b4b2c4539476a716e" kindref="member">Vector</ref>(<ref refid="classNeoN_1_1Vector" kindref="compound">Vector&lt;ValueType&gt;</ref>&amp;&amp;<sp/>rhs)<sp/>noexcept<sp/>:<sp/>size_(rhs.size_),<sp/>data_(rhs.data_),<sp/>exec_(rhs.exec_)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs.data_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs.size_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="classNeoN_1_1Vector_1ab753dfc6e9baa593b957d324e2aa4835" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classNeoN_1_1Vector_1ab753dfc6e9baa593b957d324e2aa4835" kindref="member">~Vector</ref>()</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::visit([</highlight><highlight class="keyword">this</highlight><highlight class="normal">](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/><ref refid="classNeoN_1_1Vector_1aaf18ea0e8c0b963eea6b54db622cd1fa" kindref="member">exec</ref>)<sp/>{<sp/><ref refid="classNeoN_1_1Vector_1aaf18ea0e8c0b963eea6b54db622cd1fa" kindref="member">exec</ref>.free(data_);<sp/>},<sp/>exec_);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>func&gt;</highlight></codeline>
<codeline lineno="168" refid="classNeoN_1_1Vector_1aa6ac22b4e8d8aabbe6d6a100d67cc69c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classNeoN_1_1Vector_1aa6ac22b4e8d8aabbe6d6a100d67cc69c" kindref="member">apply</ref>(func<sp/>f)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceNeoN_1a1e99c20b9a299c1d6f875551c13a965c" kindref="member">map</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>f);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="classNeoN_1_1Vector_1a2dc3e53a2f9cd9f1f5401bde925374fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/><ref refid="classNeoN_1_1Vector" kindref="compound">Vector&lt;ValueType&gt;</ref><sp/><ref refid="classNeoN_1_1Vector_1a2dc3e53a2f9cd9f1f5401bde925374fa" kindref="member">copyToExecutor</ref>(<ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">Executor</ref><sp/>dstExec)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="179"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dstExec<sp/>==<sp/>exec_)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classNeoN_1_1Vector" kindref="compound">Vector&lt;ValueType&gt;</ref><sp/>result(dstExec,<sp/>size_);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::visit(<ref refid="namespaceNeoN_1_1detail_1ac9fe2d7185e9fe7c36c8ea5f91886286" kindref="member">detail::deepCopyVisitor</ref>(size_,<sp/>data_,<sp/>result.<ref refid="classNeoN_1_1Vector_1a43e0722e173db5b15126abbc163b5eb1" kindref="member">data</ref>()),<sp/>exec_,<sp/>dstExec);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="classNeoN_1_1Vector_1ad9d97488c7ae4f82eb2f07c6001ca7e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/><ref refid="classNeoN_1_1Vector" kindref="compound">Vector&lt;ValueType&gt;</ref><sp/><ref refid="classNeoN_1_1Vector_1ad9d97488c7ae4f82eb2f07c6001ca7e9" kindref="member">copyToHost</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classNeoN_1_1Vector_1a2dc3e53a2f9cd9f1f5401bde925374fa" kindref="member">copyToExecutor</ref>(<ref refid="classNeoN_1_1SerialExecutor" kindref="compound">SerialExecutor</ref>());<sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="classNeoN_1_1Vector_1ac43473fb021aacee009af9163ff016a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classNeoN_1_1Vector_1ac43473fb021aacee009af9163ff016a0" kindref="member">copyToHost</ref>(<ref refid="classNeoN_1_1Vector" kindref="compound">Vector&lt;ValueType&gt;</ref>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1af1af39ea56903b56ed322432441511b5" kindref="member">NF_DEBUG_ASSERT</ref>(</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="classNeoN_1_1Vector_1a2ab8411bc0c72d42ce04c21f8a8a3438" kindref="member">size</ref>()<sp/>==<sp/>size_,<sp/></highlight><highlight class="stringliteral">&quot;Parsed<sp/>Vector<sp/>size<sp/>not<sp/>the<sp/>same<sp/>as<sp/>current<sp/>field<sp/>size&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="classNeoN_1_1Vector_1a2dc3e53a2f9cd9f1f5401bde925374fa" kindref="member">copyToExecutor</ref>(<ref refid="classNeoN_1_1SerialExecutor" kindref="compound">SerialExecutor</ref>());</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ensures<sp/>no<sp/>return<sp/>of<sp/>device<sp/>address<sp/>on<sp/>host<sp/>--&gt;<sp/>invalid<sp/>memory<sp/>access</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="classNeoN_1_1Vector_1a1a976f143f1b87614db92b4c501ed719" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ValueType&amp;<sp/><ref refid="classNeoN_1_1Vector_1a1a976f143f1b87614db92b4c501ed719" kindref="member">operator[]</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref><sp/>i)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ensures<sp/>no<sp/>return<sp/>of<sp/>device<sp/>address<sp/>on<sp/>host<sp/>--&gt;<sp/>invalid<sp/>memory<sp/>access</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="classNeoN_1_1Vector_1adfb14f80df8f4b622452818d3ac5f52f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ValueType&amp;<sp/><ref refid="classNeoN_1_1Vector_1adfb14f80df8f4b622452818d3ac5f52f" kindref="member">operator[]</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref><sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="classNeoN_1_1Vector_1a79947b149106e8cae946231f179639fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classNeoN_1_1Vector_1a79947b149106e8cae946231f179639fe" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ValueType&amp;<sp/>rhs)<sp/>{<sp/><ref refid="namespaceNeoN_1a4df3c8c32ed2bdaa77d100c44de4b3eb" kindref="member">fill</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>rhs);<sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="228" refid="classNeoN_1_1Vector_1ae8e2493ea02950235947c1c5e128e3c0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classNeoN_1_1Vector_1ae8e2493ea02950235947c1c5e128e3c0" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNeoN_1_1Vector" kindref="compound">Vector&lt;ValueType&gt;</ref>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1aecc669a189db22f652ffb9788f01a99b" kindref="member">NF_ASSERT</ref>(exec_<sp/>==<sp/>rhs.exec_,<sp/></highlight><highlight class="stringliteral">&quot;Executors<sp/>are<sp/>not<sp/>the<sp/>same&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classNeoN_1_1Vector_1a2ab8411bc0c72d42ce04c21f8a8a3438" kindref="member">size</ref>()<sp/>!=<sp/>rhs.<ref refid="classNeoN_1_1Vector_1a2ab8411bc0c72d42ce04c21f8a8a3438" kindref="member">size</ref>())</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classNeoN_1_1Vector_1a99e933d0a77f9ec5fef7d492f23c2219" kindref="member">resize</ref>(rhs.<ref refid="classNeoN_1_1Vector_1a2ab8411bc0c72d42ce04c21f8a8a3438" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceNeoN_1abea1b0b84403cd0569cc9847703410eb" kindref="member">setVector</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>rhs.<ref refid="classNeoN_1_1Vector_1ad537cb55485b851cbc3c1f3760b77ab9" kindref="member">view</ref>());</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="243" refid="classNeoN_1_1Vector_1ab4d83cf671153e017e107f022d06d2a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classNeoN_1_1Vector" kindref="compound">Vector&lt;ValueType&gt;</ref>&amp;<sp/><ref refid="classNeoN_1_1Vector_1ab4d83cf671153e017e107f022d06d2a8" kindref="member">operator+=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNeoN_1_1Vector" kindref="compound">Vector&lt;ValueType&gt;</ref>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>validateOtherVector(rhs);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceNeoN_1a490d5b5f574236c480c0afd38a2dc1c9" kindref="member">add</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>rhs);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="classNeoN_1_1Vector_1add2cd47adb8b276c03f1f41a1e36cae1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classNeoN_1_1Vector" kindref="compound">Vector&lt;ValueType&gt;</ref>&amp;<sp/><ref refid="classNeoN_1_1Vector_1add2cd47adb8b276c03f1f41a1e36cae1" kindref="member">operator-=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNeoN_1_1Vector" kindref="compound">Vector&lt;ValueType&gt;</ref>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>validateOtherVector(rhs);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceNeoN_1ae281a72f3e7f22c3b2993eac666d4bb4" kindref="member">sub</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>rhs);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="classNeoN_1_1Vector_1ace96ee2a33d44e4c03dbe8bc2c37f00d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/><ref refid="classNeoN_1_1Vector" kindref="compound">Vector&lt;ValueType&gt;</ref><sp/><ref refid="classNeoN_1_1Vector_1ace96ee2a33d44e4c03dbe8bc2c37f00d" kindref="member">operator*</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNeoN_1_1Vector" kindref="compound">Vector&lt;scalar&gt;</ref>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>validateOtherVector(rhs);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classNeoN_1_1Vector" kindref="compound">Vector&lt;ValueType&gt;</ref><sp/>result(exec_,<sp/>size_);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceNeoN_1a4803cc249d78abb5840c8cd26a45adb9" kindref="member">mul</ref>(result,<sp/>rhs);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="282" refid="classNeoN_1_1Vector_1af3f25f65f78b75a9c8b7ea9cda14f32a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/><ref refid="classNeoN_1_1Vector" kindref="compound">Vector&lt;ValueType&gt;</ref><sp/><ref refid="classNeoN_1_1Vector_1af3f25f65f78b75a9c8b7ea9cda14f32a" kindref="member">operator*</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">scalar</ref><sp/>rhs)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classNeoN_1_1Vector" kindref="compound">Vector&lt;ValueType&gt;</ref><sp/>result(exec_,<sp/>size_);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceNeoN_1aee59456450b9b342cca7740de8e7132f" kindref="member">scalarMul</ref>(result,<sp/>rhs);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="295" refid="classNeoN_1_1Vector_1a492e97cab9d37b21a96dbaf135e106b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classNeoN_1_1Vector" kindref="compound">Vector&lt;ValueType&gt;</ref>&amp;<sp/><ref refid="classNeoN_1_1Vector_1a492e97cab9d37b21a96dbaf135e106b8" kindref="member">operator*=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNeoN_1_1Vector" kindref="compound">Vector&lt;scalar&gt;</ref>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>validateOtherVector(rhs);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classNeoN_1_1Vector" kindref="compound">Vector&lt;ValueType&gt;</ref>&amp;<sp/>result<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceNeoN_1a4803cc249d78abb5840c8cd26a45adb9" kindref="member">mul</ref>(result,<sp/>rhs);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="308" refid="classNeoN_1_1Vector_1a2a3f98c82792e80284ec0d35ffbda8a6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classNeoN_1_1Vector" kindref="compound">Vector&lt;ValueType&gt;</ref>&amp;<sp/><ref refid="classNeoN_1_1Vector_1a2a3f98c82792e80284ec0d35ffbda8a6" kindref="member">operator*=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">scalar</ref><sp/>rhs)</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classNeoN_1_1Vector" kindref="compound">Vector&lt;ValueType&gt;</ref>&amp;<sp/>result<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceNeoN_1aee59456450b9b342cca7740de8e7132f" kindref="member">scalarMul</ref>(result,<sp/>rhs);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="319" refid="classNeoN_1_1Vector_1a99e933d0a77f9ec5fef7d492f23c2219" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classNeoN_1_1Vector_1a99e933d0a77f9ec5fef7d492f23c2219" kindref="member">resize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref><sp/><ref refid="classNeoN_1_1Vector_1a2ab8411bc0c72d42ce04c21f8a8a3438" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ptr<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classNeoN_1_1Vector_1aa265640bf653ccc74f509d396ef7d977" kindref="member">empty</ref>())</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::visit(</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;ptr,<sp/><ref refid="classNeoN_1_1Vector_1a2ab8411bc0c72d42ce04c21f8a8a3438" kindref="member">size</ref>](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/><ref refid="classNeoN_1_1Vector_1aaf18ea0e8c0b963eea6b54db622cd1fa" kindref="member">exec</ref>)</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>ptr<sp/>=<sp/><ref refid="classNeoN_1_1Vector_1aaf18ea0e8c0b963eea6b54db622cd1fa" kindref="member">exec</ref>.realloc(this-&gt;data_,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classNeoN_1_1Vector_1a2ab8411bc0c72d42ce04c21f8a8a3438" kindref="member">size</ref>)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ValueType));<sp/>},</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exec_</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::visit(</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;ptr,<sp/><ref refid="classNeoN_1_1Vector_1a2ab8411bc0c72d42ce04c21f8a8a3438" kindref="member">size</ref>](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/><ref refid="classNeoN_1_1Vector_1aaf18ea0e8c0b963eea6b54db622cd1fa" kindref="member">exec</ref>)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>ptr<sp/>=<sp/><ref refid="classNeoN_1_1Vector_1aaf18ea0e8c0b963eea6b54db622cd1fa" kindref="member">exec</ref>.alloc(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classNeoN_1_1Vector_1a2ab8411bc0c72d42ce04c21f8a8a3438" kindref="member">size</ref>)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ValueType));<sp/>},</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exec_</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">ValueType*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ptr);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_<sp/>=<sp/><ref refid="classNeoN_1_1Vector_1a2ab8411bc0c72d42ce04c21f8a8a3438" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="346" refid="classNeoN_1_1Vector_1a43e0722e173db5b15126abbc163b5eb1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/>ValueType*<sp/><ref refid="classNeoN_1_1Vector_1a43e0722e173db5b15126abbc163b5eb1" kindref="member">data</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_;<sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="352" refid="classNeoN_1_1Vector_1a980245c8e0b2691d3014d49862b2145e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ValueType*<sp/><ref refid="classNeoN_1_1Vector_1a980245c8e0b2691d3014d49862b2145e" kindref="member">data</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_;<sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="358" refid="classNeoN_1_1Vector_1aaf18ea0e8c0b963eea6b54db622cd1fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">Executor</ref>&amp;<sp/><ref refid="classNeoN_1_1Vector_1aaf18ea0e8c0b963eea6b54db622cd1fa" kindref="member">exec</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>exec_;<sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="364" refid="classNeoN_1_1Vector_1a2ab8411bc0c72d42ce04c21f8a8a3438" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/><ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref><sp/><ref refid="classNeoN_1_1Vector_1a2ab8411bc0c72d42ce04c21f8a8a3438" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>size_;<sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="370" refid="classNeoN_1_1Vector_1a719edbafd35de9fdf99fd174fc8fd61e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/><ref refid="namespaceNeoN_1afa6c1c30776d4f6ed4691b0f9d1ea416" kindref="member">label</ref><sp/><ref refid="classNeoN_1_1Vector_1a719edbafd35de9fdf99fd174fc8fd61e" kindref="member">ssize</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespaceNeoN_1afa6c1c30776d4f6ed4691b0f9d1ea416" kindref="member">label</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(size_);<sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="376" refid="classNeoN_1_1Vector_1aa265640bf653ccc74f509d396ef7d977" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classNeoN_1_1Vector_1aa265640bf653ccc74f509d396ef7d977" kindref="member">empty</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classNeoN_1_1Vector_1a2ab8411bc0c72d42ce04c21f8a8a3438" kindref="member">size</ref>()<sp/>==<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>of<sp/>a<sp/>temporary<sp/>--&gt;<sp/>invalid<sp/>memory<sp/>access</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379" refid="classNeoN_1_1Vector_1ad537cb55485b851cbc3c1f3760b77ab9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classNeoN_1_1View" kindref="compound">View&lt;ValueType&gt;</ref><sp/><ref refid="classNeoN_1_1Vector_1ad537cb55485b851cbc3c1f3760b77ab9" kindref="member">view</ref>()<sp/>&amp;&amp;<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>of<sp/>a<sp/>temporary<sp/>--&gt;<sp/>invalid<sp/>memory<sp/>access</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382" refid="classNeoN_1_1Vector_1af41388de676f5d555c0a9a8fd65d0fdd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classNeoN_1_1View" kindref="compound">View&lt;const ValueType&gt;</ref><sp/><ref refid="classNeoN_1_1Vector_1af41388de676f5d555c0a9a8fd65d0fdd" kindref="member">view</ref>()<sp/>const&amp;&amp;<sp/>=<sp/>delete;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="388" refid="classNeoN_1_1Vector_1afe9aade44dd8fd745d5ab63c5fa0c460" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/><ref refid="classNeoN_1_1View" kindref="compound">View</ref>&lt;ValueType&gt;<sp/><ref refid="classNeoN_1_1Vector_1ad537cb55485b851cbc3c1f3760b77ab9" kindref="member">view</ref>()<sp/>&amp;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classNeoN_1_1View" kindref="compound">View&lt;ValueType&gt;</ref>(data_,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(size_));</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="397" refid="classNeoN_1_1Vector_1a8204948c9a7c17e5bc7c67c88db802bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/><ref refid="classNeoN_1_1View" kindref="compound">View&lt;const ValueType&gt;</ref><sp/><ref refid="classNeoN_1_1Vector_1a8204948c9a7c17e5bc7c67c88db802bd" kindref="member">view</ref>()<sp/>const&amp;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classNeoN_1_1View" kindref="compound">View&lt;const ValueType&gt;</ref>(data_,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(size_));</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>of<sp/>a<sp/>temporary<sp/>--&gt;<sp/>invalid<sp/>memory<sp/>access</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403" refid="classNeoN_1_1Vector_1abb5eeffddc65955f57db055be73fbc07" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/><ref refid="classNeoN_1_1View" kindref="compound">View&lt;ValueType&gt;</ref><sp/><ref refid="classNeoN_1_1Vector_1abb5eeffddc65955f57db055be73fbc07" kindref="member">view</ref>(std::pair&lt;localIdx,<sp/>localIdx&gt;<sp/><ref refid="classNeoN_1_1Vector_1a66f57aa2034536ba371465eca36355a2" kindref="member">range</ref>)<sp/>&amp;&amp;<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>of<sp/>a<sp/>temporary<sp/>--&gt;<sp/>invalid<sp/>memory<sp/>access</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406" refid="classNeoN_1_1Vector_1a6d35eccebbae57201dad39e582656fd1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/><ref refid="classNeoN_1_1View" kindref="compound">View&lt;const ValueType&gt;</ref><sp/><ref refid="classNeoN_1_1Vector_1a6d35eccebbae57201dad39e582656fd1" kindref="member">view</ref>(std::pair&lt;localIdx,<sp/>localIdx&gt;<sp/><ref refid="classNeoN_1_1Vector_1a66f57aa2034536ba371465eca36355a2" kindref="member">range</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;&amp;<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="412" refid="classNeoN_1_1Vector_1a43a0f39f3241e494950640dc4c673bf7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/><ref refid="classNeoN_1_1View" kindref="compound">View&lt;ValueType&gt;</ref><sp/><ref refid="classNeoN_1_1Vector_1a43a0f39f3241e494950640dc4c673bf7" kindref="member">view</ref>(std::pair&lt;localIdx,<sp/>localIdx&gt;<sp/><ref refid="classNeoN_1_1Vector_1a66f57aa2034536ba371465eca36355a2" kindref="member">range</ref>)<sp/>&amp;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classNeoN_1_1View" kindref="compound">View&lt;ValueType&gt;</ref>(</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_<sp/>+<sp/><ref refid="classNeoN_1_1Vector_1a66f57aa2034536ba371465eca36355a2" kindref="member">range</ref>.first,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classNeoN_1_1Vector_1a66f57aa2034536ba371465eca36355a2" kindref="member">range</ref>.second<sp/>-<sp/><ref refid="classNeoN_1_1Vector_1a66f57aa2034536ba371465eca36355a2" kindref="member">range</ref>.first)</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="423" refid="classNeoN_1_1Vector_1a9608fa4324d06e9099690c2ab02705de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/><ref refid="classNeoN_1_1View" kindref="compound">View&lt;const ValueType&gt;</ref><sp/><ref refid="classNeoN_1_1Vector_1a9608fa4324d06e9099690c2ab02705de" kindref="member">view</ref>(std::pair&lt;localIdx,<sp/>localIdx&gt;<sp/><ref refid="classNeoN_1_1Vector_1a66f57aa2034536ba371465eca36355a2" kindref="member">range</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classNeoN_1_1View" kindref="compound">View&lt;const ValueType&gt;</ref>(</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_<sp/>+<sp/><ref refid="classNeoN_1_1Vector_1a66f57aa2034536ba371465eca36355a2" kindref="member">range</ref>.first,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classNeoN_1_1Vector_1a66f57aa2034536ba371465eca36355a2" kindref="member">range</ref>.second<sp/>-<sp/><ref refid="classNeoN_1_1Vector_1a66f57aa2034536ba371465eca36355a2" kindref="member">range</ref>.first)</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="434" refid="classNeoN_1_1Vector_1a66f57aa2034536ba371465eca36355a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/>std::pair&lt;localIdx,<sp/>localIdx&gt;<sp/><ref refid="classNeoN_1_1Vector_1a66f57aa2034536ba371465eca36355a2" kindref="member">range</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{0,<sp/><ref refid="classNeoN_1_1Vector_1a2ab8411bc0c72d42ce04c21f8a8a3438" kindref="member">size</ref>()};<sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref><sp/>size_<sp/>{0};<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>ValueType*<sp/>data_<sp/>{</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">};<sp/></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">Executor</ref><sp/>exec_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>validateOtherVector(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;ValueType&gt;&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="447"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1af1af39ea56903b56ed322432441511b5" kindref="member">NF_DEBUG_ASSERT</ref>(<ref refid="classNeoN_1_1Vector_1a2ab8411bc0c72d42ce04c21f8a8a3438" kindref="member">size</ref>()<sp/>==<sp/>rhs.size(),<sp/></highlight><highlight class="stringliteral">&quot;Vectors<sp/>are<sp/>not<sp/>the<sp/>same<sp/>size.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1af1af39ea56903b56ed322432441511b5" kindref="member">NF_DEBUG_ASSERT</ref>(<ref refid="classNeoN_1_1Vector_1aaf18ea0e8c0b963eea6b54db622cd1fa" kindref="member">exec</ref>()<sp/>==<sp/>rhs.exec(),<sp/></highlight><highlight class="stringliteral">&quot;Executors<sp/>are<sp/>not<sp/>the<sp/>same.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal">};</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="460" refid="namespaceNeoN_1a57562cfd536bb7f25eadb9c63a8beb0e" refkind="member"><highlight class="normal">[[nodiscard]]<sp/><ref refid="classNeoN_1_1Vector" kindref="compound">Vector&lt;T&gt;</ref><sp/><ref refid="namespaceNeoN_1a57562cfd536bb7f25eadb9c63a8beb0e" kindref="member">operator+</ref>(<ref refid="classNeoN_1_1Vector" kindref="compound">Vector&lt;T&gt;</ref><sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNeoN_1_1Vector" kindref="compound">Vector&lt;T&gt;</ref>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="461"><highlight class="normal">{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>lhs<sp/>+=<sp/>rhs;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs;</highlight></codeline>
<codeline lineno="464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="473" refid="namespaceNeoN_1a6581a4919ffb395348a7b6865bab9a58" refkind="member"><highlight class="normal">[[nodiscard]]<sp/><ref refid="classNeoN_1_1Vector" kindref="compound">Vector&lt;T&gt;</ref><sp/><ref refid="namespaceNeoN_1a6581a4919ffb395348a7b6865bab9a58" kindref="member">operator-</ref>(<ref refid="classNeoN_1_1Vector" kindref="compound">Vector&lt;T&gt;</ref><sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNeoN_1_1Vector" kindref="compound">Vector&lt;T&gt;</ref>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="474"><highlight class="normal">{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>lhs<sp/>-=<sp/>rhs;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs;</highlight></codeline>
<codeline lineno="477"><highlight class="normal">}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>NeoN</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/vector.hpp"/>
  </compounddef>
</doxygen>
