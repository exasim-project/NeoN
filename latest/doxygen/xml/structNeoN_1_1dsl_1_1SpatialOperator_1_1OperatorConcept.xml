<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structNeoN_1_1dsl_1_1SpatialOperator_1_1OperatorConcept" kind="struct" language="C++" prot="private" abstract="yes">
    <compoundname>NeoN::dsl::SpatialOperator::OperatorConcept</compoundname>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structNeoN_1_1dsl_1_1SpatialOperator_1_1OperatorConcept_1a1fbb1fcf86cbc04f7b28183275f0aaa7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual NeoN::dsl::SpatialOperator&lt; ValueType &gt;::OperatorConcept::~OperatorConcept</definition>
        <argsstring>()=default</argsstring>
        <name>~OperatorConcept</name>
        <qualifiedname>NeoN::dsl::SpatialOperator::OperatorConcept::~OperatorConcept</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/spatialOperator.hpp" line="106" column="17"/>
      </memberdef>
      <memberdef kind="function" id="structNeoN_1_1dsl_1_1SpatialOperator_1_1OperatorConcept_1a9cdc014191a4eeb6fe3315c2d3600c2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void NeoN::dsl::SpatialOperator&lt; ValueType &gt;::OperatorConcept::explicitOperation</definition>
        <argsstring>(Vector&lt; ValueType &gt; &amp;source)=0</argsstring>
        <name>explicitOperation</name>
        <qualifiedname>NeoN::dsl::SpatialOperator::OperatorConcept::explicitOperation</qualifiedname>
        <param>
          <type><ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref>&lt; ValueType &gt; &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/spatialOperator.hpp" line="108" column="22"/>
      </memberdef>
      <memberdef kind="function" id="structNeoN_1_1dsl_1_1SpatialOperator_1_1OperatorConcept_1a162d1994fcbf5db4abd2024fe8da5433" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void NeoN::dsl::SpatialOperator&lt; ValueType &gt;::OperatorConcept::implicitOperation</definition>
        <argsstring>(la::LinearSystem&lt; ValueType, localIdx &gt; &amp;ls)=0</argsstring>
        <name>implicitOperation</name>
        <qualifiedname>NeoN::dsl::SpatialOperator::OperatorConcept::implicitOperation</qualifiedname>
        <param>
          <type><ref refid="classNeoN_1_1la_1_1LinearSystem" kindref="compound">la::LinearSystem</ref>&lt; ValueType, <ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref> &gt; &amp;</type>
          <declname>ls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/spatialOperator.hpp" line="110" column="22"/>
      </memberdef>
      <memberdef kind="function" id="structNeoN_1_1dsl_1_1SpatialOperator_1_1OperatorConcept_1aeac3fdc9558e8cf2113811c969eeb0f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void NeoN::dsl::SpatialOperator&lt; ValueType &gt;::OperatorConcept::read</definition>
        <argsstring>(const Input &amp;input)=0</argsstring>
        <name>read</name>
        <qualifiedname>NeoN::dsl::SpatialOperator::OperatorConcept::read</qualifiedname>
        <param>
          <type>const <ref refid="namespaceNeoN_1a0f89cac0ba212d1026c9fedc65742cea" kindref="member">Input</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/spatialOperator.hpp" line="113" column="22"/>
      </memberdef>
      <memberdef kind="function" id="structNeoN_1_1dsl_1_1SpatialOperator_1_1OperatorConcept_1ae55da577be801679aa4cccd6f1e18504" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::string</type>
        <definition>virtual std::string NeoN::dsl::SpatialOperator&lt; ValueType &gt;::OperatorConcept::getName</definition>
        <argsstring>() const =0</argsstring>
        <name>getName</name>
        <qualifiedname>NeoN::dsl::SpatialOperator::OperatorConcept::getName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/spatialOperator.hpp" line="116" column="29"/>
      </memberdef>
      <memberdef kind="function" id="structNeoN_1_1dsl_1_1SpatialOperator_1_1OperatorConcept_1a4507387da3934031fac8cb552532564e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classNeoN_1_1dsl_1_1Operator_1ad72823c9a2d04641ab7c7181902f6dd3" kindref="member">Operator::Type</ref></type>
        <definition>virtual Operator::Type NeoN::dsl::SpatialOperator&lt; ValueType &gt;::OperatorConcept::getType</definition>
        <argsstring>() const =0</argsstring>
        <name>getType</name>
        <qualifiedname>NeoN::dsl::SpatialOperator::OperatorConcept::getType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/spatialOperator.hpp" line="119" column="32"/>
      </memberdef>
      <memberdef kind="function" id="structNeoN_1_1dsl_1_1SpatialOperator_1_1OperatorConcept_1a326166d5f6412132bad233832b14de43" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classNeoN_1_1dsl_1_1Coeff" kindref="compound">Coeff</ref> &amp;</type>
        <definition>virtual Coeff &amp; NeoN::dsl::SpatialOperator&lt; ValueType &gt;::OperatorConcept::getCoefficient</definition>
        <argsstring>()=0</argsstring>
        <name>getCoefficient</name>
        <qualifiedname>NeoN::dsl::SpatialOperator::OperatorConcept::getCoefficient</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/spatialOperator.hpp" line="122" column="23"/>
      </memberdef>
      <memberdef kind="function" id="structNeoN_1_1dsl_1_1SpatialOperator_1_1OperatorConcept_1a1fea5f37ab754d982ce2d2f2ad95dd4e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classNeoN_1_1dsl_1_1Coeff" kindref="compound">Coeff</ref></type>
        <definition>virtual Coeff NeoN::dsl::SpatialOperator&lt; ValueType &gt;::OperatorConcept::getCoefficient</definition>
        <argsstring>() const =0</argsstring>
        <name>getCoefficient</name>
        <qualifiedname>NeoN::dsl::SpatialOperator::OperatorConcept::getCoefficient</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/spatialOperator.hpp" line="125" column="23"/>
      </memberdef>
      <memberdef kind="function" id="structNeoN_1_1dsl_1_1SpatialOperator_1_1OperatorConcept_1aa2fdd003b060707a77cf1038ebafc4ac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const <ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">Executor</ref> &amp;</type>
        <definition>virtual const Executor &amp; NeoN::dsl::SpatialOperator&lt; ValueType &gt;::OperatorConcept::exec</definition>
        <argsstring>() const =0</argsstring>
        <name>exec</name>
        <qualifiedname>NeoN::dsl::SpatialOperator::OperatorConcept::exec</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/spatialOperator.hpp" line="128" column="32"/>
      </memberdef>
      <memberdef kind="function" id="structNeoN_1_1dsl_1_1SpatialOperator_1_1OperatorConcept_1a841f22a26b373929a12d9a09666d743f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::unique_ptr&lt; OperatorConcept &gt;</type>
        <definition>virtual std::unique_ptr&lt; OperatorConcept &gt; NeoN::dsl::SpatialOperator&lt; ValueType &gt;::OperatorConcept::clone</definition>
        <argsstring>() const =0</argsstring>
        <name>clone</name>
        <qualifiedname>NeoN::dsl::SpatialOperator::OperatorConcept::clone</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/spatialOperator.hpp" line="131" column="33"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/spatialOperator.hpp" line="104" column="5" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/dsl/spatialOperator.hpp" bodystart="105" bodyend="132"/>
    <listofallmembers>
      <member refid="structNeoN_1_1dsl_1_1SpatialOperator_1_1OperatorConcept_1a841f22a26b373929a12d9a09666d743f" prot="public" virt="pure-virtual"><scope>NeoN::dsl::SpatialOperator::OperatorConcept</scope><name>clone</name></member>
      <member refid="structNeoN_1_1dsl_1_1SpatialOperator_1_1OperatorConcept_1aa2fdd003b060707a77cf1038ebafc4ac" prot="public" virt="pure-virtual"><scope>NeoN::dsl::SpatialOperator::OperatorConcept</scope><name>exec</name></member>
      <member refid="structNeoN_1_1dsl_1_1SpatialOperator_1_1OperatorConcept_1a9cdc014191a4eeb6fe3315c2d3600c2e" prot="public" virt="pure-virtual"><scope>NeoN::dsl::SpatialOperator::OperatorConcept</scope><name>explicitOperation</name></member>
      <member refid="structNeoN_1_1dsl_1_1SpatialOperator_1_1OperatorConcept_1a326166d5f6412132bad233832b14de43" prot="public" virt="pure-virtual"><scope>NeoN::dsl::SpatialOperator::OperatorConcept</scope><name>getCoefficient</name></member>
      <member refid="structNeoN_1_1dsl_1_1SpatialOperator_1_1OperatorConcept_1a1fea5f37ab754d982ce2d2f2ad95dd4e" prot="public" virt="pure-virtual"><scope>NeoN::dsl::SpatialOperator::OperatorConcept</scope><name>getCoefficient</name></member>
      <member refid="structNeoN_1_1dsl_1_1SpatialOperator_1_1OperatorConcept_1ae55da577be801679aa4cccd6f1e18504" prot="public" virt="pure-virtual"><scope>NeoN::dsl::SpatialOperator::OperatorConcept</scope><name>getName</name></member>
      <member refid="structNeoN_1_1dsl_1_1SpatialOperator_1_1OperatorConcept_1a4507387da3934031fac8cb552532564e" prot="public" virt="pure-virtual"><scope>NeoN::dsl::SpatialOperator::OperatorConcept</scope><name>getType</name></member>
      <member refid="structNeoN_1_1dsl_1_1SpatialOperator_1_1OperatorConcept_1a162d1994fcbf5db4abd2024fe8da5433" prot="public" virt="pure-virtual"><scope>NeoN::dsl::SpatialOperator::OperatorConcept</scope><name>implicitOperation</name></member>
      <member refid="structNeoN_1_1dsl_1_1SpatialOperator_1_1OperatorConcept_1aeac3fdc9558e8cf2113811c969eeb0f2" prot="public" virt="pure-virtual"><scope>NeoN::dsl::SpatialOperator::OperatorConcept</scope><name>read</name></member>
      <member refid="structNeoN_1_1dsl_1_1SpatialOperator_1_1OperatorConcept_1a1fbb1fcf86cbc04f7b28183275f0aaa7" prot="public" virt="virtual"><scope>NeoN::dsl::SpatialOperator::OperatorConcept</scope><name>~OperatorConcept</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
