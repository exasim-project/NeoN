<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="conceptNeoN_1_1hasView" kind="concept">
    <compoundname>NeoN::hasView</compoundname>
    <includes refid="view_8hpp" local="no">view.hpp</includes>
    <templateparamlist>
      <param>
        <type>class Type</type>
      </param>
    </templateparamlist>
    <initializer>template&lt;class Type&gt;
concept <ref refid="conceptNeoN_1_1hasView" kindref="compound">NeoN::hasView</ref> = 
    requires(Type&amp; inst) { inst.view(); } || requires(const Type&amp; inst) { inst.view(); }    </initializer>
    <briefdescription>
<para>Concept, for any type which has the &apos;view&apos; method. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Types</parametername>
</parameternamelist>
<parameterdescription>
<para>Class type with potential &apos;view&apos; method. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/view.hpp" line="95" column="1"/>
  </compounddef>
</doxygen>
