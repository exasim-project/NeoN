<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classNeoN_1_1BoundaryData" kind="class" language="C++" prot="public">
    <compoundname>NeoN::BoundaryData</compoundname>
    <includes refid="boundaryData_8hpp" local="no">boundaryData.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classNeoN_1_1BoundaryData_1a933bd942a557e26f683769ca72007d78" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">Executor</ref></type>
        <definition>Executor NeoN::BoundaryData&lt; T &gt;::exec_</definition>
        <argsstring></argsstring>
        <name>exec_</name>
        <qualifiedname>NeoN::BoundaryData::exec_</qualifiedname>
        <briefdescription>
<para>The executor on which the field is stored. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="195" column="14" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoN_1_1BoundaryData_1a40a71775e71db9f7d834918275c17fd5" prot="private" static="no" mutable="no">
        <type><ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref>&lt; T &gt;</type>
        <definition>Vector&lt;T&gt; NeoN::BoundaryData&lt; T &gt;::value_</definition>
        <argsstring></argsstring>
        <name>value_</name>
        <qualifiedname>NeoN::BoundaryData::value_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The <ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref> storing the computed values from the boundary condition. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="196" column="12" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoN_1_1BoundaryData_1a2495cbd42ff5a3aedb0d66d7743107cb" prot="private" static="no" mutable="no">
        <type><ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref>&lt; T &gt;</type>
        <definition>Vector&lt;T&gt; NeoN::BoundaryData&lt; T &gt;::refValue_</definition>
        <argsstring></argsstring>
        <name>refValue_</name>
        <qualifiedname>NeoN::BoundaryData::refValue_</qualifiedname>
        <briefdescription>
<para>The <ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref> storing the Dirichlet boundary values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="198" column="12" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoN_1_1BoundaryData_1a8e71faa33be873f915bad35ce8657829" prot="private" static="no" mutable="no">
        <type><ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">scalar</ref> &gt;</type>
        <definition>Vector&lt;scalar&gt; NeoN::BoundaryData&lt; T &gt;::valueFraction_</definition>
        <argsstring></argsstring>
        <name>valueFraction_</name>
        <qualifiedname>NeoN::BoundaryData::valueFraction_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The <ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref> storing the fraction of the boundary value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="199" column="12" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoN_1_1BoundaryData_1afdc5895851e69eeee14f479a63271c04" prot="private" static="no" mutable="no">
        <type><ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref>&lt; T &gt;</type>
        <definition>Vector&lt;T&gt; NeoN::BoundaryData&lt; T &gt;::refGrad_</definition>
        <argsstring></argsstring>
        <name>refGrad_</name>
        <qualifiedname>NeoN::BoundaryData::refGrad_</qualifiedname>
        <briefdescription>
<para>The <ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref> storing the Neumann boundary values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="201" column="12" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoN_1_1BoundaryData_1a84a1a5288ffb0260e712e6ffbcef1180" prot="private" static="no" mutable="no">
        <type><ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref>&lt; int &gt;</type>
        <definition>Vector&lt;int&gt; NeoN::BoundaryData&lt; T &gt;::boundaryTypes_</definition>
        <argsstring></argsstring>
        <name>boundaryTypes_</name>
        <qualifiedname>NeoN::BoundaryData::boundaryTypes_</qualifiedname>
        <briefdescription>
<para>The <ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref> storing the boundary types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="202" column="12" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoN_1_1BoundaryData_1a4a13b13e86f264a361d0fd9903ae597c" prot="private" static="no" mutable="no">
        <type><ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref> &gt;</type>
        <definition>Vector&lt;localIdx&gt; NeoN::BoundaryData&lt; T &gt;::offset_</definition>
        <argsstring></argsstring>
        <name>offset_</name>
        <qualifiedname>NeoN::BoundaryData::offset_</qualifiedname>
        <briefdescription>
<para>The <ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref> storing the offsets of each boundary. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="203" column="12" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoN_1_1BoundaryData_1a8d0f0891808638e58f899e636056bcc3" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref></type>
        <definition>localIdx NeoN::BoundaryData&lt; T &gt;::nBoundaries_</definition>
        <argsstring></argsstring>
        <name>nBoundaries_</name>
        <qualifiedname>NeoN::BoundaryData::nBoundaries_</qualifiedname>
        <briefdescription>
<para>The number of boundaries. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="204" column="14" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoN_1_1BoundaryData_1a75aae5258d5211822ae325da695e5754" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref></type>
        <definition>localIdx NeoN::BoundaryData&lt; T &gt;::nBoundaryFaces_</definition>
        <argsstring></argsstring>
        <name>nBoundaryFaces_</name>
        <qualifiedname>NeoN::BoundaryData::nBoundaryFaces_</qualifiedname>
        <briefdescription>
<para>The number of boundary faces. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="205" column="14" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="205" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classNeoN_1_1BoundaryData_1a101f3b65d6af8463caab01ee954b7692" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoN::BoundaryData&lt; T &gt;::BoundaryData</definition>
        <argsstring>(const BoundaryData&lt; T &gt; &amp;rhs)</argsstring>
        <name>BoundaryData</name>
        <qualifiedname>NeoN::BoundaryData::BoundaryData</qualifiedname>
        <param>
          <type>const <ref refid="classNeoN_1_1BoundaryData" kindref="compound">BoundaryData</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>The boundaryVectors object to be copied. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="41" column="5" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="41" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1BoundaryData_1a511013efddae95937965d5c4c88983ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoN::BoundaryData&lt; T &gt;::BoundaryData</definition>
        <argsstring>(const Executor &amp;exec, const BoundaryData&lt; T &gt; &amp;rhs)</argsstring>
        <name>BoundaryData</name>
        <qualifiedname>NeoN::BoundaryData::BoundaryData</qualifiedname>
        <param>
          <type>const <ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">Executor</ref> &amp;</type>
          <declname>exec</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoN_1_1BoundaryData" kindref="compound">BoundaryData</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>The boundaryVectors object to be copied. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="53" column="5" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="53" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1BoundaryData_1a1dea4ea23b79ff66a039026f7700f47f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoN::BoundaryData&lt; T &gt;::BoundaryData</definition>
        <argsstring>(const Executor &amp;exec, localIdx nBoundaryFaces, localIdx nBoundaryTypes)</argsstring>
        <name>BoundaryData</name>
        <qualifiedname>NeoN::BoundaryData::BoundaryData</qualifiedname>
        <param>
          <type>const <ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">Executor</ref> &amp;</type>
          <declname>exec</declname>
        </param>
        <param>
          <type><ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref></type>
          <declname>nBoundaryFaces</declname>
        </param>
        <param>
          <type><ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref></type>
          <declname>nBoundaryTypes</declname>
        </param>
        <briefdescription>
<para>constructor with default initialized Vectors from sizes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>exec</parametername>
</parameternamelist>
<parameterdescription>
<para>- The executor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nBoundaryFaces</parametername>
</parameternamelist>
<parameterdescription>
<para>- The total number of boundary faces </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nBoundaryType</parametername>
</parameternamelist>
<parameterdescription>
<para>- The total number of boundary patches </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="67" column="5" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="67" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1BoundaryData_1a7ddc0754967ebbf2f8ad82c82f58b1d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoN::BoundaryData&lt; T &gt;::BoundaryData</definition>
        <argsstring>(const Executor &amp;exec, const std::vector&lt; localIdx &gt; &amp;offsets)</argsstring>
        <name>BoundaryData</name>
        <qualifiedname>NeoN::BoundaryData::BoundaryData</qualifiedname>
        <param>
          <type>const <ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">Executor</ref> &amp;</type>
          <declname>exec</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref> &gt; &amp;</type>
          <declname>offsets</declname>
        </param>
        <briefdescription>
<para>constructor from a given offsets vector @warn all members except offsets are default constructed </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>exec</parametername>
</parameternamelist>
<parameterdescription>
<para>- The executor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offsets</parametername>
</parameternamelist>
<parameterdescription>
<para>- The total number of boundary faces </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="80" column="5" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="80" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1BoundaryData_1ad85f79e856706dcc3bb9b7cb71a5b7cd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref>&lt; T &gt; &amp;</type>
        <definition>const Vector&lt; T &gt; &amp; NeoN::BoundaryData&lt; T &gt;::value</definition>
        <argsstring>() const</argsstring>
        <name>value</name>
        <qualifiedname>NeoN::BoundaryData::value</qualifiedname>
        <briefdescription>
<para>Get the view storing the computed values from the boundary condition.   </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The view storing the computed values.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="88" column="18" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="88" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1BoundaryData_1aeaf47d468b8573eae09ef99e990c6f85" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref>&lt; T &gt; &amp;</type>
        <definition>Vector&lt; T &gt; &amp; NeoN::BoundaryData&lt; T &gt;::value</definition>
        <argsstring>()</argsstring>
        <name>value</name>
        <qualifiedname>NeoN::BoundaryData::value</qualifiedname>
        <briefdescription>
<para>Get the view storing the computed values from the boundary condition. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The view storing the computed values. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="95" column="12" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="95" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1BoundaryData_1ac9cdc3476319a4dfd80a32e6702850f4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref>&lt; T &gt; &amp;</type>
        <definition>const Vector&lt; T &gt; &amp; NeoN::BoundaryData&lt; T &gt;::refValue</definition>
        <argsstring>() const</argsstring>
        <name>refValue</name>
        <qualifiedname>NeoN::BoundaryData::refValue</qualifiedname>
        <briefdescription>
<para>Get the view storing the Dirichlet boundary values.   </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The view storing the Dirichlet boundary values.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="98" column="18" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="98" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1BoundaryData_1a050115ea5a508720ab6a371c2e2fc40a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref>&lt; T &gt; &amp;</type>
        <definition>Vector&lt; T &gt; &amp; NeoN::BoundaryData&lt; T &gt;::refValue</definition>
        <argsstring>()</argsstring>
        <name>refValue</name>
        <qualifiedname>NeoN::BoundaryData::refValue</qualifiedname>
        <briefdescription>
<para>Get the view storing the Dirichlet boundary values. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The view storing the Dirichlet boundary values. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="104" column="12" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="104" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1BoundaryData_1af56b59032dd33aa346caed8ed12c876f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">scalar</ref> &gt; &amp;</type>
        <definition>const Vector&lt; scalar &gt; &amp; NeoN::BoundaryData&lt; T &gt;::valueFraction</definition>
        <argsstring>() const</argsstring>
        <name>valueFraction</name>
        <qualifiedname>NeoN::BoundaryData::valueFraction</qualifiedname>
        <briefdescription>
<para>Get the view storing the fraction of the boundary value.   </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The view storing the fraction of the boundary value.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="107" column="18" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="107" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1BoundaryData_1a358cbb227b3b4bbb535de710fb45080b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">scalar</ref> &gt; &amp;</type>
        <definition>Vector&lt; scalar &gt; &amp; NeoN::BoundaryData&lt; T &gt;::valueFraction</definition>
        <argsstring>()</argsstring>
        <name>valueFraction</name>
        <qualifiedname>NeoN::BoundaryData::valueFraction</qualifiedname>
        <briefdescription>
<para>Get the view storing the fraction of the boundary value. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The view storing the fraction of the boundary value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="113" column="12" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="113" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1BoundaryData_1a0eaea763f073e9551063b873665ae14a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref>&lt; T &gt; &amp;</type>
        <definition>const Vector&lt; T &gt; &amp; NeoN::BoundaryData&lt; T &gt;::refGrad</definition>
        <argsstring>() const</argsstring>
        <name>refGrad</name>
        <qualifiedname>NeoN::BoundaryData::refGrad</qualifiedname>
        <briefdescription>
<para>Get the view storing the Neumann boundary values.   </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The view storing the Neumann boundary values.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="116" column="18" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="116" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1BoundaryData_1a2f2d825d37a92f9f3de2390a330659cc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref>&lt; T &gt; &amp;</type>
        <definition>Vector&lt; T &gt; &amp; NeoN::BoundaryData&lt; T &gt;::refGrad</definition>
        <argsstring>()</argsstring>
        <name>refGrad</name>
        <qualifiedname>NeoN::BoundaryData::refGrad</qualifiedname>
        <briefdescription>
<para>Get the view storing the Neumann boundary values. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The view storing the Neumann boundary values. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="122" column="12" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="122" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1BoundaryData_1a60a1ed15ef5cadb62c0512a285ed8629" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref>&lt; int &gt; &amp;</type>
        <definition>const Vector&lt; int &gt; &amp; NeoN::BoundaryData&lt; T &gt;::boundaryTypes</definition>
        <argsstring>() const</argsstring>
        <name>boundaryTypes</name>
        <qualifiedname>NeoN::BoundaryData::boundaryTypes</qualifiedname>
        <briefdescription>
<para>Get the view storing the boundary types. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The view storing the boundary types. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="128" column="18" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="128" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1BoundaryData_1a7b726391a9629070b2cd2a7fcec29f59" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref> &gt; &amp;</type>
        <definition>const Vector&lt; localIdx &gt; &amp; NeoN::BoundaryData&lt; T &gt;::offset</definition>
        <argsstring>() const</argsstring>
        <name>offset</name>
        <qualifiedname>NeoN::BoundaryData::offset</qualifiedname>
        <briefdescription>
<para>Get the view storing the offsets of each boundary. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The view storing the offsets of each boundary. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="134" column="18" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="134" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1BoundaryData_1a43dd63100a240f03820bd1dd56329bd3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref></type>
        <definition>localIdx NeoN::BoundaryData&lt; T &gt;::nBoundaries</definition>
        <argsstring>() const</argsstring>
        <name>nBoundaries</name>
        <qualifiedname>NeoN::BoundaryData::nBoundaries</qualifiedname>
        <briefdescription>
<para>Get the number of boundaries. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The number of boundaries. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="140" column="14" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="140" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1BoundaryData_1ae02127156206dae46c11bf1d84c25a21" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref></type>
        <definition>localIdx NeoN::BoundaryData&lt; T &gt;::nBoundaryFaces</definition>
        <argsstring>() const</argsstring>
        <name>nBoundaryFaces</name>
        <qualifiedname>NeoN::BoundaryData::nBoundaryFaces</qualifiedname>
        <briefdescription>
<para>Get the number of boundary faces. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The number of boundary faces. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="146" column="14" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="146" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1BoundaryData_1aa90fa38463e69059c9c8ad7b717d73cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">Executor</ref> &amp;</type>
        <definition>const Executor &amp; NeoN::BoundaryData&lt; T &gt;::exec</definition>
        <argsstring>()</argsstring>
        <name>exec</name>
        <qualifiedname>NeoN::BoundaryData::exec</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="148" column="20" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="148" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1BoundaryData_1a756dd1f45f542b2b12efa511871ad8a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoN_1_1BoundaryData" kindref="compound">BoundaryData</ref>&lt; T &gt; &amp;</type>
        <definition>BoundaryData&lt; T &gt; &amp; NeoN::BoundaryData&lt; T &gt;::operator=</definition>
        <argsstring>(const BoundaryData&lt; T &gt; &amp;rhs)</argsstring>
        <name>operator=</name>
        <qualifiedname>NeoN::BoundaryData::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classNeoN_1_1BoundaryData" kindref="compound">BoundaryData</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="150" column="18" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="150" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1BoundaryData_1ad45bbd0eeb993923bf2264fc34a98ebd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoN_1_1BoundaryData" kindref="compound">BoundaryData</ref>&lt; T &gt; &amp;</type>
        <definition>BoundaryData&lt; T &gt; &amp; NeoN::BoundaryData&lt; T &gt;::operator=</definition>
        <argsstring>(const BoundaryData&lt; T &gt; &amp;&amp;rhs)</argsstring>
        <name>operator=</name>
        <qualifiedname>NeoN::BoundaryData::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classNeoN_1_1BoundaryData" kindref="compound">BoundaryData</ref>&lt; T &gt; &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="167" column="18" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="167" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1BoundaryData_1a4611b34b97e77105f477f52beb1c621d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::pair&lt; <ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref>, <ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref> &gt;</type>
        <definition>std::pair&lt; localIdx, localIdx &gt; NeoN::BoundaryData&lt; T &gt;::range</definition>
        <argsstring>(localIdx patchId) const</argsstring>
        <name>range</name>
        <qualifiedname>NeoN::BoundaryData::range</qualifiedname>
        <param>
          <type><ref refid="namespaceNeoN_1a40785cd3c378b425dd30ae7f4d7dcabc" kindref="member">localIdx</ref></type>
          <declname>patchId</declname>
        </param>
        <briefdescription>
<para>Get the range for a given patchId. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The number of boundary faces. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="188" column="15" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="188" bodyend="191"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Represents the boundary fields for a computational domain. </para>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="classNeoN_1_1BoundaryData" kindref="compound">BoundaryData</ref> class stores the boundary conditions and related information for a computational domain. It provides access to the computed values, reference values, value fractions, reference gradients, boundary types, offsets, and the number of boundaries and boundary faces.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ValueType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the underlying field values </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="32" column="1" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="33" bodyend="206"/>
    <listofallmembers>
      <member refid="classNeoN_1_1BoundaryData_1a101f3b65d6af8463caab01ee954b7692" prot="public" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>BoundaryData</name></member>
      <member refid="classNeoN_1_1BoundaryData_1a511013efddae95937965d5c4c88983ec" prot="public" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>BoundaryData</name></member>
      <member refid="classNeoN_1_1BoundaryData_1a1dea4ea23b79ff66a039026f7700f47f" prot="public" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>BoundaryData</name></member>
      <member refid="classNeoN_1_1BoundaryData_1a7ddc0754967ebbf2f8ad82c82f58b1d4" prot="public" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>BoundaryData</name></member>
      <member refid="classNeoN_1_1BoundaryData_1a60a1ed15ef5cadb62c0512a285ed8629" prot="public" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>boundaryTypes</name></member>
      <member refid="classNeoN_1_1BoundaryData_1a84a1a5288ffb0260e712e6ffbcef1180" prot="private" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>boundaryTypes_</name></member>
      <member refid="classNeoN_1_1BoundaryData_1aa90fa38463e69059c9c8ad7b717d73cf" prot="public" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>exec</name></member>
      <member refid="classNeoN_1_1BoundaryData_1a933bd942a557e26f683769ca72007d78" prot="private" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>exec_</name></member>
      <member refid="classNeoN_1_1BoundaryData_1a43dd63100a240f03820bd1dd56329bd3" prot="public" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>nBoundaries</name></member>
      <member refid="classNeoN_1_1BoundaryData_1a8d0f0891808638e58f899e636056bcc3" prot="private" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>nBoundaries_</name></member>
      <member refid="classNeoN_1_1BoundaryData_1ae02127156206dae46c11bf1d84c25a21" prot="public" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>nBoundaryFaces</name></member>
      <member refid="classNeoN_1_1BoundaryData_1a75aae5258d5211822ae325da695e5754" prot="private" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>nBoundaryFaces_</name></member>
      <member refid="classNeoN_1_1BoundaryData_1a7b726391a9629070b2cd2a7fcec29f59" prot="public" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>offset</name></member>
      <member refid="classNeoN_1_1BoundaryData_1a4a13b13e86f264a361d0fd9903ae597c" prot="private" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>offset_</name></member>
      <member refid="classNeoN_1_1BoundaryData_1a756dd1f45f542b2b12efa511871ad8a8" prot="public" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>operator=</name></member>
      <member refid="classNeoN_1_1BoundaryData_1ad45bbd0eeb993923bf2264fc34a98ebd" prot="public" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>operator=</name></member>
      <member refid="classNeoN_1_1BoundaryData_1a4611b34b97e77105f477f52beb1c621d" prot="public" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>range</name></member>
      <member refid="classNeoN_1_1BoundaryData_1a0eaea763f073e9551063b873665ae14a" prot="public" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>refGrad</name></member>
      <member refid="classNeoN_1_1BoundaryData_1a2f2d825d37a92f9f3de2390a330659cc" prot="public" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>refGrad</name></member>
      <member refid="classNeoN_1_1BoundaryData_1afdc5895851e69eeee14f479a63271c04" prot="private" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>refGrad_</name></member>
      <member refid="classNeoN_1_1BoundaryData_1ac9cdc3476319a4dfd80a32e6702850f4" prot="public" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>refValue</name></member>
      <member refid="classNeoN_1_1BoundaryData_1a050115ea5a508720ab6a371c2e2fc40a" prot="public" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>refValue</name></member>
      <member refid="classNeoN_1_1BoundaryData_1a2495cbd42ff5a3aedb0d66d7743107cb" prot="private" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>refValue_</name></member>
      <member refid="classNeoN_1_1BoundaryData_1ad85f79e856706dcc3bb9b7cb71a5b7cd" prot="public" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>value</name></member>
      <member refid="classNeoN_1_1BoundaryData_1aeaf47d468b8573eae09ef99e990c6f85" prot="public" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>value</name></member>
      <member refid="classNeoN_1_1BoundaryData_1a40a71775e71db9f7d834918275c17fd5" prot="private" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>value_</name></member>
      <member refid="classNeoN_1_1BoundaryData_1af56b59032dd33aa346caed8ed12c876f" prot="public" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>valueFraction</name></member>
      <member refid="classNeoN_1_1BoundaryData_1a358cbb227b3b4bbb535de710fb45080b" prot="public" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>valueFraction</name></member>
      <member refid="classNeoN_1_1BoundaryData_1a8e71faa33be873f915bad35ce8657829" prot="private" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>valueFraction_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
