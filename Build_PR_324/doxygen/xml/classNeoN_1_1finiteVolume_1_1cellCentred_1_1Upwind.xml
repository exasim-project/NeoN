<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Upwind" kind="class" language="C++" prot="public">
    <compoundname>NeoN::finiteVolume::cellCentred::Upwind</compoundname>
    <basecompoundref prot="public" virt="non-virtual">SurfaceInterpolationFactory&lt; ValueType &gt;::template Register</basecompoundref>
    <includes refid="upwind_8hpp" local="no">upwind.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename ValueType</type>
      </param>
    </templateparamlist>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Upwind_1a9a9e4d5507eb0c6721acf8a30b24e126" prot="private" static="no">
        <type><ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1SurfaceInterpolationFactory" kindref="compound">SurfaceInterpolationFactory</ref>&lt; ValueType &gt;::template <ref refid="classRuntimeSelectionFactory_1_1Register" kindref="compound">Register</ref>&lt; <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Upwind" kindref="compound">Upwind</ref>&lt; ValueType &gt; &gt;</type>
        <definition>using NeoN::finiteVolume::cellCentred::Upwind&lt; ValueType &gt;::Base =  SurfaceInterpolationFactory&lt;ValueType&gt;::template Register&lt;Upwind&lt;ValueType&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>Base</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::Upwind::Base</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/upwind.hpp" line="51" column="5" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/upwind.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Upwind_1ae7f9420c04583561626e8ef354f97691" prot="private" static="no" mutable="no">
        <type>const std::shared_ptr&lt; <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1GeometryScheme" kindref="compound">GeometryScheme</ref> &gt;</type>
        <definition>const std::shared_ptr&lt;GeometryScheme&gt; NeoN::finiteVolume::cellCentred::Upwind&lt; ValueType &gt;::geometryScheme_</definition>
        <argsstring></argsstring>
        <name>geometryScheme_</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::Upwind::geometryScheme_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/upwind.hpp" line="104" column="27" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/upwind.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Upwind_1a17762f667e28fbf0501c8e59e02e723e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoN::finiteVolume::cellCentred::Upwind&lt; ValueType &gt;::Upwind</definition>
        <argsstring>(const Executor &amp;exec, const UnstructuredMesh &amp;mesh, Input input)</argsstring>
        <name>Upwind</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::Upwind::Upwind</qualifiedname>
        <param>
          <type>const <ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">Executor</ref> &amp;</type>
          <declname>exec</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoN_1_1UnstructuredMesh" kindref="compound">UnstructuredMesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type><ref refid="namespaceNeoN_1a0f89cac0ba212d1026c9fedc65742cea" kindref="member">Input</ref></type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/upwind.hpp" line="55" column="5" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/upwind.hpp" bodystart="55" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Upwind_1ad0c865669e152bc98ba7fd7b09307755" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NeoN::finiteVolume::cellCentred::Upwind&lt; ValueType &gt;::interpolate</definition>
        <argsstring>(const VolumeField&lt; ValueType &gt; &amp;src, SurfaceField&lt; ValueType &gt; &amp;dst) const override</argsstring>
        <name>interpolate</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::Upwind::interpolate</qualifiedname>
        <param>
          <type>const <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField" kindref="compound">VolumeField</ref>&lt; ValueType &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1SurfaceField" kindref="compound">SurfaceField</ref>&lt; ValueType &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/upwind.hpp" line="64" column="10" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/upwind.hpp" bodystart="64" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Upwind_1af8a7120e242839d26ae0c61cf3d36259" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NeoN::finiteVolume::cellCentred::Upwind&lt; ValueType &gt;::interpolate</definition>
        <argsstring>(const SurfaceField&lt; scalar &gt; &amp;flux, const VolumeField&lt; ValueType &gt; &amp;src, SurfaceField&lt; ValueType &gt; &amp;dst) const override</argsstring>
        <name>interpolate</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::Upwind::interpolate</qualifiedname>
        <param>
          <type>const <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1SurfaceField" kindref="compound">SurfaceField</ref>&lt; <ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">scalar</ref> &gt; &amp;</type>
          <declname>flux</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField" kindref="compound">VolumeField</ref>&lt; ValueType &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1SurfaceField" kindref="compound">SurfaceField</ref>&lt; ValueType &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/upwind.hpp" line="72" column="10" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/upwind.hpp" bodystart="72" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Upwind_1a4e81dc06c47bf05d392e0068f75ce162" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NeoN::finiteVolume::cellCentred::Upwind&lt; ValueType &gt;::weight</definition>
        <argsstring>(const VolumeField&lt; ValueType &gt; &amp;, SurfaceField&lt; scalar &gt; &amp;) const override</argsstring>
        <name>weight</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::Upwind::weight</qualifiedname>
        <param>
          <type>const <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField" kindref="compound">VolumeField</ref>&lt; ValueType &gt; &amp;</type>
        </param>
        <param>
          <type><ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1SurfaceField" kindref="compound">SurfaceField</ref>&lt; <ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">scalar</ref> &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/upwind.hpp" line="82" column="10" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/upwind.hpp" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Upwind_1a2dc07cd55d0949c1c56359ed17d30681" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NeoN::finiteVolume::cellCentred::Upwind&lt; ValueType &gt;::weight</definition>
        <argsstring>(const SurfaceField&lt; scalar &gt; &amp;faceFlux, const VolumeField&lt; ValueType &gt; &amp;src, SurfaceField&lt; scalar &gt; &amp;weights) const override</argsstring>
        <name>weight</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::Upwind::weight</qualifiedname>
        <param>
          <type>const <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1SurfaceField" kindref="compound">SurfaceField</ref>&lt; <ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">scalar</ref> &gt; &amp;</type>
          <declname>faceFlux</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1VolumeField" kindref="compound">VolumeField</ref>&lt; ValueType &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1SurfaceField" kindref="compound">SurfaceField</ref>&lt; <ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">scalar</ref> &gt; &amp;</type>
          <declname>weights</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/upwind.hpp" line="88" column="10" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/upwind.hpp" bodystart="88" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Upwind_1a9e41ec6b974f6bac70147ae3efb9102e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1SurfaceInterpolationFactory" kindref="compound">SurfaceInterpolationFactory</ref>&lt; ValueType &gt; &gt;</type>
        <definition>std::unique_ptr&lt; SurfaceInterpolationFactory&lt; ValueType &gt; &gt; NeoN::finiteVolume::cellCentred::Upwind&lt; ValueType &gt;::clone</definition>
        <argsstring>() const override</argsstring>
        <name>clone</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::Upwind::clone</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/upwind.hpp" line="97" column="21" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/upwind.hpp" bodystart="97" bodyend="100"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Upwind_1a2c574baa308f5845a62aaaac8abbcb52" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string NeoN::finiteVolume::cellCentred::Upwind&lt; ValueType &gt;::name</definition>
        <argsstring>()</argsstring>
        <name>name</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::Upwind::name</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/upwind.hpp" line="58" column="24" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/upwind.hpp" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Upwind_1a37ba07aede2db6d939ade05f2bf71d15" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string NeoN::finiteVolume::cellCentred::Upwind&lt; ValueType &gt;::doc</definition>
        <argsstring>()</argsstring>
        <name>doc</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::Upwind::doc</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/upwind.hpp" line="60" column="24" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/upwind.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Upwind_1a41b85b55e050c8edeb13e7532ef516df" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string NeoN::finiteVolume::cellCentred::Upwind&lt; ValueType &gt;::schema</definition>
        <argsstring>()</argsstring>
        <name>schema</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::Upwind::schema</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/upwind.hpp" line="62" column="24" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/upwind.hpp" bodystart="62" bodyend="62"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>NeoN::finiteVolume::cellCentred::Upwind&lt; ValueType &gt;</label>
        <link refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Upwind"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>SurfaceInterpolationFactory::template Register&lt; Upwind&lt; ValueType &gt; &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>NeoN::finiteVolume::cellCentred::Upwind&lt; ValueType &gt;</label>
        <link refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Upwind"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>SurfaceInterpolationFactory::template Register&lt; Upwind&lt; ValueType &gt; &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/upwind.hpp" line="48" column="1" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/finiteVolume/cellCentred/interpolation/upwind.hpp" bodystart="49" bodyend="105"/>
    <listofallmembers>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Upwind_1a9a9e4d5507eb0c6721acf8a30b24e126" prot="private" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::Upwind</scope><name>Base</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Upwind_1a9e41ec6b974f6bac70147ae3efb9102e" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::Upwind</scope><name>clone</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Upwind_1a37ba07aede2db6d939ade05f2bf71d15" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::Upwind</scope><name>doc</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Upwind_1ae7f9420c04583561626e8ef354f97691" prot="private" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::Upwind</scope><name>geometryScheme_</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Upwind_1ad0c865669e152bc98ba7fd7b09307755" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::Upwind</scope><name>interpolate</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Upwind_1af8a7120e242839d26ae0c61cf3d36259" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::Upwind</scope><name>interpolate</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Upwind_1a2c574baa308f5845a62aaaac8abbcb52" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::Upwind</scope><name>name</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Upwind_1a41b85b55e050c8edeb13e7532ef516df" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::Upwind</scope><name>schema</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Upwind_1a17762f667e28fbf0501c8e59e02e723e" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::Upwind</scope><name>Upwind</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Upwind_1a4e81dc06c47bf05d392e0068f75ce162" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::Upwind</scope><name>weight</name></member>
      <member refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Upwind_1a2dc07cd55d0949c1c56359ed17d30681" prot="public" virt="non-virtual"><scope>NeoN::finiteVolume::cellCentred::Upwind</scope><name>weight</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
